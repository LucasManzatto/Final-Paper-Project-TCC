{"version":3,"sources":["components/MainPage/actions.js","constants.js","components/MainPage/selectors.js","hooks/UsePrevious.js","components/MainPage/BottomArea/axis.js","components/MainPage/BottomArea/line.js","components/MainPage/utils.js","components/MainPage/BottomArea/Data/Binary.jsx","hooks/UseAnimation.js","components/MainPage/BottomArea/Graph.jsx","components/MainPage/BottomArea/Data/BPSK.jsx","components/MainPage/BottomArea/Data/FSK.jsx","components/MainPage/BottomArea/Data/AWGN.jsx","components/MainPage/BottomArea/Data/ASK.jsx","components/MainPage/BottomArea/Data/CarrierWave.jsx","components/MainPage/BottomArea/BlockCard.jsx","components/MainPage/BottomArea/ExpandedBlockCard.jsx","components/MainPage/BottomArea/BottomArea.jsx","components/MainPage/SideBar/SideBarBlock.jsx","components/MainPage/ProjectArea/LinkLine.jsx","components/MainPage/ProjectArea/Block.jsx","components/MainPage/ProjectArea/ProjectArea.jsx","components/MainPage/Menu.jsx","components/MainPage/SideBar/SideBar.jsx","components/MainPage/App.jsx","components/LoginPage/LoginPage.jsx","registerServiceWorker.js","components/MainPage/reducer.js","initialState.js","index.js"],"names":["addBlockToProject","createAction","blockClicked","blocksToLink","moveBlock","deleteBlock","deleteLink","payload","block","links","filter","link","linked","data","render","type","pauseBlock","selectLink","updateBlockValue","updateBlockData","updateCurrentProject","updateDropDown","projectBlocksSelector","state","mainPage","present","projects","currentProject","blocks","linkedBlocksSelector","createSelector","_","props","map","find","id","getIndexOfBlockSelector","indexOf","sort","property","sortOrder","substr","a","b","result","dynamicSort","usePrevious","value","ref","useRef","useEffect","current","Axis","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderAxis","bind","assertThisInitialized","inherits","createClass","key","_this$props","scale","axis","tickValues","node","refs","axisFn","select","react_default","createElement","transform","React","Component","Line","xScale","yScale","length","fullData","new_data","forEach","item","index","push","x","y","createFullArray","path","line","curve","curveLinear","d","lineFunction","style","stroke","strokeWidth","fill","shiftArray","clonedData","clone","shift","createTimeArray","totalTime","createTimeArrayWithIndexes","time","Array","i","getScales","dimensions","blockName","resolution","amplitude","xLine","yLine","yAxis","_findMinMax","dataArray","maxX","minY","Number","MAX_SAFE_INTEGER","maxY","MIN_SAFE_INTEGER","minX","findMinMax","scaleLinear","domain","toFixed","range","width","height","valueToBinary","number","findLink","linkName","name","blockTypes","calculateOffset","element","componentOffset","document","getElementsByClassName","getBoundingClientRect","offsetX","window","pageXOffset","left","offsetY","pageYOffset","top","createDataArray","binaryArray","size","binaryAux","connect","clickedBlock","indexOfBlock","selectors","oldProps","binaryData","binary","_useState","useState","_useState2","slicedToArray","setData","requestRef","animate","paused","prevData","requestAnimationFrame","newData","cancelAnimationFrame","line_Line","axis_Axis","axisRight","useAnimation","createDataArrayArgs","updateOnChanges","wasPaused","_useState3","_useState4","firstRender","setFirstRender","dispatch","useDispatch","apply","toConsumableArray","concat","Graph","_ref","carrierDataArray","carrierData","position","BPSKData","useSelector","_findLink","carrierAmplitude","Graph_Graph","frequency","wt","Math","PI","sin","FSKData","carrierFrequency","rnorm","AWGNData","linkedBlock","ASKData","angularFrequency","currentTime","CarrierWave","BlockCard","containerWidth","expandedHeight","innerHeight","expanded","Binary","Data_CarrierWave","BPSK","FSK","ASK","AWGN","Dimensions","Transition","Slide_default","assign","direction","ExpandedBlockCard","open","handleClickOpen","setState","handleClose","onClickHandler","blockUpdated","updated","classes","haveProperties","isNil","showProperties","className","flex","Typography_default","color","display","alignItems","justifyContent","cursor","AspectRatio_default","onClick","Dialog_default","fullScreen","onClose","TransitionComponent","AppBar_default","appBar","Toolbar_default","IconButton_default","aria-label","Close_default","variant","Paper_default","react_flexbox_grid_lib","center","textAlign","paddingLeft","BottomArea_BlockCard","ExpandedBlockCardWithStyles","withStyles","iconStyle","actions","withWidth","blocksNum","ceil","getHeigth","renderBlockCards","Grid_default","priority","neededLinks","container","xs","sm","md","PlayArrow_default","event","Pause_default","align","marginTop","justify","BottomArea_ExpandedBlockCard","spacing","elevation","square","fontWeight","ID","random","toString","renderRequiredLinks","requiredLinks","console","log","paddingTop","gutterBottom","List_default","ListItem_default","ListItemText_default","primary","react","description","LinkLine","selectedLink","blockDimensions","blockTotalWidth","blockTotalHeight","outputHeight","outputWidth","linkPosition","x0","x1","y0","y1","linkBlock","borderStyle","react_lineto","borderWidth","borderColor","zIndex","BASE_WIDTH","blockStyle","backgroundColor","blockStyleInput","maxWidth","blockStyleOutput","blockTopRow","OUTPUT","INPUT","Block","componentDidMount","offset","projectTabOffset","getBounds","right","bottom","handleClick","anchorEl","currentTarget","handleDrag","e","ui","_this$props$block$pos","deltaPosition","deltaX","deltaY","linkBlocks","blocksToLinkArray","blocksToLinkArrayIsFull","includes","hasInput","array","renderLineToCursor","_this$props2","cursorPosition","_this$state","isLinking","keysToShow","marginLeft","capitalize","sum","ChevronLeft_default","updateBlockOnClick","ChevronRight_default","blockId","inputOutputSize","inputOutputHeight","inputOutputWidth","blockWidth","blockHeight","_this$props3","lineBlock","_this$state2","bounds","getPosition","react_draggable_default","grid","onDrag","objectSpread","Info_default","fontSize","margin","Popover_default","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","SideBar_SideBarBlock","ProjectArea_LinkLine","_state$mainPage$prese","linkedBlocks","projectTabStyle","ProjectTab","renderBlocks","ProjectArea_Block","elementDimensions","projectArea","project","Tabs_default","Tab_default","label","ReactCursorPosition","ProjectArea_ProjectTab","root","flexGrow","menuButton","marginRight","Menu_default","Button_default","idCounter","drawerOpen","setDrawerOpen","ItemList","button","blocksList","component","subheader","ListSubheader_default","Hidden_default","smUp","Drawer_default","tabIndex","role","onKeyDown","xsDown","styles","theme","paper","padding","unit","palette","text","secondary","App","isAuthenticated","paddingRight","dist_default","keyEventName","KEYPRESS","keyValue","onKeyHandle","undo","CssBaseline_default","MainPage_Menu","MainPage_SideBar_SideBar","MainPage_ProjectArea_ProjectArea","smDown","MainPage_BottomArea_BottomArea","Redirect","to","AppWithStylesWithoutRouter","withRouter","ActionCreators","LoginPage","validateForm","usuario","senha","handleChange","defineProperty","target","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","history","alert","stop","_x","arguments","minHeight","Card_default","card","CardHeader_default","title","onSubmit","noValidate","autoComplete","CardContent_default","TextField_default","autoFocus","textField","onChange","margisn","CardActions_default","disabled","isLocalhost","mixins","gutters","paddingBottom","media","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","reducer","createReducer","user","0","totalBlocks","1","_createReducer","action","newBlock","sortBy","blockToReceiveData","blockToSendData","blockIndex","findBlockIndex","bl","splice","arrayIndex","findIndex","prop","_action$payload","projectBlocks","_action$payload2","p","undoable","limit","middleware","getDefaultMiddleware","logger","store","configureStore","devTools","process","theme2","createMuiTheme","background","default","main","ReactDOM","es","core_styles","MainPage_App","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.26f51c1c.chunk.js","sourcesContent":["import * as consts from '../../constants'\r\nimport { createAction } from 'redux-starter-kit'\r\n\r\n\r\n\r\nexport const addBlockToProject = createAction('ADD_TO_PROJECT')\r\n\r\nexport const blockClicked = createAction('BLOCK_CLICKED')\r\n\r\nexport const blocksToLink = createAction('BLOCKS_TO_LINK')\r\n\r\nexport const moveBlock = createAction('MOVE_BLOCK')\r\n\r\nexport const deleteBlock = createAction('DELETE_BLOCK')\r\n\r\n// Quando um link é deletado, é necessário sempre apagar a data porque quando um\r\n// link é deletado o bloco num está com todos os links e não deve ter nenhuma\r\n// data\r\nexport const deleteLink = payload => {\r\n  payload.block.links = payload\r\n    .block\r\n    .links\r\n    .filter(link => link !== payload.link)\r\n  payload.block.linked = false\r\n  payload.block.data = []\r\n  payload.block.render = false\r\n  return { type: consts.DELETE_LINK, payload: payload }\r\n}\r\n\r\nexport const pauseBlock = createAction('PAUSE_BLOCK')\r\n\r\nexport const selectLink = createAction('SELECT_LINK')\r\n\r\nexport const updateBlockValue = createAction('UPDATE_BLOCK_VALUE')\r\n\r\nexport const updateBlockData = createAction('UPDATE_BLOCK_DATA')\r\n\r\nexport const updateCurrentProject = createAction('UPDATE_CURRENT_PROJECT')\r\n\r\nexport const updateDropDown = payload => ({ type: consts.UPDATE_DROPDOWN, payload })\r\n","export const ADD_TO_PROJECT = 'ADD_TO_PROJECT'\r\nexport const BLOCK_CLICKED = 'BLOCK_CLICKED'\r\nexport const BLOCK_LIST = 'BLOCK_LIST'\r\nexport const BLOCK_UPDATED = 'BLOCK_UPDATED'\r\nexport const BLOCKS_TO_LINK = 'BLOCKS_TO_LINK'\r\nexport const CREATE_LINK = 'CREATE_LINK'\r\nexport const DELETE_BLOCK = 'DELETE_BLOCK'\r\nexport const DELETE_LINK = 'DELETE_LINK'\r\nexport const LOGIN = 'LOGIN'\r\nexport const PAUSE_BLOCK = 'PAUSE_BLOCK'\r\nexport const SELECT_LINK = 'SELECT_LINK'\r\nexport const SET_BLOCK_VALUE = 'SET_BLOCK_VALUE'\r\nexport const TRACK_LOCATION = 'TRACK_LOCATION'\r\nexport const UPDATE_BLOCK = 'UPDATE_BLOCK'\r\nexport const UPDATE_CURRENT_PROJECT = 'UPDATE_CURRENT_PROJECT'\r\nexport const UPDATE_DATA = 'UPDATE_DATA'\r\nexport const UPDATE_DROPDOWN = 'UPDATE_DROPDOWN'\r\nexport const UPDATE_VALUE = 'UPDATE_VALUE'\r\n","import { createSelector } from 'reselect'\r\nimport _ from 'lodash'\r\n\r\nexport const allBlocksSelector = state => state.mainPage.blocks\r\n\r\nexport const clickedBlockSelector = state => state.mainPage.present.clickedBlock\r\n\r\nexport const projectBlocksSelector = state => state.mainPage.present.projects[state.mainPage.present.currentProject].blocks\r\n\r\nexport const linkedBlocksSelector = createSelector((_, props) => props.block, projectBlocksSelector, (block, blocks) => {\r\n  return block\r\n    .links\r\n    .map(link => _.find(blocks, block => block.id === link))\r\n})\r\n\r\nexport const getIndexOfBlockSelector = (state, props) => {\r\n  return state\r\n    .mainPage\r\n    .present\r\n    .projects[state.mainPage.present.currentProject]\r\n    .blocks\r\n    .indexOf(props.block)\r\n};\r\n\r\nexport const getPrioritySelector = createSelector(projectBlocksSelector, blocks => {\r\n  blocks.sort(dynamicSort('priority'))\r\n})\r\n\r\nfunction dynamicSort (property) {\r\n  var sortOrder = 1\r\n  if (property[0] === '-') {\r\n    sortOrder = -1\r\n    property = property.substr(1)\r\n  }\r\n  return function (a, b) {\r\n    var result = a[property] < b[property]\r\n      ? -1\r\n      : a[property] > b[property]\r\n        ? 1\r\n        : 0\r\n    return result * sortOrder\r\n  };\r\n}\r\n","import { useRef, useEffect } from 'react'\r\nconst usePrevious = value => {\r\n  const ref = useRef()\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n  return ref.current\r\n}\r\nexport default usePrevious","import React from \"react\";\r\nimport { select } from \"d3-selection\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Axis extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderAxis = this.renderAxis.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderAxis();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.renderAxis();\r\n  }\r\n\r\n  renderAxis() {\r\n    const { scale, axis, tickValues } = this.props;\r\n    const node = this.refs.axis;\r\n    const axisFn = axis(scale).tickValues(tickValues);\r\n    axisFn(select(node));\r\n  }\r\n\r\n  render() {\r\n    return <g ref=\"axis\" transform={this.props.transform} />;\r\n  }\r\n}\r\n\r\nAxis.propTypes = {\r\n  scale: PropTypes.func,\r\n  axis: PropTypes.func,\r\n  tickValues: PropTypes.array\r\n};\r\n","import React from \"react\";\r\nimport { line, curveLinear } from \"d3-shape\";\r\n//import simplify from 'simplify-js'\r\n\r\nexport const Line = props => {\r\n  const { xScale, yScale, data } = props;\r\n  //const stroke = \"#2196f3\";\r\n  const stroke = \"#00887a\";\r\n  //if there's no data return\r\n  if (!data.length) {\r\n    return null;\r\n  }\r\n  /**\r\n   * Create an xy array with the data to create the line path.\r\n   * @param  {Array} data Data of the block.\r\n   * @return {Array}      Return an xy array.\r\n   */\r\n  const createFullArray = data => {\r\n    let new_data = [];\r\n    data.forEach((item, index) => {\r\n      new_data.push({ x: index, y: item });\r\n    });\r\n    return new_data;\r\n  };\r\n  let fullData = createFullArray(data);\r\n\r\n  //Scale the data to fit the SVG\r\n  fullData.forEach(data => {\r\n    data.x = xScale(data.x);\r\n    data.y = yScale(data.y);\r\n  });\r\n\r\n  const lineFunction = line()\r\n    .curve(curveLinear)\r\n    .x(d => d.x)\r\n    .y(d => d.y);\r\n  //const path = lineFunction(simplify(data));\r\n  const path = lineFunction(fullData);\r\n\r\n  return <path d={path} style={{ stroke: stroke, strokeWidth: 3, fill: \"none\" }} />;\r\n};\r\n","import _ from 'lodash'\r\n// AWGN +rnorm();\r\nimport { scaleLinear } from 'd3-scale'\r\n/**\r\n * Find min and max.\r\n * @param  {Array} dataArray - x axis of array.\r\n * @param  {number} resolution - Total time of the function.\r\n * @return {Object}            Return the min and max.\r\n */\r\nexport const findMinMax = (dataArray, resolution) => {\r\n  let minX = 0\r\n\r\n  let maxX = resolution - 1\r\n\r\n  let minY = Number.MAX_SAFE_INTEGER\r\n\r\n  let maxY = Number.MIN_SAFE_INTEGER\r\n\r\n  _.map(dataArray, data => {\r\n    if (data < minY) {\r\n      minY = data\r\n    } else if (data > maxY) {\r\n      maxY = data\r\n    }\r\n  })\r\n  return { minX, maxX, minY, maxY }\r\n}\r\n\r\n/**\r\n * Shift the data array to make the movement.\r\n * @param  {Array} data The data on a certain time.\r\n * @return {Array}       The shifted data.\r\n */\r\nexport const shiftArray = data => {\r\n  const clonedData = _.clone(data)\r\n  let item = clonedData.shift()\r\n  clonedData.push(item)\r\n  return clonedData\r\n}\r\n\r\n/**\r\n * Create an array with the total time of the function to draw the xy coordinates.\r\n * @param  {number} totalTime Total time of the function.\r\n * @return {Array}            Return the array from 0 to totalTime-1.\r\n */\r\nexport const createTimeArray = totalTime => {\r\n  const totalTimeArray = createTimeArrayWithIndexes(totalTime)\r\n  return totalTimeArray.map(time => time / totalTime)\r\n}\r\n\r\nexport const createTimeArrayWithIndexes = totalTime => Array(totalTime).fill(null).map((x, i) => i)\r\n\r\n/**\r\n * getScales returns the x,y scale based on the data array to fit the graph.\r\n * @param  {Array} data       Array to scale the y-line.\r\n * @param  {Object} dimensions Has width and height properties.\r\n * @param  {Object} block      Object to set tickValues.\r\n * @param  {number} resolution Variable to scale the x-line.\r\n * @param  {number} [amplitude]  Variable to set tickValues.\r\n * @return {Object}            Return the scales.\r\n */\r\nexport const getScales = (data, dimensions, blockName, resolution, amplitude) => {\r\n  let scale = {\r\n    xLine: 0,\r\n    yLine: 0,\r\n    yAxis: 0,\r\n    tickValues: 0\r\n  }\r\n  let paddingxAxis = 30\r\n  let paddingyAxis = 20\r\n  const { minX, maxX, minY, maxY } = findMinMax(data, resolution)\r\n  scale.xLine = scaleLinear()\r\n    .domain([minX.toFixed(2), maxX.toFixed(2)])\r\n    .range([paddingxAxis, dimensions.width - paddingxAxis])\r\n\r\n  scale.yLine = scaleLinear()\r\n    .domain([minY.toFixed(2), maxY.toFixed(2)])\r\n    .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n\r\n  // Binary Block\r\n  if (blockName === 'Data') {\r\n    scale.yAxis = scaleLinear()\r\n      .domain([0, 1])\r\n      .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n    scale.tickValues = [-1, 0, 1]\r\n  } else {\r\n    scale.yAxis = scaleLinear()\r\n      .domain([-amplitude / 2, amplitude / 2])\r\n      .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n    scale.tickValues = [-amplitude / 2, 0, amplitude / 2]\r\n  }\r\n  return scale\r\n}\r\n\r\n/**\r\n * The binary array uses -1 to 1 to match the BPSK equation, this change all -1\r\n * to 1.\r\n * @param  {Array} data The binary array.\r\n * @return {Array}      Return the array with 0 and 1.\r\n */\r\nexport const valueToBinary = data => {\r\n  return data.map(number => (number === 1 ? 1 : 0))\r\n}\r\n\r\nexport const findLink = (linkName, blocks, links) => {\r\n  return _.clone(\r\n    _.find(\r\n      blocks,\r\n      block => (block.id === links[0] || block.id === links[1]) && block.name === linkName\r\n    )\r\n  );\r\n};\r\n\r\nexport const blockTypes = {\r\n  DATA: 'Data',\r\n  CARRIER_WAVE: 'Carrier Wave',\r\n  BPSS: 'BPSK'\r\n}\r\n\r\nexport const calculateOffset = (element) => {\r\n  let componentOffset = document.getElementsByClassName(element)[0].getBoundingClientRect()\r\n  let offsetX = window.pageXOffset + componentOffset.left\r\n  let offsetY = window.pageYOffset + componentOffset.top\r\n  return {\r\n    componentOffset,\r\n    offsetX,\r\n    offsetY\r\n  }\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { updateBlockData } from '../../actions'\r\nimport * as selectors from '../../selectors'\r\nimport usePrevious from '../../../../hooks/UsePrevious'\r\nimport { axisRight } from 'd3-axis'\r\nimport { Axis } from '../axis'\r\nimport { Line } from '../line'\r\nimport { shiftArray, getScales } from '../../utils'\r\n\r\nconst createDataArray = (totalTime, binaryArray) => {\r\n  const size = totalTime / binaryArray.length\r\n  let index = 0\r\n  let binaryAux = []\r\n  binaryArray.forEach(item => {\r\n    for (let i = 0; i < size; i++) {\r\n      binaryAux[index++] = item\r\n    }\r\n  })\r\n  return binaryAux\r\n}\r\n\r\nconst BinaryData = props => {\r\n  const oldProps = usePrevious(props)\r\n  const { resolution, block, dimensions, updateBlockData } = props\r\n  const binaryData = createDataArray(resolution, block.binary)\r\n  const scale = getScales(binaryData, dimensions, block.name, resolution)\r\n\r\n  const [data, setData] = useState(binaryData)\r\n\r\n  const requestRef = useRef()\r\n\r\n  const animate = () => {\r\n    if (!block.paused) {\r\n      setData(prevData => shiftArray(prevData));\r\n    }\r\n    requestRef.current = requestAnimationFrame(animate)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (oldProps) {\r\n      const oldBinaryData = oldProps.block.binary\r\n      if (oldBinaryData !== block.binary) {\r\n        const newData = createDataArray(resolution, block.binary)\r\n        setData(newData)\r\n        updateBlockData({ id: block.id, data: newData })\r\n      }\r\n    }\r\n    else {\r\n      updateBlockData({ id: block.id, data: binaryData })\r\n    }\r\n    requestRef.current = requestAnimationFrame(animate)\r\n    return () => cancelAnimationFrame(requestRef.current)\r\n  }, [block.binary])\r\n\r\n  return <g>\r\n    <Line\r\n      xScale={scale.xLine}\r\n      yScale={scale.yLine}\r\n      data={data}\r\n    />\r\n    <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n  </g>\r\n}\r\nBinaryData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockData: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockData }\r\n)(BinaryData)\r\n","import { updateBlockData } from \"../components/MainPage/actions\"\r\nimport { shiftArray } from \"../components/MainPage/utils\"\r\nimport { useRef, useState, useEffect } from \"react\"\r\nimport usePrevious from './UsePrevious'\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nconst useAnimation = (block, createDataArray, createDataArrayArgs, updateOnChanges) => {\r\n  const requestRef = useRef()\r\n  const wasPaused = usePrevious(block.paused)\r\n  const [data, setData] = useState([])\r\n  const [firstRender, setFirstRender] = useState(true)\r\n  const dispatch = useDispatch()\r\n\r\n  const animate = paused => {\r\n    if (!paused) {\r\n      setData(prevData => shiftArray(prevData))\r\n      requestRef.current = requestAnimationFrame(() => animate(paused))\r\n    }\r\n    else {\r\n      cancelAnimationFrame(requestRef.current)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (block.paused === wasPaused || firstRender) {\r\n      const newData = createDataArray(...createDataArrayArgs)\r\n      setData(newData)\r\n      dispatch(updateBlockData({ id: block.id, data: newData }))\r\n      setFirstRender(false)\r\n    }\r\n    requestRef.current = requestAnimationFrame(() => animate(block.paused))\r\n    return () => cancelAnimationFrame(requestRef.current)\r\n  }, [...updateOnChanges, block.paused])\r\n\r\n  return data\r\n}\r\nexport default useAnimation","import React from 'react'\r\nimport { axisRight } from 'd3-axis'\r\nimport { Axis } from './axis'\r\nimport { Line } from './line'\r\n\r\nexport const Graph = ({ scale, data }) => {\r\n  return <g>\r\n    <Line\r\n      xScale={scale.xLine}\r\n      yScale={scale.yLine}\r\n      data={data}\r\n    />\r\n    <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n  </g>\r\n}","import { useSelector } from \"react-redux\"\r\nimport React from \"react\"\r\n\r\nimport { getScales, findLink, blockTypes } from \"../../utils\"\r\nimport useAnimation from '../../../../hooks/UseAnimation'\r\nimport { Graph } from \"../Graph\"\r\n\r\n\r\nconst createDataArray = (binaryArray, carrierDataArray) => {\r\n  return carrierDataArray.map((carrierData, position) => carrierData * binaryArray[position] || 0)\r\n}\r\n\r\nconst BPSKData = ({ block, resolution, dimensions }) => {\r\n  const blocks = useSelector(state => state.mainPage.present.projects[0].blocks)\r\n  const binaryData = findLink(blockTypes.DATA, blocks, block.links).data\r\n  const { amplitude: carrierAmplitude, data: carrierData } = findLink(blockTypes.CARRIER_WAVE, blocks, block.links)\r\n\r\n  const createDataArrayArgs = [binaryData, carrierData]\r\n  const updateOnChanges = [binaryData, carrierData]\r\n  const data = useAnimation(block, createDataArray, createDataArrayArgs, updateOnChanges)\r\n  const scale = getScales(data, dimensions, block, resolution, carrierAmplitude)\r\n\r\n  return <Graph scale={scale} data={data} />\r\n}\r\n\r\nexport default BPSKData\r\n","import { useSelector } from \"react-redux\"\r\nimport React from \"react\"\r\n\r\nimport { getScales, findLink, blockTypes, createTimeArray } from \"../../utils\"\r\nimport useAnimation from '../../../../hooks/UseAnimation'\r\nimport { Graph } from \"../Graph\"\r\n\r\n\r\nconst createDataArray = (binaryArray, carrierData, amplitude, frequency, totalTime) => {\r\n  const time = createTimeArray(totalTime)\r\n  return carrierData.map((data, index) => {\r\n    if (binaryArray[index] === 1) {\r\n      return data\r\n    }\r\n    else {\r\n      const angularFrequency = 2 * Math.PI * (frequency * 2)\r\n      const wt = angularFrequency * time[index]\r\n      return amplitude * Math.sin(wt)\r\n    }\r\n  })\r\n}\r\nconst FSKData = ({ block, resolution, dimensions }) => {\r\n  const blocks = useSelector(state => state.mainPage.present.projects[0].blocks)\r\n  const binaryData = findLink(blockTypes.DATA, blocks, block.links).data\r\n  const { amplitude: carrierAmplitude, data: carrierData, frequency: carrierFrequency } = findLink(blockTypes.CARRIER_WAVE, blocks, block.links)\r\n  \r\n  const createDataArrayArgs = [binaryData, carrierData, carrierAmplitude, carrierFrequency, resolution]\r\n  const updateOnChanges = [binaryData, carrierData]\r\n  const data = useAnimation(block, createDataArray, createDataArrayArgs, updateOnChanges)\r\n\r\n  const scale = getScales(data, dimensions, block, resolution, carrierAmplitude)\r\n\r\n  return <Graph scale={scale} data={data} />\r\n}\r\n\r\nexport default FSKData\r\n\r\n","import { useSelector } from \"react-redux\"\r\nimport React from \"react\"\r\n\r\nimport { getScales } from \"../../utils\"\r\nimport useAnimation from '../../../../hooks/UseAnimation'\r\nimport { Graph } from \"../Graph\"\r\n\r\nimport * as selectors from \"../../selectors\"\r\nimport { rnorm } from \"randgen\"\r\n\r\nconst createDataArray = data => data.map(item => item + rnorm())\r\n\r\nconst AWGNData = ({ block, resolution, dimensions }) => {\r\n  const linkedBlock = useSelector(state => selectors.linkedBlocksSelector(state, { block }))[0]\r\n  const amplitude = linkedBlock.amplitude || 1\r\n\r\n  const createDataArrayArgs = [linkedBlock.data]\r\n  const updateOnChanges = [linkedBlock.data]\r\n  const data = useAnimation(block, createDataArray, createDataArrayArgs, updateOnChanges)\r\n  const scale = getScales(data, dimensions, block, resolution, amplitude)\r\n\r\n  return <Graph scale={scale} data={data} />\r\n}\r\n\r\nexport default AWGNData\r\n","import { useSelector } from \"react-redux\"\r\nimport React from \"react\"\r\n\r\nimport { getScales, findLink, blockTypes } from \"../../utils\"\r\nimport useAnimation from '../../../../hooks/UseAnimation'\r\nimport { Graph } from \"../Graph\"\r\n\r\nconst createDataArray = (binaryArray, carrierData, amplitude) => {\r\n  return carrierData.map((value, index) => (binaryArray[index] === -1 ? value : value * (amplitude * 2)) || 0)\r\n}\r\n\r\nconst ASKData = ({ block, resolution, dimensions }) => {\r\n  const blocks = useSelector(state => state.mainPage.present.projects[0].blocks)\r\n  const binaryData = findLink(blockTypes.DATA, blocks, block.links).data\r\n  const { amplitude: carrierAmplitude, data: carrierData } = findLink(blockTypes.CARRIER_WAVE, blocks, block.links)\r\n\r\n  const createDataArrayArgs = [binaryData, carrierData, carrierAmplitude]\r\n  const updateOnChanges = [binaryData, carrierData]\r\n  const data = useAnimation(block, createDataArray, createDataArrayArgs, updateOnChanges)\r\n\r\n  const scale = getScales(data, dimensions, block, resolution, carrierAmplitude)\r\n\r\n  return <Graph scale={scale} data={data} />\r\n}\r\n\r\nexport default ASKData\r\n","import React from 'react'\r\n\r\nimport { createTimeArray, getScales } from '../../utils'\r\nimport useAnimation from '../../../../hooks/UseAnimation'\r\nimport { Graph } from '../Graph'\r\n\r\n\r\nconst createDataArray = (totalTime, frequency, amplitude) => {\r\n  let time = createTimeArray(totalTime)\r\n  const angularFrequency = 2 * Math.PI * frequency\r\n  return time.map(currentTime => {\r\n    let wt = angularFrequency * currentTime\r\n    return amplitude * Math.sin(wt)\r\n  })\r\n}\r\n\r\nconst CarrierWave = ({ resolution, block, dimensions }) => {\r\n  const { frequency, amplitude } = block\r\n\r\n  const createDataArrayArgs = [resolution, frequency, amplitude]\r\n  const updateOnChanges = [resolution, frequency, amplitude]\r\n  const data = useAnimation(block, createDataArray, createDataArrayArgs, updateOnChanges)\r\n  const scale = getScales(data, dimensions, block.name, resolution, amplitude)\r\n\r\n  return <Graph scale={scale} data={data} />\r\n}\r\n\r\nexport default CarrierWave","import React from 'react'\r\nimport Dimensions from 'react-dimensions'\r\n\r\nimport Binary from './Data/Binary'\r\nimport BPSK from './Data/BPSK'\r\nimport FSK from './Data/FSK'\r\nimport AWGN from './Data/AWGN'\r\nimport ASK from './Data/ASK'\r\nimport CarrierWave from './Data/CarrierWave'\r\n\r\n\r\nclass BlockCard extends React.Component {\r\n  render() {\r\n    const { block } = this.props\r\n    let data\r\n    let width = this.props.containerWidth\r\n    let height = 164\r\n    const expandedHeight = window.innerHeight - 90\r\n    if (this.props.expanded) {\r\n      height = expandedHeight\r\n    }\r\n    if (block.name === 'Data') {\r\n      data = <Binary dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'Carrier Wave') {\r\n      data = <CarrierWave dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.linked) {\r\n      if (block.name === 'BPSK') {\r\n        data = <BPSK dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n      if (block.name === 'FSK') {\r\n        data = <FSK dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n      if (block.name === 'ASK') {\r\n        data = <ASK dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n      if (block.name === 'AWGN') {\r\n        data = <AWGN dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n    }\r\n\r\n    return (\r\n      <svg height={height} width={width}>\r\n        {data}\r\n      </svg>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dimensions()(BlockCard)\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport Slide from \"@material-ui/core/Slide\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio'\r\n\r\nimport { Col } from \"react-flexbox-grid\"\r\n\r\nimport _ from \"lodash\"\r\n\r\nimport BlockCard from \"./BlockCard\"\r\n\r\n//react redux\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"../actions\"\r\n\r\nconst styles = {\r\n  iconStyle: {\r\n    position: \"relative\",\r\n    top: \"6px\"\r\n  },\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  }\r\n}\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />\r\n}\r\n\r\nclass ExpandedBlockCard extends React.Component {\r\n  state = {\r\n    open: false\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false })\r\n  }\r\n  onClickHandler = (block, value, key) => {\r\n    this.props.updateBlockValue({ value, key, id: block.id })\r\n    this.props.blockUpdated({ block, updated: true })\r\n  }\r\n\r\n  render() {\r\n    const { classes, block } = this.props\r\n    let haveProperties = false\r\n    if (!_.isNil(block.frequency)) {\r\n      haveProperties = true\r\n    }\r\n    const showProperties = haveProperties ? (\r\n      <div className={classes.flex}>\r\n        <Typography color=\"inherit\">\r\n          {/* <Left onClick={(event,value)=> this.onClickHandler(block,block.frequency - 1,'frequency')} style={styles.iconStyle}/> */}\r\n          Frequency: {block.frequency}\r\n          {/* <Right onClick={(event,value)=> this.onClickHandler(block,block.frequency + 1,'frequency')} style={styles.iconStyle}/> */}\r\n        </Typography>\r\n        <Typography color=\"inherit\">\r\n          {/* <Left onClick={(event,value)=> this.onClickHandler(block,block.amplitude - 1,'amplitude')} style={styles.iconStyle}/> */}\r\n          Amplitude: {block.amplitude}\r\n          {/* <Right onClick={(event,value)=> this.onClickHandler(block,block.amplitude + 1,'amplitude')} style={styles.iconStyle}/> */}\r\n        </Typography>\r\n      </div>\r\n    ) : (\r\n        <div />\r\n      )\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }}>\r\n        <AspectRatioIcon onClick={this.handleClickOpen} />\r\n        <Dialog\r\n          fullScreen\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          TransitionComponent={Transition}>\r\n          <AppBar className={classes.appBar} color=\"primary\">\r\n            <Toolbar>\r\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\r\n                {block.name}\r\n              </Typography>\r\n              {showProperties}\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Paper style={{ height: \"100%\" }}>\r\n            <Col center=\"xs\" style={{ height: \"90%\", textAlign: \"center\" }}>\r\n              <div style={{ height: \"5%\" }} />\r\n              <div style={{ height: \"100%\", paddingLeft: 16 }}>\r\n                <BlockCard block={block} key={block.id} expanded={true} />\r\n              </div>\r\n            </Col>\r\n          </Paper>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExpandedBlockCard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => {\r\n  return { amplitude: state.mainPage.present.amplitude }\r\n}\r\n\r\nlet ExpandedBlockCardWithStyles = withStyles(styles)(ExpandedBlockCard)\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(ExpandedBlockCardWithStyles)\r\n","import _ from 'lodash'\r\nimport { connect } from 'react-redux'\r\nimport { pauseBlock } from '../actions'\r\nimport BlockCard from './BlockCard'\r\nimport ExpandBlockCard from './ExpandedBlockCard'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport withWidth from '@material-ui/core/withWidth';\r\n\r\nimport * as selectors from '../selectors'\r\nlet style = {\r\n  height: 200\r\n}\r\n\r\nconst getHeigth = (width, blocksNum) => {\r\n  let style = { height: 200 }\r\n  if (blocksNum === 0) {\r\n    return style\r\n  }\r\n  if (width === 'xs') {\r\n    style = { height: blocksNum * 200 }\r\n  }\r\n  else if (width === 'sm') {\r\n    let rows = Math.ceil(blocksNum / 3)\r\n    style = { height: rows * 200 }\r\n  }\r\n  else {\r\n    let rows = Math.ceil(blocksNum / 4)\r\n    style = { height: rows * 200 }\r\n  }\r\n  return style\r\n}\r\n\r\nconst BottomArea = props => {\r\n  const blocksNum = _.filter(props.blocks, block => block.render).length\r\n  style = getHeigth(props.width, blocksNum)\r\n  // Se o total de links for diferente de 0 e o bloco não estiver linkado ele nao é renderizado\r\n  let renderBlockCards = _.map(props.blocks, block => {\r\n    if (!block.render) {\r\n      return\r\n    }\r\n    return (\r\n      <Grid priority={block.neededLinks} key={block.id} container item xs={12} sm={4} md={3}>\r\n        {/* Button 1 */}\r\n        <Grid xs={2} container item style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }}>\r\n          {block.paused ?\r\n            <PlayArrowIcon onClick={event => props.pauseBlock({ id: block.id })} /> :\r\n            <PauseIcon onClick={event => props.pauseBlock({ id: block.id })} />\r\n          }\r\n        </Grid>\r\n        <Grid xs={8} container item >\r\n          <Typography variant=\"subheading\" align=\"center\" style={{ marginTop: 5, width: '90%' }}>\r\n            <b>{block.name}</b>\r\n          </Typography>\r\n        </Grid>\r\n        {/* Button 2 */}\r\n        <Grid xs={2} container item justify=\"center\">\r\n          <ExpandBlockCard block={block} />\r\n        </Grid>\r\n        {/* BlockCard */}\r\n        <Grid style={{ height: 180, paddingLeft: 16 }} container item xs={12} spacing={16}>\r\n          <Grid xs={12} item>\r\n            <BlockCard block={block} key={block.id} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  })\r\n  return (\r\n    <Paper elevation={0} square={true} style={style}>\r\n      <Grid container>\r\n        {renderBlockCards}\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: selectors.projectBlocksSelector(state),\r\n  }\r\n}\r\n\r\nexport default withWidth()(connect(\r\n  mapStateToProps,\r\n  { pauseBlock }\r\n)(BottomArea))\r\n","import React, { Fragment } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport * as _ from 'lodash';\r\n//import Subheader from 'material-ui/Subheader';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { updateBlockValue, updateDropDown } from '../actions';\r\n//import {updateBlockValue} from '../SideBar/actions';\r\n\r\nconst style = {\r\n\tfontWeight: 'bold'\r\n};\r\nconst ID = () => {\r\n\treturn '_' + Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nconst SideBarBlock = (props) => {\r\n\tconst renderRequiredLinks = _.map(props.clickedBlock.requiredLinks, (link, index) => {\r\n\t\tconsole.log(link);\r\n\t\treturn link === 'None' ? (\r\n\t\t\t<Typography key={ID()}>{link}</Typography>\r\n\t\t) : (\r\n\t\t\t<Typography key={ID()}>{link} :</Typography>\r\n\t\t);\r\n\t});\r\n\treturn (\r\n\t\t<Paper elevation={0} square={true} key={props.clickedBlock.id} style={{ height: '100%', paddingTop: 16 }}>\r\n\t\t\t{_.isEmpty(props.clickedBlock) ? (\r\n\t\t\t\t<Typography variant=\"title\" gutterBottom align=\"center\">\r\n\t\t\t\t\tBlock Details\r\n\t\t\t\t</Typography>\r\n\t\t\t) : (\r\n\t\t\t\t<Typography variant=\"title\" gutterBottom align=\"center\">\r\n\t\t\t\t\t{props.clickedBlock.name}\r\n\t\t\t\t</Typography>\r\n\t\t\t)}\r\n\t\t\t<List>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tstyle={style}\r\n\t\t\t\t\t\tprimary={\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">{props.clickedBlock.description}</Typography>\r\n\t\t\t\t\t\t\t\t<p />\r\n\t\t\t\t\t\t\t\t{!_.isEmpty(props.clickedBlock) && (\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subheading\" gutterBottom align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<b>Required Links</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{renderRequiredLinks}\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t{/* <ListItem>\r\n                    <ListItemText\r\n                      primary=\"Formula:\"\r\n                    />\r\n                </ListItem> */}\r\n\t\t\t</List>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tclickedBlock: state.mainPage.present.clickedBlock\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, { updateBlockValue, updateDropDown })(SideBarBlock);\r\n","import React, {memo} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { selectLink } from '../actions'\r\nimport { Line } from 'react-lineto'\r\nimport _ from 'lodash'\r\n\r\nconst LinkLine = ({ block, blocks, selectedLink, width, offsetX, offsetY, blockDimensions }) => {\r\n  const { blockTotalWidth, blockTotalHeight, outputHeight, outputWidth } = blockDimensions\r\n  const dispatch = useDispatch()\r\n\r\n  if (block.neededLinks === 0) {\r\n    return null\r\n  }\r\n  return block.links.map((linkPosition) => {\r\n    let linkBlock = _.find(blocks, (block) => block.id === linkPosition)\r\n    let borderStyle = 'solid'\r\n    if (selectedLink.id === block.id && selectedLink.linkPosition === linkPosition) {\r\n      borderStyle = 'dashed'\r\n    }\r\n    let x0, x1, y0, y1\r\n    // No mobile input e output são invertidos\r\n    if (width === 'xs') {\r\n      x0 = block.position.x + blockTotalWidth / 2 + offsetX\r\n      y0 = block.position.y + offsetY + outputHeight / 2\r\n      x1 = linkBlock.position.x + blockTotalWidth / 2 + offsetX\r\n      y1 = linkBlock.position.y + offsetY + blockTotalHeight - outputHeight / 2\r\n    }\r\n    else {\r\n      x0 = block.position.x + offsetX + outputWidth\r\n      y0 = block.position.y + blockTotalHeight / 2 + offsetY\r\n      x1 = linkBlock.position.x + offsetX + blockTotalWidth - outputWidth * 2\r\n      y1 = linkBlock.position.y + blockTotalHeight / 2 + offsetY\r\n    }\r\n\r\n    return (\r\n      <div key={linkPosition} onClick={() => dispatch(selectLink({ id: block.id, linkPosition }))}>\r\n        <Line\r\n          borderWidth={3}\r\n          borderStyle={borderStyle}\r\n          borderColor=\"black\"\r\n          zIndex={1}\r\n          x0={x0}\r\n          y0={y0}\r\n          x1={x1}\r\n          y1={y1}\r\n        />\r\n      </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default LinkLine","import _ from 'lodash'\r\nimport Draggable from 'react-draggable'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Left from '@material-ui/icons/ChevronLeft'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Fragment } from 'react'\r\nimport Right from '@material-ui/icons/ChevronRight'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport Popover from '@material-ui/core/Popover'\r\nimport withWidth from '@material-ui/core/withWidth'\r\nimport { Line } from 'react-lineto'\r\n\r\nimport { valueToBinary, calculateOffset } from '../utils'\r\nimport * as selectors from '../selectors'\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions'\r\nimport SideBarBlock from '../SideBar/SideBarBlock'\r\nimport LinkLine from './LinkLine'\r\n\r\nconst BASE_WIDTH = 160\r\nconst BASE_HEIGHT = 108\r\nconst INPUT_OUTPUT_MOBILE_HEIGHT = '10%'\r\nconst INPUT_OUTPUT_DESKTOP_HEIGHT = '100%'\r\n\r\nlet blockTotalHeight = BASE_HEIGHT\r\nlet blockTotalWidth = BASE_WIDTH\r\nconst outputWidth = blockTotalWidth * 0.1\r\nconst outputHeight = blockTotalHeight * 0.1\r\nconst blockStyle = {\r\n  borderStyle: 'solid',\r\n  borderWidth: '1px 1px 1px 1px',\r\n  borderColor: '#77a6f7',\r\n  backgroundColor: '#d3e3fc',\r\n  zIndex: 2,\r\n}\r\nconst blockStyleInput = {\r\n  cursor: 'pointer',\r\n  maxWidth: '100%',\r\n  backgroundColor: '#00887a'\r\n}\r\nconst blockStyleOutput = {\r\n  cursor: 'pointer',\r\n  maxWidth: '100%',\r\n  backgroundColor: '#77a6f7'\r\n}\r\nconst iconStyle = {\r\n  position: 'relative',\r\n  top: '7px',\r\n  cursor: 'pointer'\r\n}\r\n\r\nconst blockTopRow = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst OUTPUT = 195\r\nconst INPUT = 5\r\n\r\nclass Block extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      projectTabOffset: 0,\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n      position: INPUT,\r\n      anchorEl: null\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    blockTotalWidth = this.props.width === 'xs' ? BASE_WIDTH : BASE_WIDTH + (this.props.block.neededLinks === 0 ? outputWidth : outputWidth * 2)\r\n    this.props.blockClicked(this.props.block)\r\n    const offset = calculateOffset('projectTab')\r\n    this.setState({\r\n      projectTabOffset: offset.componentOffset,\r\n      offsetX: offset.offsetX,\r\n      offsetY: offset.offsetY\r\n    })\r\n  }\r\n\r\n  getBounds = () => ({\r\n    left: 0,\r\n    top: 0,\r\n    right: this.state.projectTabOffset.width - blockTotalWidth,\r\n    bottom: this.state.projectTabOffset.height - blockTotalHeight\r\n  })\r\n\r\n  getPosition(bounds) {\r\n    let { position } = this.props.block\r\n    if (position.x > bounds.right) {\r\n      position.x = bounds.right\r\n    }\r\n    if (position.y > bounds.bottom) {\r\n      position.y = bounds.bottom\r\n    }\r\n    return position\r\n  }\r\n\r\n  handleClick = event => {\r\n    if (this.props.block !== this.props.clickedBlock) {\r\n      this.props.blockClicked(this.props.block)\r\n    }\r\n    if (this.props.width === 'xs' || this.props.width === 'sm') {\r\n      this.setState({\r\n        anchorEl: event.currentTarget,\r\n      })\r\n    }\r\n  }\r\n  handleClose = () => {\r\n    this.setState({\r\n      anchorEl: null,\r\n    })\r\n  }\r\n\r\n  handleDrag = (e, ui) => {\r\n    const { x, y } = this.props.block.position\r\n    const deltaPosition = {\r\n      x: x + ui.deltaX,\r\n      y: y + ui.deltaY\r\n    }\r\n    this.props.moveBlock({\r\n      value: deltaPosition,\r\n      block: this.props.block,\r\n      indexOfBlock: this.props.indexOfBlock\r\n    })\r\n  }\r\n\r\n  linkBlocks = (position) => {\r\n    const { blocksToLinkArray, block } = this.props\r\n    this.setState({ position })\r\n    //Can link only from the input to the output and cannot link fully linked blocks\r\n    //Need to check if a block is already fully linked but other block wants to link with\r\n    //it in the output\r\n    //Nao deixar linkar quando o bloco que voce quer linkar nao esta linkado e nao tem Data\r\n    if (\r\n      (position === OUTPUT && (blocksToLinkArray.length === 0 || block.data.length === 0)) ||\r\n      (block.links.length > block.neededLinks && block.neededLinks !== 0)\r\n    ) {\r\n      return\r\n    } else if (!this.blocksToLinkArrayIsFull(this.props.blocksToLinkArray) && !_.includes(blocksToLinkArray, this.props.block)) {\r\n      this.props.blocksToLink({ block })\r\n    }\r\n  }\r\n\r\n  hasInput = neededLinks => neededLinks > 0\r\n\r\n  blocksToLinkArrayIsFull = array => array.length >= 2\r\n\r\n  renderLineToCursor = (position) => {\r\n    let { block, cursorPosition } = this.props\r\n    let { offsetX, offsetY } = this.state\r\n    //render line only when the block is not fully linked and is not already linking\r\n    return (\r\n      <Line\r\n        borderWidth={3}\r\n        borderStyle=\"solid\"\r\n        borderColor=\"black\"\r\n        zIndex={1}\r\n        x0={block.position.x + position + offsetX}\r\n        y0={block.position.y + blockTotalHeight / 2 + offsetY}\r\n        x1={cursorPosition.x + offsetX}\r\n        y1={cursorPosition.y + offsetY}\r\n      />\r\n    )\r\n  }\r\n\r\n  isLinking = (block) => _.includes(this.props.blocksToLinkArray, block)\r\n\r\n  showProperties = (block) => {\r\n    return _.map(block.keysToShow, key => {\r\n      const value = block[key]\r\n      if (key === 'binary') {\r\n        return (\r\n          <Typography key={key} variant=\"body1\" style={{ marginLeft: 4 }}>\r\n            <b>{_.capitalize(key)}:</b>\r\n            {valueToBinary(value)}\r\n          </Typography>\r\n        )\r\n      }\r\n      const sum = key === 'frequency' ? 6 : 1\r\n      return (\r\n        <Typography key={key} variant=\"body1\" style={{ marginLeft: 4 }}>\r\n          <b>{_.capitalize(key)}:</b>\r\n          <Left\r\n            onClick={() => this.updateBlockOnClick(this.props.block[key] - sum, key)}\r\n            style={iconStyle}\r\n          />\r\n          {value}\r\n          <Right\r\n            onClick={() => this.updateBlockOnClick(this.props.block[key] + sum, key)}\r\n            style={iconStyle}\r\n          />\r\n        </Typography>\r\n      )\r\n    })\r\n  }\r\n\r\n  updateBlockOnClick = (value, key) => {\r\n    this.props.updateBlockValue({\r\n      value,\r\n      key,\r\n      blockId: this.props.block.id\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const { block, width, selectLink, projects, selectedLink, currentProject } = this.props\r\n    const blocks = projects[currentProject].blocks\r\n    const lineBlock = { id: block.id, neededLinks: block.neededLinks, position: block.position, links: block.links }\r\n    const { offsetX, offsetY } = this.state\r\n    const bounds = this.getBounds()\r\n    const position = this.getPosition(bounds)\r\n\r\n    let direction, inputOutputSize, inputOutputHeight, inputOutputWidth, blockWidth, blockHeight\r\n    if (width === 'xs') {\r\n      blockTotalWidth = BASE_WIDTH\r\n      direction = 'row'\r\n      inputOutputSize = 12\r\n      blockWidth = 12\r\n      inputOutputHeight = { height: '10%' }\r\n      blockHeight = this.hasInput(block.neededLinks) ? '80%' : '100%'\r\n      inputOutputWidth = 3\r\n    }\r\n    else {\r\n      blockTotalWidth = BASE_WIDTH + (outputWidth * 2)\r\n      direction = 'column'\r\n      blockWidth = 10\r\n      inputOutputSize = 1\r\n      inputOutputHeight = { height: '100%' }\r\n      blockHeight = '100%'\r\n      inputOutputWidth = 4\r\n    }\r\n\r\n    const blockDimensions = { blockTotalWidth, blockTotalHeight, outputHeight, outputWidth }\r\n    return (\r\n      <Fragment>\r\n        <Draggable\r\n          grid={[10, 10]}\r\n          bounds={bounds}\r\n          onDrag={this.handleDrag}\r\n          // onStop={this.handleStop}\r\n          position={position}\r\n        >\r\n          <Grid\r\n            container\r\n            style={{ height: blockTotalHeight, width: blockTotalWidth, position: 'absolute', zIndex: 2 }}\r\n          >\r\n            {this.hasInput(block.neededLinks) && (\r\n              // INPUT\r\n              <Grid item container direction={direction} xs={inputOutputSize} style={inputOutputHeight} justify='center'>\r\n                <Grid\r\n                  item\r\n                  xs={inputOutputWidth}\r\n                  style={blockStyleInput}\r\n                  onClick={() => this.linkBlocks(INPUT)}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {/* NAME AND PROPERTIES */}\r\n            <Grid item container xs={blockWidth} style={{ ...blockStyle, height: blockHeight }} direction='row'>\r\n              {/* BLOCK INFO */}\r\n              <Grid item container xs={12} style={{ height: '30%' }}>\r\n                <Grid item xs={2} style={blockTopRow}>\r\n                  <InfoIcon style={{ fontSize: 'larger', cursor: 'pointer' }} onClick={this.handleClick} />\r\n                </Grid>\r\n                <Grid item xs={8} style={blockTopRow}>\r\n                  <Typography variant=\"subheading\" gutterBottom align=\"center\" style={{ margin: '0px' }}>\r\n                    <b>{block.name}</b>\r\n                  </Typography>\r\n                </Grid>\r\n                {/* DELETE THE BLOCK */}\r\n                <Grid item xs={2} style={blockTopRow}>\r\n                  <CloseIcon style={{ fontSize: 'larger', cursor: 'pointer' }} onClick={() => this.props.deleteBlock({ block })} />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12} style={{ height: '70%' }}>\r\n                {/* BLOCK PROPERTIES */}\r\n                {this.showProperties(block)}\r\n              </Grid>\r\n            </Grid>\r\n            {/* OUTPUT */}\r\n            <Grid item container direction={direction} xs={inputOutputSize} style={inputOutputHeight} justify='center'>\r\n              <Grid\r\n                item\r\n                xs={inputOutputWidth}\r\n                style={blockStyleOutput}\r\n                onClick={() => this.linkBlocks(OUTPUT)}\r\n              />\r\n            </Grid>\r\n            <Popover\r\n              id=\"simple-popper\"\r\n              open={Boolean(this.state.anchorEl)}\r\n              anchorEl={this.state.anchorEl}\r\n              onClose={this.handleClose}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n              }}\r\n            >\r\n              <SideBarBlock />\r\n            </Popover>\r\n          </Grid>\r\n\r\n        </Draggable>\r\n        {block.links.length > 0 &&\r\n          <LinkLine block={lineBlock}\r\n            blocks={blocks}\r\n            selectedLink={selectedLink}\r\n            width={width}\r\n            offsetX={offsetX}\r\n            offsetY={offsetY}\r\n            blockDimensions={blockDimensions} />}\r\n        {this.isLinking(block) && this.renderLineToCursor(this.state.position)}\r\n      </Fragment >\r\n    )\r\n  }\r\n}\r\n\r\nBlock.propTypes = {\r\n  selectLink: PropTypes.func.isRequired,\r\n  blockClicked: PropTypes.func.isRequired,\r\n  block: PropTypes.object.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  blocksToLink: PropTypes.func.isRequired,\r\n  blocksToLinkArray: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { clickedBlock, projects, selectedLink, currentProject, blocksToLinkArray } = state.mainPage.present\r\n\r\n  return {\r\n    clickedBlock,\r\n    projects,\r\n    selectedLink,\r\n    currentProject,\r\n    blocksToLinkArray,\r\n    linkedBlocks: selectors.linkedBlocksSelector(state, props),\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  }\r\n}\r\n\r\nexport default withWidth()(connect(mapStateToProps, actions)(Block))\r\n","import React, { Fragment } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport _ from \"lodash\";\r\nimport ReactCursorPosition from \"react-cursor-position\";\r\n\r\n//redux\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentProject } from \"../actions\";\r\nimport Block from \"./Block\";\r\n\r\nconst ProjectArea = props => {\r\n  return (\r\n    <Fragment>\r\n      <AppBar elevation={1} square={true} position=\"static\">\r\n        <Tabs value={0}>\r\n          <Tab label={props.project.name} key={props.project.id} value={props.project.id} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <ReactCursorPosition>\r\n        <ProjectTab key=\"0\" blocks={props.project.blocks} />\r\n      </ReactCursorPosition>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst projectTabStyle = {\r\n  height: 600,\r\n  zIndex: -10\r\n};\r\n\r\nconst ProjectTab = props => {\r\n  const renderBlocks = _.map(props.blocks, block =>\r\n    <Block\r\n      cursorPosition={props.position}\r\n      key={block.id}\r\n      block={block}\r\n      dimensions={props.elementDimensions}\r\n    />\r\n  );\r\n  return (\r\n    <Paper square={true} elevation={0} className=\"projectTab\" style={projectTabStyle}>\r\n      {renderBlocks}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    project: state.mainPage.present.projects[0]\r\n  };\r\n};\r\nconst projectArea = connect(\r\n  mapStateToProps,\r\n  { updateCurrentProject }\r\n)(ProjectArea);\r\nexport default projectArea;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  flex: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nfunction Menu(props) {\r\n  const { classes } = props;\r\n  return (\r\n    //<div className={classes.root}>\r\n      <AppBar elevation={0} square={true} position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\r\n            TCC\r\n          </Typography>\r\n          <Button color=\"inherit\">Lucas</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    //\t</div>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Menu);\r\n","import React, { Fragment, useState } from \"react\";\r\n\r\n//Material\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport _ from \"lodash\";\r\n\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { addBlockToProject } from \"../actions\";\r\n\r\nconst SideBar = props => {\r\n  const [drawerOpen, setDrawerOpen] = useState(false)\r\n  const onClickHandler = block => {\r\n    props.addBlockToProject({ block, idCounter: props.idCounter });\r\n  };\r\n\r\n  //Cria a lista de items\r\n  const ItemList = _.map(props.blocks, block => {\r\n    return (\r\n      <ListItem key={block.name} button onClick={() => onClickHandler(block)}>\r\n        <ListItemText primary={block.name} />\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  const blocksList =\r\n    <List component=\"nav\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" style={{ position: \"inherit\" }}>\r\n          Blocks\r\n        </ListSubheader>}>\r\n      {ItemList}\r\n    </List>\r\n\r\n  return (\r\n    <Fragment>\r\n      <Hidden smUp>\r\n        <Button onClick={() => setDrawerOpen(true)}>New Block</Button>\r\n        <Drawer open={drawerOpen} onClose={() => setDrawerOpen(false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => setDrawerOpen(false)}\r\n            onKeyDown={() => setDrawerOpen(false)}\r\n          >\r\n            <div style={{ width: 250 }}>\r\n              {blocksList}\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden xsDown>\r\n        <Paper elevation={0} square={true} style={{ height: \"100%\" }}>\r\n          {blocksList}\r\n        </Paper>\r\n      </Hidden>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    blocks: state.mainPage.present.blocks,\r\n    idCounter: state.mainPage.present.idCounter\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addBlockToProject }\r\n)(SideBar);\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\n// Imports dos components do projeto\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomArea from './BottomArea/BottomArea';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProjectArea from './ProjectArea/ProjectArea';\r\nimport _ from 'lodash';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Menu from './Menu';\r\nimport SideBar from './SideBar/SideBar';\r\nimport SideBarBlock from './SideBar/SideBarBlock';\r\n\r\nimport * as selectors from './selectors';\r\nimport { deleteLink, deleteBlock } from './actions';\r\nimport KeyHandler, { KEYPRESS } from 'react-key-handler';\r\n\r\nimport { ActionCreators } from 'redux-undo';\r\nimport { connect } from 'react-redux';\r\n// import { createDb } from 'C:/Users/Lucas/Documents/GitHub/tcc/src/firebase.js';\r\nconst styles = (theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing.unit * 2,\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: theme.palette.text.secondary\r\n\t}\r\n});\r\n// createDb();\r\nconst App = (props) => {\r\n\tif (props.isAuthenticated) {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tpaddingRight: 16,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<KeyHandler\r\n\t\t\t\t\tkeyEventName={KEYPRESS}\r\n\t\t\t\t\tkeyValue=\"q\"\r\n\t\t\t\t\tonKeyHandle={() => props.deleteBlock(props.clickedBlock)}\r\n\t\t\t\t/>\r\n\t\t\t\t<KeyHandler\r\n\t\t\t\t\tkeyEventName={KEYPRESS}\r\n\t\t\t\t\tkeyValue=\"x\"\r\n\t\t\t\t\tonKeyHandle={() =>\r\n\t\t\t\t\t\tprops.deleteLink({\r\n\t\t\t\t\t\t\tblock: _.find(props.blocks, (block) => block.id === props.selectedLink.id),\r\n\t\t\t\t\t\t\tlink: props.selectedLink.linkPosition\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<KeyHandler keyEventName={KEYPRESS} keyValue=\"z\" onKeyHandle={() => props.undo()} />\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Grid container justify=\"flex-end\" spacing={16}>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs item>\r\n\t\t\t\t\t\t\t<Menu />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs={12} sm={3} md={2} item>\r\n\t\t\t\t\t\t\t<SideBar />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid xs={12} sm={9} md={8} item>\r\n\t\t\t\t\t\t\t<ProjectArea />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Hidden smDown>\r\n\t\t\t\t\t\t\t<Grid md={2} item>\r\n\t\t\t\t\t\t\t\t<SideBarBlock />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Hidden>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs={12} item style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t<Typography variant=\"title\" color=\"inherit\">\r\n\t\t\t\t\t\t\t\tBlock Graphs\r\n          \t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid xs={12} item>\r\n\t\t\t\t\t\t\t<BottomArea />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <Redirect to=\"/\" />;\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tdeleteLink: (payload) => {\r\n\t\t\tdispatch(deleteLink(payload));\r\n\t\t},\r\n\t\tdeleteBlock: (clickedBlock) => {\r\n\t\t\tdispatch(deleteBlock(clickedBlock));\r\n\t\t},\r\n\t\tundo: () => {\r\n\t\t\tdispatch(ActionCreators.undo());\r\n\t\t}\r\n\t};\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuthenticated: state.mainPage.present.isAuthenticated,\r\n\t\tclickedBlock: state.mainPage.present.clickedBlock,\r\n\t\tselectedLink: state.mainPage.present.selectedLink,\r\n\t\tblocks: selectors.projectBlocksSelector(state)\r\n\t};\r\n};\r\n\r\nconst AppWithStyles = withRouter(withStyles(styles)(App));\r\nconst AppWithStylesWithoutRouter = withStyles(styles)(App);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppWithStylesWithoutRouter);\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\n// import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\n// import firebase from 'firebase'\r\n\r\nconst styles = theme => ({\r\n  // textField: {   marginLeft: theme.spacing.unit,   marginRight:\r\n  // theme.spacing.unit,   width: 200 },\r\n  root: {\r\n    ...theme\r\n      .mixins\r\n      .gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    height: 200,\r\n    textAlign: \"center\"\r\n  },\r\n  // card: {   maxWidth: 345 },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\n// const uiConfig = {\r\n//   // Popup signin flow rather than redirect flow.\r\n//   signInFlow: 'popup',\r\n//   signInSuccessUrl: '/Home',\r\n//   // We will display Google and Facebook as auth providers.\r\n//   // signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID]\r\n// }\r\nclass LoginPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usuario: \"\",\r\n      senha: \"\"\r\n    };\r\n  }\r\n\r\n  validateForm = () => this.state.usuario.length > 0 && this.state.senha.length > 0;\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if (this.state.usuario === \"admin\" && this.state.senha === \"admin\") {\r\n      this\r\n        .props\r\n        .history\r\n        .push(\"/Home\");\r\n    } else {\r\n      alert(\"Usuário ou senha inválidos.\");\r\n    }\r\n    // try {   await Auth.signIn(this.state.usuario, this.state.password);\r\n    // alert(\"Logged in\"); } catch (e) {   alert(e.message); }\r\n  };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div>\r\n        <CssBaseline/>\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{\r\n          minHeight: \"100vh\"\r\n        }}>\r\n          <Grid item xs={3} justify=\"center\">\r\n            <Card\r\n              style={{\r\n              textAlign: \"center\"\r\n            }}\r\n              className={classes.card}>\r\n              <CardHeader title=\"Login\"/>\r\n              <form\r\n                onSubmit={this.handleSubmit}\r\n                className={classes.container}\r\n                noValidate\r\n                autoComplete=\"off\">\r\n                <CardContent>\r\n                  <TextField\r\n                    autoFocus\r\n                    id=\"usuario\"\r\n                    label=\"Usuário\"\r\n                    className={classes.textField}\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                    margin=\"normal\"/>\r\n                  <div/>\r\n                  <TextField\r\n                    id=\"senha\"\r\n                    label=\"Senha\"\r\n                    className={classes.textField}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={this.handleChange}\r\n                    margisn=\"normal\"/>\r\n                    {/* <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/> */}\r\n                </CardContent>\r\n                <CardActions\r\n                  style={{\r\n                  justifyContent: \"center\"\r\n                }}>\r\n                  <Button type=\"submit\" disabled={!this.validateForm()} // component={Link} }} // to=\"/Home\"\r\n                    variant=\"contained\" color=\"primary\"  className={classes.button}>\r\n                    Login\r\n                  </Button>\r\n                </CardActions>\r\n              </form>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      ); } } LoginPage.propTypes = {classes : PropTypes.object.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(LoginPage));","// In production, we register a service worker to serve assets from local cache.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background. To learn more about the\r\n// benefits of this model, read https://goo.gl/KwvDNy. This link also includes\r\n// instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n// [::1] is the IPv6 localhost address.\r\nwindow.location.hostname === '[::1]' ||\r\n// 127.0.0.1/8 is considered localhost for IPv4.\r\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin from\r\n      // what our page is served on. This might happen if a CDN is used to serve\r\n      // assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl)\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or\r\n        // not.\r\n        checkValidServiceWorker(swUrl)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator\r\n    .serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and the fresh content\r\n              // will have been added to the cache. It's the perfect time to display a \"New\r\n              // content is available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.')\r\n            } else {\r\n              // At this point, everything has been precached. It's the perfect time to\r\n              // display a \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  // eslint-disable-next-line no-undef\r\n  fetch(swUrl).then(response => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator\r\n        .serviceWorker\r\n        .ready\r\n        .then(registration => {\r\n          registration\r\n            .unregister()\r\n            .then(() => {\r\n              window\r\n                .location\r\n                .reload()\r\n            })\r\n        })\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl)\r\n    }\r\n  }).catch(() => {\r\n    console.log('No internet connection found. App is running in offline mode.')\r\n  })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator\r\n      .serviceWorker\r\n      .ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport * as consts from '../../constants';\r\nimport update from 'immutability-helper';\r\n\r\nimport { initialState } from '../../initialState';\r\nimport { createReducer } from 'redux-starter-kit';\r\n\r\nimport * as actions from './actions';\r\nimport _ from 'lodash';\r\n\r\nconst reducer = createReducer(initialState, {\r\n\t// ADICIONA BLOCO AO PROJETO\r\n\t[actions.addBlockToProject]: (state, action) => {\r\n\t\tconst newBlock = _.clone(action.payload.block);\r\n\t\tnewBlock['id'] = state.idCounter++;\r\n\t\tstate.projects[state.currentProject].blocks.push(newBlock);\r\n\t\tstate.projects[state.currentProject].blocks = _.sortBy(state.projects[state.currentProject].blocks, ['priority'])\r\n\t},\r\n\t// ATUALIZA O BLOCO CLICADO\r\n\t[actions.blockClicked]: (state, action) => {\r\n\t\tstate.clickedBlock = action.payload;\r\n\t},\r\n\t// ATUALIZA O ARRAY DE BLOCOS QUE VAO SER LINKADOS\r\n\t[actions.blocksToLink]: (state, action) => {\r\n\t\tstate.blocksToLinkArray.push(action.payload.block);\r\n\t\t// Se o usuário fez o link entre os 2 blocos(clicou na saída e na entrada), adiciona o link no objeto\r\n\t\tif (state.blocksToLinkArray.length === 2) {\r\n\t\t\tconst blockToReceiveData = state.blocksToLinkArray[0];\r\n\t\t\tconst blockToSendData = state.blocksToLinkArray[1];\r\n\t\t\tlet block = _.find(state.projects[state.currentProject].blocks, { 'id': blockToReceiveData.id })\r\n\t\t\tblock.links.push(blockToSendData.id);\r\n\t\t\t// Checa se o bloco tem links suficientes para mostrar os dados\r\n\t\t\tif (block.links.length >= block.neededLinks) {\r\n\t\t\t\tblock.linked = true;\r\n\t\t\t\tblock.render = true;\r\n\t\t\t}\r\n\t\t\t// Limpa os blocos que estão sendo linkados\r\n\t\t\tstate.blocksToLinkArray = [];\r\n\t\t}\r\n\t},\r\n\t// DELETA O BLOCO DO PROJETO\r\n\t[actions.deleteBlock]: (state, action) => {\r\n\t\tconst block = action.payload.block;\r\n\t\tconst blockIndex = findBlockIndex(state.projects[state.currentProject].blocks, block);\r\n\t\t// Deleta os links e dados de todos os blocos que estão linkados com o bloco deletado \r\n\t\t// Ex: Se um bloco AWGN está linkado a um bloco BPSK e o bloco BPSK é deletado, o link e os dados do AWGN\r\n\t\t// devem ser deletados\r\n\t\tstate.projects[state.currentProject].blocks.map((bl) => {\r\n\t\t\tbl.links = bl.links.filter((link) => link !== block.id);\r\n\t\t\tif (bl.links.length < bl.neededLinks) {\r\n\t\t\t\tbl.linked = false;\r\n\t\t\t\tbl.data = [];\r\n\t\t\t\tbl.render = false;\r\n\t\t\t}\r\n\t\t\treturn bl;\r\n\t\t});\r\n\t\tstate.projects[state.currentProject].blocks.splice(blockIndex, 1);\r\n\t},\r\n\t// DELETA UM LINK DO BLOCO\r\n\t[actions.deleteLink]: (state, action) => {\r\n\t\tconst newBlock = _.clone(action.payload.block);\r\n\t\tnewBlock.links = newBlock.links.filter((link) => link !== action.payload.link);\r\n\t\tnewBlock.linked = false;\r\n\t\tnewBlock.data = [];\r\n\t\tnewBlock.render = false;\r\n\t\tconst arrayIndex = state.projects[state.currentProject].blocks.findIndex(\r\n\t\t\t(prop) => prop.id === action.payload.block.id\r\n\t\t);\r\n\t\tstate.projects[state.currentProject].blocks[arrayIndex] = newBlock;\r\n\t},\r\n\t// MOVE O BLOCO NA TELA\r\n\t[actions.moveBlock]: (state, action) => {\r\n\t\tstate.projects[state.currentProject].blocks[action.payload.indexOfBlock].position = action.payload.value;\r\n\t},\r\n\t// PAUSA O GRÁFICO DO BLOCO\r\n\t[actions.pauseBlock]: (state, action) => {\r\n\t\tconst blockId = action.payload.id\r\n\t\tlet block = _.find(state.projects[state.currentProject].blocks, { 'id': blockId })\r\n\t\tblock['paused'] = !block.paused;\r\n\t},\r\n\t// ATUALIZA O LINK ATUALMENTE SELECIONADO, PARA PODER DELETA-LO\r\n\t[actions.selectLink]: (state, action) => {\r\n\t\tstate.selectedLink = action.payload;\r\n\t},\r\n\t// ATUALIZA UMA PROPRIEDADE DO BLOCO\r\n\t[actions.updateBlockValue]: (state, action) => {\r\n\t\tconst { blockId, key, value } = action.payload;\r\n\t\tconst projectBlocks = state.projects[state.currentProject].blocks;\r\n\t\tlet blockToUpdate = _.find(projectBlocks, { 'id': blockId })\r\n\t\tblockToUpdate[key] = value;\r\n\t},\r\n\t[actions.updateBlockData]: (state, action) => {\r\n\t\tconst { id, data } = action.payload;\r\n\t\tconst projectBlocks = state.projects[state.currentProject].blocks;\r\n\t\tlet blockToUpdate = _.find(projectBlocks, { 'id': id })\r\n\t\tblockToUpdate.data = data\r\n\t},\r\n\t// ATUALIZA O PROJETO,\r\n\t[actions.updateCurrentProject]: (state, action) => {\r\n\t\tstate.currentProject = action.payload;\r\n\t\tstate.clickedBlock = {};\r\n\t}\r\n});\r\n\r\nconst findBlockIndex = (blocks, block) => blocks.findIndex((p) => p.id === block.id);\r\n\r\nexport default reducer;\r\n","import { createTimeArray } from '../src/components/MainPage/utils'\r\nexport const initialState = {\r\n\tisAuthenticated: true,\r\n\tuser: 'Lucas',\r\n\tcurrentProject: 0,\r\n\tidCounter: 0,\r\n\tselectedLink: {\r\n\t\tid: 2,\r\n\t\tlinkPosition: 0\r\n\t},\r\n\tamplitude: 3,\r\n\tblocksToLinkArray: [],\r\n\tclickedBlock: {\r\n\t\t// id: 2,\r\n\t\t// name: 'BPSK',\r\n\t\t// links: [],\r\n\t\t// type: 'bpsk',\r\n\t\t// position: {\r\n\t\t// \tx: 200,\r\n\t\t// \ty: 120\r\n\t\t// },\r\n\t\t// paused: false,\r\n\t\t// linked: true,\r\n\t\t// updated: false,\r\n\t\t// neededLinks: 2,\r\n\t\t// data: [],\r\n\t\t// requiredLinks: [ 'Data', 'Carrier Wave' ],\r\n\t\t// description:\r\n\t\t// \t'Binary Phase Shift Keying (BPSK) is a two phase modulation scheme, where the 0’s' +\r\n\t\t// \t' and 1’s in a binary message are represented by two different phase states in th' +\r\n\t\t// \t'e carrier signal: θ=0° for binary 1 and θ=180° for binary 0.'\r\n\t},\r\n\tprojects: {\r\n\t\t0: {\r\n\t\t\tid: 0,\r\n\t\t\tname: 'Project 1',\r\n\t\t\ttotalBlocks: 0,\r\n\t\t\tblocks: []\r\n\t\t},\r\n\t\t1: {\r\n\t\t\tid: 1,\r\n\t\t\tname: 'Project 2',\r\n\t\t\ttotalBlocks: 1,\r\n\t\t\tblocks: {\r\n\t\t\t\t1: {\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t\tname: 'Carrier Wave',\r\n\t\t\t\t\tfrequency: 4,\r\n\t\t\t\t\tamplitude: 4,\r\n\t\t\t\t\ttype: 'sine',\r\n\t\t\t\t\tposition: {\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 300\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpaused: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tblocks: [\r\n\t\t{\r\n\t\t\tbinary: [1, 1, 1, -1, 1, -1],\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'Data',\r\n\t\t\tneededLinks: 0,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 1,\r\n\t\t\trequiredLinks: ['None'],\r\n\t\t\ttype: 'square',\r\n\t\t\tupdated: false,\r\n\t\t\trender: true,\r\n\t\t\tkeysToShow: ['binary']\r\n\t\t},\r\n\t\t{\r\n\t\t\tamplitude: 3,\r\n\t\t\tdata: [],\r\n\t\t\tfrequency: 12,\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'Carrier Wave',\r\n\t\t\tneededLinks: 0,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 1,\r\n\t\t\trequiredLinks: ['None'],\r\n\t\t\ttype: 'sine',\r\n\t\t\tupdated: false,\r\n\t\t\trender: true,\r\n\t\t\tdescription:\r\n\t\t\t\t'A carrier wave, carrier signal, or just carrier, is a waveform (usually sinusoid' +\r\n\t\t\t\t'al) that is modulated (modified) with an input signal for the purpose of conveyi' +\r\n\t\t\t\t'ng information.',\r\n\t\t\tkeysToShow: ['amplitude', 'frequency'],\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'BPSK',\r\n\t\t\tneededLinks: 2,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 2,\r\n\t\t\trequiredLinks: ['Data', 'Carrier Wave'],\r\n\t\t\ttype: 'bpsk',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'Binary Phase Shift Keying (BPSK) is a two phase modulation scheme, where the 0’s' +\r\n\t\t\t\t' and 1’s in a binary message are represented by two different phase states in th' +\r\n\t\t\t\t'e carrier signal: θ=0° for binary 1 and θ=180° for binary 0.',\r\n\t\t\tkeysToShow: []\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'AWGN',\r\n\t\t\tneededLinks: 1,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 3,\r\n\t\t\trequiredLinks: ['Data'],\r\n\t\t\ttype: 'awgn',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'Additive white Gaussian noise (AWGN) is a basic noise model used in Information ' +\r\n\t\t\t\t'theory to mimic the effect of many random processes that occur in nature.',\r\n\t\t\tkeysToShow: []\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'FSK',\r\n\t\t\tneededLinks: 2,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 2,\r\n\t\t\trequiredLinks: ['Data', 'Carrier Wave'],\r\n\t\t\ttype: 'fsk',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'In Frequency Shify Keying (FSK) the frequency of the Carrier Wave is varied in a' +\r\n\t\t\t\t'ccordance with baseband digital input. Binary 1 and 0 is represented by two diff' +\r\n\t\t\t\t'erent carrier frequencies.',\r\n\t\t\tkeysToShow: []\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'ASK',\r\n\t\t\tneededLinks: 2,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 2,\r\n\t\t\trequiredLinks: ['Data', 'Carrier Wave'],\r\n\t\t\ttype: 'ask',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'In an ASK system, the binary symbol 1 is represented by transmitting a fixed-amplitude carrier' +\r\n\t\t\t\t' wave and fixed frequency for a bit duration of T seconds. If the signal value is 1 then the' +\r\n\t\t\t\t'carrier signal will be transmitted; otherwise, a signal value of 0 will be transmitted.',\r\n\t\t\tkeysToShow: []\r\n\t\t}\r\n\t]\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/MainPage/App';\r\nimport LoginPage from './components/LoginPage/LoginPage';\r\nimport { Provider } from 'react-redux';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport mainPage from './components/MainPage/reducer';\r\nimport 'typeface-roboto';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\r\n\r\nimport undoable from 'redux-undo';\r\n\r\n// We'll use redux-logger just as an example of adding another middleware\r\nimport logger from 'redux-logger';\r\n\r\nconst reducer = {\r\n\tmainPage: undoable(mainPage, { limit: 5 })\r\n};\r\n\r\nconst middleware = [ ...getDefaultMiddleware(), logger ];\r\n\r\nconst store = configureStore({\r\n\treducer,\r\n\tmiddleware,\r\n\tdevTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\n// const theme = createMuiTheme({   palette: {     background: { default:\r\n// \"#374785\", paper: \"#a8d0e6\" },     primary: { main: \"#24305e\" },\r\n// secondary: {       main: \"#a8d0e6\"     }   } });\r\n\r\nconst theme2 = createMuiTheme({\r\n\tpalette: {\r\n\t\tbackground: {\r\n\t\t\tdefault: '#d3e3fc',\r\n\t\t\tpaper: '#ffffff'\r\n\t\t},\r\n\t\tprimary: {\r\n\t\t\tmain: '#77a6f7'\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#a8d0e6'\r\n\t\t}\r\n\t}\r\n});\r\n// const theme3 = createMuiTheme({   palette: {     background: { default:\r\n// \"#f2f2f2\", paper: \"#ffffff\" },     primary: { main: \"#3b945e\" },\r\n// secondary: {       main: \"#57ba98\"     }   } });\r\n\r\nReactDOM.render(\r\n\t<Fragment>\r\n\t\t<Provider store={store}>\r\n\t\t\t<MuiThemeProvider theme={theme2}>\r\n\t\t\t\t<App />\r\n\t\t\t\t{/* <Router>\r\n\t\t\t\t\t\t<Route path=\"/Home\" component={App} />\r\n\t\t\t\t</Router> */}\r\n\t\t\t</MuiThemeProvider>\r\n\t\t</Provider>\r\n\t</Fragment>,\r\n\tdocument.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/MainPage/actions.js","constants.js","components/MainPage/selectors.js","components/MainPage/BottomArea/axis.js","components/MainPage/BottomArea/line.js","components/MainPage/utils.js","components/MainPage/BottomArea/BinaryData.jsx","components/MainPage/BottomArea/BPSKData.jsx","components/MainPage/BottomArea/FSKData.jsx","components/MainPage/BottomArea/AWGNData.jsx","components/MainPage/BottomArea/ASKData.jsx","components/MainPage/BottomArea/CarrierWaveData.jsx","components/MainPage/BottomArea/BlockCard.jsx","components/MainPage/BottomArea/ExpandedBlockCard.jsx","components/MainPage/BottomArea/BottomArea.jsx","components/MainPage/SideBar/SideBarBlock.jsx","components/MainPage/ProjectArea/Block.jsx","components/MainPage/ProjectArea/ProjectArea.jsx","components/MainPage/Menu.jsx","components/MainPage/SideBar/SideBar.jsx","components/MainPage/App.jsx","components/LoginPage/LoginPage.jsx","registerServiceWorker.js","components/MainPage/reducer.js","initialState.js","index.js"],"names":["addBlockToProject","createAction","blockClicked","blocksToLink","moveBlock","deleteBlock","deleteLink","payload","block","links","filter","link","linked","data","render","type","pauseBlock","selectLink","updateBlockValue","updateCurrentProject","updateDropDown","projectBlocksSelector","state","mainPage","present","projects","currentProject","blocks","linkedBlocksSelector","createSelector","_","props","map","find","id","getIndexOfBlockSelector","indexOf","sort","property","sortOrder","substr","a","b","result","dynamicSort","Axis","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderAxis","bind","assertThisInitialized","inherits","createClass","key","value","_this$props","scale","axis","tickValues","node","refs","axisFn","select","react_default","createElement","ref","transform","React","Component","Line","xScale","yScale","length","fullData","new_data","forEach","item","index","push","x","y","createFullArray","path","line","curve","curveLinear","d","lineFunction","style","stroke","strokeWidth","fill","shiftArray","shift","createTimeArray","totalTime","time","i","getScales","dimensions","resolution","amplitude","xLine","yLine","yAxis","_findMinMax","dataArray","maxX","minY","Number","MAX_SAFE_INTEGER","maxY","MIN_SAFE_INTEGER","minX","findMinMax","scaleLinear","domain","toFixed","range","width","height","name","notHidden","valueToBinary","number","BinaryData","updateData","createDataArray","indexOfBlock","_this2","newData","clone","paused","_ismounted","setState","window","requestAnimationFrame","binary","size","binaryAux","animationId","cancelAnimationFrame","_this$props2","clickedBlock","line_Line","focused","axis_Axis","color","axisRight","connect","selectors","BPSKData","findLink","linkName","binaryArray","blockLinkCarrier","currentTime","blockLinkData","nextProps","neededLinks","nextProps_blockLinkData","nextProps_blockLinkCarrier","FSKData","f1","frequency","f2","wt","Math","PI","sin","AWGNData","awgnArray","isEmpty","rnorm","linkedBlocks","prevProps","_this$state","ASKData","a1","a2","CarrierWaveData","angularFrequency","updated","Dimensions","component","containerWidth","expanded","BottomArea_BinaryData","BottomArea_CarrierWaveData","BottomArea_BPSKData","BottomArea_FSKData","BottomArea_ASKData","BottomArea_AWGNData","Transition","Slide_default","assign","direction","ExpandedBlockCard","open","handleClickOpen","handleClose","onClickHandler","blockUpdated","classes","haveProperties","isNil","showProperties","className","flex","Typography_default","display","alignItems","justifyContent","cursor","AspectRatio_default","onClick","Dialog_default","fullScreen","onClose","TransitionComponent","AppBar_default","appBar","Toolbar_default","IconButton_default","aria-label","Close_default","variant","Paper_default","react_flexbox_grid_lib","center","textAlign","paddingLeft","BottomArea_BlockCard","ExpandedBlockCardWithStyles","withStyles","iconStyle","position","top","actions","withWidth","blocksNum","ceil","getHeigth","renderBlockCards","Grid_default","priority","container","xs","sm","md","PlayArrow_default","event","Pause_default","align","marginTop","justify","BottomArea_ExpandedBlockCard","defineProperty","spacing","elevation","square","fontWeight","ID","random","toString","renderRequiredLinks","requiredLinks","console","log","paddingTop","gutterBottom","List_default","ListItem_default","ListItemText_default","primary","react","description","blockHeight","blockWidth","blockStyle","borderStyle","borderWidth","borderColor","backgroundColor","zIndex","blockStyleInput","maxWidth","blockStyleOutput","blockTopRow","OUTPUT","INPUT","Block","componentDidMount","calculateOffset","element","projectTabOffset","document","getElementsByClassName","getBoundingClientRect","offsetX","pageXOffset","left","offsetY","pageYOffset","getBounds","right","bottom","handleClick","innerWidth","anchorEl","currentTarget","handleDrag","e","ui","_this$props$block$pos","deltaPosition","deltaX","deltaY","linkBlocks","blocksToLinkArray","blocksToLinkArrayIsFull","includes","hasInput","renderLines","selectedLink","linkPosition","linkBlock","react_lineto","x0","y0","x1","y1","renderLineToCursor","_this$props3","cursorPosition","_this$state2","isLinking","marginLeft","capitalize","sum","ChevronLeft_default","updateBlockOnClick","ChevronRight_default","bounds","getPosition","react_draggable_default","grid","onDrag","Info_default","fontSize","margin","Popover_default","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","SideBar_SideBarBlock","mouseClicked","blockPosition","_state$mainPage$prese","projectTabStyle","ProjectTab","renderBlocks","ProjectArea_Block","projectArea","project","containerHeight","Tabs_default","Tab_default","label","ReactCursorPosition","ProjectArea_ProjectTab","root","flexGrow","menuButton","marginRight","Menu_default","Button_default","idCounter","_useState","useState","_useState2","slicedToArray","drawerOpen","setDrawerOpen","ItemList","button","blocksList","subheader","ListSubheader_default","Hidden_default","smUp","Drawer_default","tabIndex","role","onKeyDown","xsDown","styles","theme","paper","padding","unit","palette","text","secondary","App","isAuthenticated","paddingRight","dist_default","keyEventName","KEYPRESS","keyValue","onKeyHandle","undo","CssBaseline_default","MainPage_Menu","MainPage_SideBar_SideBar","MainPage_ProjectArea_ProjectArea","smDown","MainPage_BottomArea_BottomArea","Redirect","to","AppWithStylesWithoutRouter","withRouter","dispatch","ActionCreators","LoginPage","validateForm","usuario","senha","handleChange","target","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","history","alert","stop","_x","apply","arguments","minHeight","Card_default","card","CardHeader_default","title","onSubmit","noValidate","autoComplete","CardContent_default","TextField_default","autoFocus","textField","onChange","margisn","CardActions_default","disabled","isLocalhost","objectSpread","mixins","gutters","paddingBottom","media","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","reducer","createReducer","user","0","totalBlocks","1","_createReducer","action","newBlock","sortBy","blockToReceiveData","blockToSendData","blockIndex","findBlockIndex","bl","splice","arrayIndex","findIndex","prop","blockId","_action$payload","projectBlocks","p","undoable","limit","middleware","toConsumableArray","getDefaultMiddleware","concat","logger","store","configureStore","devTools","process","theme2","createMuiTheme","background","default","main","ReactDOM","es","core_styles","MainPage_App","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2a828b2d.chunk.js","sourcesContent":["import * as consts from '../../constants'\r\nimport _ from 'lodash'\r\nimport { createAction } from 'redux-starter-kit'\r\n\r\n\r\n\r\nexport const addBlockToProject = createAction('ADD_TO_PROJECT')\r\n\r\nexport const blockClicked = createAction('BLOCK_CLICKED')\r\n\r\nexport const blocksToLink = createAction('BLOCKS_TO_LINK')\r\n\r\nexport const moveBlock = createAction('MOVE_BLOCK')\r\n\r\nexport const deleteBlock = createAction('DELETE_BLOCK')\r\n\r\n// Quando um link é deletado, é necessário sempre apagar a data porque quando um\r\n// link é deletado o bloco num está com todos os links e não deve ter nenhuma\r\n// data\r\nexport const deleteLink = payload => {\r\n  payload.block.links = payload\r\n    .block\r\n    .links\r\n    .filter(link => link !== payload.link)\r\n  payload.block.linked = false\r\n  payload.block.data = []\r\n  payload.block.render = false\r\n  return { type: consts.DELETE_LINK, payload: payload }\r\n}\r\n\r\nexport const pauseBlock = createAction('PAUSE_BLOCK')\r\n\r\nexport const selectLink = createAction('SELECT_LINK')\r\n\r\nexport const updateBlockValue = createAction('UPDATE_BLOCK_VALUE')\r\n\r\nexport const updateCurrentProject = createAction('UPDATE_CURRENT_PROJECT')\r\n\r\nexport const updateDropDown = payload => ({ type: consts.UPDATE_DROPDOWN, payload })\r\n","export const ADD_TO_PROJECT = 'ADD_TO_PROJECT'\r\nexport const BLOCK_CLICKED = 'BLOCK_CLICKED'\r\nexport const BLOCK_LIST = 'BLOCK_LIST'\r\nexport const BLOCK_UPDATED = 'BLOCK_UPDATED'\r\nexport const BLOCKS_TO_LINK = 'BLOCKS_TO_LINK'\r\nexport const CREATE_LINK = 'CREATE_LINK'\r\nexport const DELETE_BLOCK = 'DELETE_BLOCK'\r\nexport const DELETE_LINK = 'DELETE_LINK'\r\nexport const LOGIN = 'LOGIN'\r\nexport const PAUSE_BLOCK = 'PAUSE_BLOCK'\r\nexport const SELECT_LINK = 'SELECT_LINK'\r\nexport const SET_BLOCK_VALUE = 'SET_BLOCK_VALUE'\r\nexport const TRACK_LOCATION = 'TRACK_LOCATION'\r\nexport const UPDATE_BLOCK = 'UPDATE_BLOCK'\r\nexport const UPDATE_CURRENT_PROJECT = 'UPDATE_CURRENT_PROJECT'\r\nexport const UPDATE_DATA = 'UPDATE_DATA'\r\nexport const UPDATE_DROPDOWN = 'UPDATE_DROPDOWN'\r\nexport const UPDATE_VALUE = 'UPDATE_VALUE'\r\n","import { createSelector } from 'reselect'\r\nimport _ from 'lodash'\r\n\r\nexport const allBlocksSelector = state => state.mainPage.blocks\r\n\r\nexport const clickedBlockSelector = state => state.mainPage.present.clickedBlock\r\n\r\nexport const projectBlocksSelector = state => state.mainPage.present.projects[state.mainPage.present.currentProject].blocks\r\n\r\nexport const linkedBlocksSelector = createSelector((_, props) => props.block, projectBlocksSelector, (block, blocks) => {\r\n  return block\r\n    .links\r\n    .map(link => _.find(blocks, block => block.id === link))\r\n})\r\n\r\nexport const getIndexOfBlockSelector = (state, props) => {\r\n  return state\r\n    .mainPage\r\n    .present\r\n    .projects[state.mainPage.present.currentProject]\r\n    .blocks\r\n    .indexOf(props.block)\r\n};\r\n\r\nexport const getPrioritySelector = createSelector(projectBlocksSelector, blocks => {\r\n  blocks.sort(dynamicSort('priority'))\r\n})\r\n\r\nfunction dynamicSort (property) {\r\n  var sortOrder = 1\r\n  if (property[0] === '-') {\r\n    sortOrder = -1\r\n    property = property.substr(1)\r\n  }\r\n  return function (a, b) {\r\n    var result = a[property] < b[property]\r\n      ? -1\r\n      : a[property] > b[property]\r\n        ? 1\r\n        : 0\r\n    return result * sortOrder\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { select } from \"d3-selection\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Axis extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderAxis = this.renderAxis.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderAxis();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.renderAxis();\r\n  }\r\n\r\n  renderAxis() {\r\n    const { scale, axis, tickValues } = this.props;\r\n    const node = this.refs.axis;\r\n    const axisFn = axis(scale).tickValues(tickValues);\r\n    axisFn(select(node));\r\n  }\r\n\r\n  render() {\r\n    return <g ref=\"axis\" transform={this.props.transform} />;\r\n  }\r\n}\r\n\r\nAxis.propTypes = {\r\n  scale: PropTypes.func,\r\n  axis: PropTypes.func,\r\n  tickValues: PropTypes.array\r\n};\r\n","import React from \"react\";\r\nimport { line, curveLinear } from \"d3-shape\";\r\n//import simplify from 'simplify-js'\r\n\r\nexport const Line = props => {\r\n  const { xScale, yScale, data } = props;\r\n  //const stroke = \"#2196f3\";\r\n  const stroke = \"#00887a\";\r\n  //if there's no data return\r\n  if (!data.length) {\r\n    return null;\r\n  }\r\n  /**\r\n   * Create an xy array with the data to create the line path.\r\n   * @param  {Array} data Data of the block.\r\n   * @return {Array}      Return an xy array.\r\n   */\r\n  const createFullArray = data => {\r\n    let new_data = [];\r\n    data.forEach((item, index) => {\r\n      new_data.push({ x: index, y: item });\r\n    });\r\n    return new_data;\r\n  };\r\n  let fullData = createFullArray(data);\r\n\r\n  //Scale the data to fit the SVG\r\n  fullData.forEach(data => {\r\n    data.x = xScale(data.x);\r\n    data.y = yScale(data.y);\r\n  });\r\n\r\n  const lineFunction = line()\r\n    .curve(curveLinear)\r\n    .x(d => d.x)\r\n    .y(d => d.y);\r\n  //const path = lineFunction(simplify(data));\r\n  const path = lineFunction(fullData);\r\n\r\n  return <path d={path} style={{ stroke: stroke, strokeWidth: 3, fill: \"none\" }} />;\r\n};\r\n","import _ from 'lodash'\r\n// AWGN +rnorm();\r\nimport { scaleLinear } from 'd3-scale'\r\n\r\n/**\r\n * Deep diff between two object, using lodash\r\n * @param  {Object} object Object compared\r\n * @param  {Object} base   Object to compare with\r\n * @return {Object}        Return a new object who represent the diff\r\n */\r\nexport const difference = (object, base) => {\r\n  function changes (object, base) {\r\n    return _.transform(object, function (result, value, key) {\r\n      if (!_.isEqual(value, base[key])) {\r\n        result[key] =\r\n          _.isObject(value) && _.isObject(base[key]) ? changes(value, base[key]) : value\r\n      }\r\n    })\r\n  }\r\n  return changes(object, base)\r\n}\r\n/**\r\n * Find min and max.\r\n * @param  {Array} dataArray - x axis of array.\r\n * @param  {number} resolution - Total time of the function.\r\n * @return {Object}            Return the min and max.\r\n */\r\nexport const findMinMax = (dataArray, resolution) => {\r\n  let minX = 0\r\n\r\n  let maxX = resolution - 1\r\n\r\n  let minY = Number.MAX_SAFE_INTEGER\r\n\r\n  let maxY = Number.MIN_SAFE_INTEGER\r\n\r\n  _.map(dataArray, data => {\r\n    if (data < minY) {\r\n      minY = data\r\n    } else if (data > maxY) {\r\n      maxY = data\r\n    }\r\n  })\r\n  return { minX, maxX, minY, maxY }\r\n}\r\n\r\n/**\r\n * Shift the data array to make the movement.\r\n * @param  {Array} data The data on a certain time.\r\n * @return {Array}       The shifted data.\r\n */\r\nexport const shiftArray = data => {\r\n  let item = data.shift()\r\n  data.push(item)\r\n  return data\r\n}\r\n\r\n/**\r\n * Create an array with the total time of the function to draw the xy coordinates.\r\n * @param  {number} totalTime Total time of the function.\r\n * @return {Array}            Return the array from 0 to totalTime-1.\r\n */\r\nexport const createTimeArray = totalTime => {\r\n  let time = []\r\n  for (let i = 0; i < totalTime; i++) {\r\n    time.push(i / totalTime)\r\n  }\r\n  return time\r\n}\r\n\r\n/**\r\n * getScales returns the x,y scale based on the data array to fit the graph.\r\n * @param  {Array} data       Array to scale the y-line.\r\n * @param  {Object} dimensions Has width and height properties.\r\n * @param  {Object} block      Object to set tickValues.\r\n * @param  {number} resolution Variable to scale the x-line.\r\n * @param  {number} [amplitude]  Variable to set tickValues.\r\n * @return {Object}            Return the scales.\r\n */\r\nexport const getScales = (data, dimensions, block, resolution, amplitude) => {\r\n  let scale = {\r\n    xLine: 0,\r\n    yLine: 0,\r\n    yAxis: 0,\r\n    tickValues: 0\r\n  }\r\n  let paddingxAxis = 30\r\n  let paddingyAxis = 20\r\n  const { minX, maxX, minY, maxY } = findMinMax(data, resolution)\r\n  scale.xLine = scaleLinear()\r\n    .domain([minX.toFixed(2), maxX.toFixed(2)])\r\n    .range([paddingxAxis, dimensions.width - paddingxAxis])\r\n\r\n  scale.yLine = scaleLinear()\r\n    .domain([minY.toFixed(2), maxY.toFixed(2)])\r\n    .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n\r\n  // Binary Block\r\n  if (block.name === 'Data') {\r\n    scale.yAxis = scaleLinear()\r\n      .domain([0, 1])\r\n      .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n    scale.tickValues = [-1, 0, 1]\r\n  } else {\r\n    scale.yAxis = scaleLinear()\r\n      .domain([-amplitude / 2, amplitude / 2])\r\n      .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n    scale.tickValues = [-amplitude / 2, 0, amplitude / 2]\r\n  }\r\n  return scale\r\n}\r\n/**\r\n * Hide all unwanted properties of the block.\r\n * @param  {string} key The checked key.\r\n * @return {boolean}     Return true or false.\r\n */\r\nexport const notHidden = key => {\r\n  if (\r\n    key === 'frequency' ||\r\n    key === 'amplitude' ||\r\n    key === 'binary'\r\n  ) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * The binary array uses -1 to 1 to match the BPSK equation, this change all -1\r\n * to 1.\r\n * @param  {Array} data The binary array.\r\n * @return {Array}      Return the array with 0 and 1.\r\n */\r\nexport const valueToBinary = data => {\r\n  return data.map(number => (number === 1 ? 1 : 0))\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport { updateBlockValue } from '../actions'\r\nimport * as selectors from '../selectors'\r\n\r\nimport { axisRight } from 'd3-axis'\r\nimport { Axis } from './axis'\r\nimport { Line } from './line'\r\nimport { shiftArray, getScales } from '../utils'\r\n\r\nclass BinaryData extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.updateData = this.updateData.bind(this)\r\n    let data = this.createDataArray()\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: 'data',\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    })\r\n    this.state = { data }\r\n  }\r\n\r\n  updateData () {\r\n    const { block } = this.props\r\n    const { data } = this.state\r\n    let newData = _.clone(data)\r\n    if (!block.paused) {\r\n      newData = shiftArray(newData)\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: newData\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  createDataArray () {\r\n    const { resolution, block } = this.props\r\n    const dataArray = block.binary\r\n    const totalTime = resolution\r\n    const size = totalTime / dataArray.length\r\n    let index = 0\r\n    let binaryAux = []\r\n    dataArray.forEach(item => {\r\n      for (let i = 0; i < size; i++) {\r\n        binaryAux[index++] = item\r\n      }\r\n    })\r\n    return binaryAux\r\n  }\r\n\r\n  componentDidMount () {\r\n    this._ismounted = true\r\n    this.animationId = window.requestAnimationFrame(this.updateData)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this._ismounted = false\r\n    window.cancelAnimationFrame(this.animationId)\r\n  }\r\n  render () {\r\n    const { dimensions, block, clickedBlock } = this.props\r\n    const { data } = this.state\r\n    const scale = getScales(data, dimensions, block, this.props.resolution)\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          focused={block === clickedBlock}\r\n        />\r\n        <Axis\r\n          style={{ color: 'ffffff' }}\r\n          axis={axisRight}\r\n          tickValues={scale.tickValues}\r\n          scale={scale.yAxis}\r\n        />\r\n      </g>\r\n    )\r\n  }\r\n}\r\nBinaryData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockValue }\r\n)(BinaryData)\r\n","import _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nimport { Axis } from \"./axis\";\r\nimport { axisRight } from \"d3-axis\";\r\nimport { updateBlockValue } from \"../actions\";\r\nimport { Line } from \"./line\";\r\nimport { shiftArray, createTimeArray, getScales, difference } from \"../utils\";\r\nimport * as selectors from \"../selectors\";\r\n\r\nclass BPSKData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateData = this.updateData.bind(this);\r\n    const { blocks, block, resolution } = props;\r\n    let data = [];\r\n    //Para entrar aqui deve ter os 2 links, data e Carrier\r\n    //os dois podem estar na posicao 0 ou 1, entao deve selecionar o correto\r\n\r\n    let blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    data = this.createDataArray(blockLinkData.data, resolution, blockLinkCarrier);\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: \"data\",\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    });\r\n    this.state = {\r\n      data,\r\n      blockLinkData,\r\n      blockLinkCarrier\r\n    };\r\n  }\r\n  findLink = (linkName, blocks, links) => {\r\n    return _.clone(\r\n      _.find(\r\n        blocks,\r\n        block => (block.id === links[0] || block.id === links[1]) && block.name === linkName\r\n      )\r\n    );\r\n  };\r\n\r\n  createDataArray = (binaryArray, totalTime, blockLinkCarrier) => {\r\n    let data = [];\r\n    let time = createTimeArray(totalTime);\r\n    time.forEach((currentTime, index) => {\r\n      data.push(binaryArray[index] * blockLinkCarrier.data[index]);\r\n    });\r\n    return data;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._ismounted = true;\r\n    this.animationId = window.requestAnimationFrame(this.updateData);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._ismounted = false;\r\n    window.cancelAnimationFrame(this.animationId);\r\n  }\r\n\r\n  // componentDidUpdate(prevProps){\r\n  //   const { blocks, block } = this.props;\r\n  //   const { blockLinkCarrier } = this.state;\r\n  //   let blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n  //   let blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n\r\n\r\n  //   if(blockLinkData.data !== this.state.blockLinkData.data){\r\n  //     console.log(\"entrou\")\r\n  //     let data = this.createDataArray(blockLinkData.data);\r\n  //     this.props.updateBlockValue({\r\n  //       block: this.props.block,\r\n  //       key: \"data\",\r\n  //       value: data,\r\n  //       indexOfBlock: this.props.indexOfBlock\r\n  //     });\r\n  //   this.setState({ data, blockLinkData});\r\n  //   }\r\n  // }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { blocks, block } = this.props;\r\n    const { blockLinkCarrier } = this.state;\r\n    if (nextProps.block.links < nextProps.block.neededLinks) {\r\n      return;\r\n    }\r\n    let nextProps_blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let nextProps_blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    \r\n    if (nextProps_blockLinkCarrier.data !== blockLinkCarrier.data) {\r\n      let data = this.createDataArray(\r\n        nextProps_blockLinkData.data,\r\n        this.props.resolution,\r\n        nextProps_blockLinkCarrier\r\n      );\r\n      this.props.updateBlockValue({\r\n        block: this.props.block,\r\n        key: \"data\",\r\n        value: data,\r\n        indexOfBlock: this.props.indexOfBlock\r\n      });\r\n      this.setState({ data, blockLinkCarrier: nextProps_blockLinkCarrier });\r\n    }\r\n  }\r\n  updateData() {\r\n    const { block } = this.props;\r\n    const { data } = this.state;\r\n    let new_data = _.clone(data);\r\n    if (!block.paused) {\r\n      new_data = shiftArray(new_data);\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: new_data\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { dimensions, block, clickedBlock } = this.props;\r\n    const { data } = this.state;\r\n    const scale = getScales(\r\n      data,\r\n      dimensions,\r\n      block,\r\n      this.props.resolution,\r\n      this.state.blockLinkCarrier.amplitude\r\n    );\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          focused={block === clickedBlock ? true : false}\r\n        />\r\n        <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nBPSKData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockValue }\r\n)(BPSKData);\r\n","import _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nimport { Axis } from \"./axis\";\r\nimport { axisRight } from \"d3-axis\";\r\nimport { updateBlockValue } from \"../actions\";\r\nimport { Line } from \"./line\";\r\nimport { shiftArray, createTimeArray, getScales, difference } from \"../utils\";\r\nimport * as selectors from \"../selectors\";\r\n\r\nclass FSKData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateData = this.updateData.bind(this);\r\n    const { blocks, block, resolution } = props;\r\n    let data = [];\r\n    \r\n    //Para entrar aqui deve ter os 2 links, data e Carrier\r\n    let blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    data = this.createDataArray(blockLinkData.data, resolution, blockLinkCarrier);\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: \"data\",\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    });\r\n    this.state = {\r\n      data,\r\n      blockLinkData,\r\n      blockLinkCarrier\r\n    };\r\n  }\r\n  findLink = (linkName, blocks, links) => {\r\n    return _.clone(\r\n      _.find(\r\n        blocks,\r\n        block => (block.id === links[0] || block.id === links[1]) && block.name === linkName\r\n      )\r\n    );\r\n  };\r\n\r\n  createDataArray = (binaryArray, totalTime, blockLinkCarrier) => {\r\n    let data = [];\r\n    let f1=blockLinkCarrier.frequency,f2=blockLinkCarrier.frequency * 2,amplitude=blockLinkCarrier.amplitude;\r\n    let time = createTimeArray(totalTime);\r\n    time.forEach((currentTime, index) => {\r\n        if(binaryArray[index] === 1){\r\n          const angularFrequency = 2 * Math.PI * f1;\r\n          let wt = angularFrequency * currentTime;\r\n          data.push(amplitude * Math.sin(wt));\r\n        }\r\n        else{\r\n          const angularFrequency = 2 * Math.PI * f2;\r\n          let wt = angularFrequency * currentTime;\r\n          data.push(amplitude * Math.sin(wt));\r\n        }\r\n    });\r\n    return data;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._ismounted = true;\r\n    this.animationId = window.requestAnimationFrame(this.updateData);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._ismounted = false;\r\n    window.cancelAnimationFrame(this.animationId);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { blocks, block } = this.props;\r\n    const { blockLinkCarrier } = this.state;\r\n    if (nextProps.block.links < nextProps.block.neededLinks) {\r\n      return;\r\n    }\r\n    let nextProps_blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let nextProps_blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    //If there is differences update the state\r\n    if (nextProps_blockLinkCarrier.data !== blockLinkCarrier.data) {\r\n      let data = this.createDataArray(\r\n        nextProps_blockLinkData.data,\r\n        this.props.resolution,\r\n        nextProps_blockLinkCarrier\r\n      );\r\n      this.props.updateBlockValue({\r\n        block: this.props.block,\r\n        key: \"data\",\r\n        value: data,\r\n        indexOfBlock: this.props.indexOfBlock\r\n      });\r\n      this.setState({ data, blockLinkCarrier: nextProps_blockLinkCarrier });\r\n    }\r\n  }\r\n  updateData() {\r\n    const { block } = this.props;\r\n    const { data } = this.state;\r\n    let new_data = _.clone(data);\r\n    if (!block.paused) {\r\n      new_data = shiftArray(new_data);\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: new_data\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { dimensions, block, clickedBlock } = this.props;\r\n    const { data } = this.state;\r\n    const scale = getScales(\r\n      data,\r\n      dimensions,\r\n      block,\r\n      this.props.resolution,\r\n      this.state.blockLinkCarrier.amplitude\r\n    );\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          focused={block === clickedBlock ? true : false}\r\n        />\r\n        <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nFSKData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockValue }\r\n)(FSKData);\r\n","import _ from \"lodash\";\r\nimport { Axis } from \"./axis\";\r\nimport { axisRight } from \"d3-axis\";\r\nimport { updateBlockValue } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Line } from \"./line\";\r\nimport { rnorm } from \"randgen\";\r\nimport { shiftArray, getScales } from \"../utils\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport * as selectors from \"../selectors\";\r\n\r\nclass AWGNData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateData = this.updateData.bind(this);\r\n    const blockLinkData = _.clone(props.linkedBlocks[0]);\r\n    const data = this.createDataArray(blockLinkData.data);\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: \"data\",\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    });\r\n    this.state = {\r\n      data,\r\n      blockLinkData\r\n    };\r\n  }\r\n\r\n  createDataArray = data => {\r\n    let awgnArray = [];\r\n    if(!_.isEmpty(data)){\r\n      data.forEach(item => {\r\n        awgnArray.push(item + rnorm());\r\n      });\r\n    }\r\n    return awgnArray;\r\n  };\r\n  componentDidMount() {\r\n    this._ismounted = true;\r\n    this.animationId = window.requestAnimationFrame(this.updateData);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._ismounted = false;\r\n    window.cancelAnimationFrame(this.animationId);\r\n  }\r\n  \r\n  componentDidUpdate(prevProps){\r\n      const blockLinkData = prevProps.linkedBlocks[0];\r\n      if(blockLinkData.data !== this.state.blockLinkData.data){\r\n        let data = this.createDataArray(blockLinkData.data);\r\n        this.props.updateBlockValue({\r\n          block: this.props.block,\r\n          key: \"data\",\r\n          value: data,\r\n          indexOfBlock: this.props.indexOfBlock\r\n        });\r\n      this.setState({ data, blockLinkData});\r\n      }\r\n  }\r\n  \r\n  updateData() {\r\n    const { block } = this.props;\r\n    const { data } = this.state;\r\n    let new_data = _.clone(data);\r\n    if (!block.paused) {\r\n      new_data = shiftArray(new_data);\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: new_data\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { dimensions, block, blocks, clickedBlock } = this.props;\r\n    const { data, blockLinkData } = this.state;\r\n    let amplitude = 1;\r\n    if (\"amplitude\" in blockLinkData) amplitude = blockLinkData.amplitude;\r\n    const scale = getScales(data, dimensions, block, this.props.resolution, amplitude);\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          //focused={block === clickedBlock ? true : false}\r\n        />\r\n        <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n      </g>\r\n    );\r\n  }\r\n}\r\nAWGNData.propTypes = {\r\n  block: PropTypes.object,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number,\r\n  updateBlockValue: PropTypes.func\r\n};\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    linkedBlocks: selectors.linkedBlocksSelector(state, props),\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockValue }\r\n)(AWGNData);\r\n","import _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nimport { Axis } from \"./axis\";\r\nimport { axisRight } from \"d3-axis\";\r\nimport { updateBlockValue } from \"../actions\";\r\nimport { Line } from \"./line\";\r\nimport { shiftArray, createTimeArray, getScales, difference } from \"../utils\";\r\nimport * as selectors from \"../selectors\";\r\n\r\nclass ASKData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateData = this.updateData.bind(this);\r\n    const { blocks, block, resolution } = props;\r\n    let data = [];\r\n    //Para entrar aqui deve ter os 2 links, data e Carrier\r\n    //os dois podem estar na posicao 0 ou 1, entao deve selecionar o correto\r\n\r\n    let blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    data = this.createDataArray(blockLinkData.data, resolution, blockLinkCarrier);\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: \"data\",\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    });\r\n    this.state = {\r\n      data,\r\n      blockLinkData,\r\n      blockLinkCarrier\r\n    };\r\n  }\r\n  findLink = (linkName, blocks, links) => {\r\n    return _.clone(\r\n      _.find(\r\n        blocks,\r\n        block => (block.id === links[0] || block.id === links[1]) && block.name === linkName\r\n      )\r\n    );\r\n  };\r\n\r\n  createDataArray = (binaryArray, totalTime, blockLinkCarrier) => {\r\n    let data = [];\r\n    let a1 = blockLinkCarrier.amplitude, a2= blockLinkCarrier.amplitude * 2;\r\n    let time = createTimeArray(totalTime);\r\n    time.forEach((currentTime, index) => {\r\n      if(binaryArray[index] === -1){\r\n        data.push(blockLinkCarrier.data[index] * a1);\r\n      }\r\n      else{\r\n        data.push(blockLinkCarrier.data[index] * a2);\r\n      }\r\n    });\r\n    return data;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._ismounted = true;\r\n    this.animationId = window.requestAnimationFrame(this.updateData);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._ismounted = false;\r\n    window.cancelAnimationFrame(this.animationId);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { blocks, block } = this.props;\r\n    const { blockLinkCarrier } = this.state;\r\n    if (nextProps.block.links < nextProps.block.neededLinks) {\r\n      return;\r\n    }\r\n    let nextProps_blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let nextProps_blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    if (nextProps_blockLinkCarrier.data !== blockLinkCarrier.data) {\r\n      let data = this.createDataArray(\r\n        nextProps_blockLinkData.data,\r\n        this.props.resolution,\r\n        nextProps_blockLinkCarrier\r\n      );\r\n      this.props.updateBlockValue({\r\n        block: this.props.block,\r\n        key: \"data\",\r\n        value: data,\r\n        indexOfBlock: this.props.indexOfBlock\r\n      });\r\n      this.setState({ data, blockLinkCarrier: nextProps_blockLinkCarrier });\r\n    }\r\n  }\r\n  updateData() {\r\n    const { block } = this.props;\r\n    const { data } = this.state;\r\n    let new_data = _.clone(data);\r\n    if (!block.paused) {\r\n      new_data = shiftArray(new_data);\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: new_data\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { dimensions, block, clickedBlock } = this.props;\r\n    const { data } = this.state;\r\n    const scale = getScales(\r\n      data,\r\n      dimensions,\r\n      block,\r\n      this.props.resolution,\r\n      this.state.blockLinkCarrier.amplitude\r\n    );\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          focused={block === clickedBlock ? true : false}\r\n        />\r\n        <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nASKData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {  updateBlockValue }\r\n)(ASKData);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport {updateBlockValue } from '../actions'\r\nimport * as selectors from '../selectors'\r\n\r\nimport { axisRight } from 'd3-axis'\r\nimport { Axis } from './axis'\r\nimport { Line } from './line'\r\nimport { shiftArray, createTimeArray, getScales } from '../utils'\r\n\r\nimport ft from 'fourier-transform'\r\nimport oscillator from 'audio-oscillator'\r\nimport * as dsp from 'dsp.js'\r\n\r\nclass CarrierWaveData extends React.Component {\r\n\r\n  constructor (props) {\r\n    super(props)\r\n    this.updateData = this.updateData.bind(this)\r\n    const { resolution, block } = this.props\r\n    let data = this.createDataArray(resolution, block.frequency, block.amplitude)\r\n\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: 'data',\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    })\r\n    this.state = { data }\r\n  }\r\n\r\n  updateData () {\r\n    const { block } = this.props\r\n    const { data } = this.state\r\n    let newData = _.clone(data)\r\n    if (!block.paused) {\r\n      newData = shiftArray(newData)\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: newData\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  createDataArray (totalTime, frequency, amplitude) {\r\n\r\n    // var bufferSize = totalTime\r\n    // var sampleRate = 44100\r\n    // frequency *= frequency*2\r\n    // var frequency = 344\r\n    // var sine = new dsp.Oscillator(dsp.Oscillator.Sine, frequency, amplitude, bufferSize, sampleRate)\r\n    // sine.generate()\r\n    // var signal = sine.signal\r\n    // let data = [].slice.call(signal)\r\n    // var nthHarmonic = 8\r\n    // let harmonic = new dsp.Oscillator(dsp.Oscillator.Sine, frequency * nthHarmonic, 10 / nthHarmonic, bufferSize, sampleRate);\r\n    // harmonic.generate()\r\n    // sine.add(harmonic)\r\n\r\n\r\n\r\n    //var fft = new dsp.FFT(2048, 44100)\r\n    // var spectrum = fft.spectrum\r\n    //var sampleRate = 44100\r\n    //var lp12 = new dsp.IIRFilter(dsp.DSP.LOWPASS, 22050, 0, sampleRate)\r\n    //lp12.set(2500, 0.3)\r\n    //signal = lp12.func.process(signal)\r\n\r\n\r\n\r\n    let data = []\r\n    let time = createTimeArray(totalTime)\r\n    const angularFrequency = 2 * Math.PI * frequency\r\n    time.forEach(currentTime => {\r\n      let wt = angularFrequency * currentTime\r\n      data.push(amplitude * Math.sin(wt))\r\n    })\r\n    return data\r\n  }\r\n\r\n  render () {\r\n    const { dimensions, block, clickedBlock } = this.props\r\n    const { data } = this.state\r\n    const scale = getScales(data, dimensions, block, this.props.resolution, block.amplitude)\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          focused={block === clickedBlock}\r\n        />\r\n        <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n      </g>\r\n    )\r\n  }\r\n  componentDidMount () {\r\n    this._ismounted = true\r\n    this.animationId = window.requestAnimationFrame(this.updateData)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this._ismounted = false\r\n    window.cancelAnimationFrame(this.animationId)\r\n  }\r\n  componentWillReceiveProps (nextProps) {\r\n    const { resolution, block } = nextProps\r\n    if (block.updated) {\r\n      let data = this.createDataArray(resolution, block.frequency, block.amplitude)\r\n      this.props.updateBlockValue({\r\n        block: this.props.block,\r\n        key: 'data',\r\n        value: data,\r\n        indexOfBlock: this.props.indexOfBlock\r\n      })\r\n      this.props.updateBlockValue({\r\n        block: this.props.block,\r\n        key: 'updated',\r\n        value: false,\r\n        indexOfBlock: this.props.indexOfBlock\r\n      })\r\n      this.setState({ data })\r\n    }\r\n  }\r\n}\r\nCarrierWaveData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: selectors.projectBlocksSelector(state),\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  {updateBlockValue }\r\n)(CarrierWaveData)\r\n","import React from 'react'\r\nimport Dimensions from 'react-dimensions'\r\n\r\nimport BinaryData from './BinaryData'\r\nimport BPSKData from './BPSKData'\r\nimport FSKData from './FSKData'\r\nimport AWGNData from './AWGNData'\r\nimport ASKData from './ASKData'\r\nimport CarrierWaveData from './CarrierWaveData'\r\n\r\nconst BlockCard = props => {\r\n  const component = new React.Component(props)\r\n  component.render = () => {\r\n    const { block } = component.props\r\n    let data\r\n    let width = component.props.containerWidth\r\n    let height = 164\r\n    const expandedHeight = 780\r\n    if(props.expanded){\r\n      height = expandedHeight\r\n    }\r\n    if (block.name === 'Data') {\r\n      data = <BinaryData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'Carrier Wave') {\r\n      data = <CarrierWaveData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'BPSK' && block.linked) {\r\n      data = <BPSKData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'FSK' && block.linked) {\r\n      data = <FSKData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'ASK' && block.linked) {\r\n      data = <ASKData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'AWGN' && block.linked) {\r\n      data = <AWGNData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    return (\r\n      <svg height={height} width={width}>\r\n        {data}\r\n      </svg>\r\n    )\r\n  }\r\n  return component\r\n}\r\n\r\nexport default Dimensions()(BlockCard)\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\r\n\r\nimport { Col } from \"react-flexbox-grid\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nimport BlockCard from \"./BlockCard\";\r\n\r\n//react redux\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions\";\r\n\r\nconst styles = {\r\n  iconStyle: {\r\n    position: \"relative\",\r\n    top: \"6px\"\r\n  },\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  }\r\n};\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass ExpandedBlockCard extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  onClickHandler = (block, value, key) => {\r\n    this.props.updateBlockValue({ value, key, id: block.id });\r\n    this.props.blockUpdated({ block, updated: true });\r\n  };\r\n\r\n  render() {\r\n    const { classes, block } = this.props;\r\n    let haveProperties = false;\r\n    if (!_.isNil(block.frequency)) {\r\n      haveProperties = true;\r\n    }\r\n    const showProperties = haveProperties ? (\r\n      <div className={classes.flex}>\r\n        <Typography color=\"inherit\">\r\n          {/* <Left onClick={(event,value)=> this.onClickHandler(block,block.frequency - 1,'frequency')} style={styles.iconStyle}/> */}\r\n          Frequency: {block.frequency}\r\n          {/* <Right onClick={(event,value)=> this.onClickHandler(block,block.frequency + 1,'frequency')} style={styles.iconStyle}/> */}\r\n        </Typography>\r\n        <Typography color=\"inherit\">\r\n          {/* <Left onClick={(event,value)=> this.onClickHandler(block,block.amplitude - 1,'amplitude')} style={styles.iconStyle}/> */}\r\n          Amplitude: {block.amplitude}\r\n          {/* <Right onClick={(event,value)=> this.onClickHandler(block,block.amplitude + 1,'amplitude')} style={styles.iconStyle}/> */}\r\n        </Typography>\r\n      </div>\r\n    ) : (\r\n        <div />\r\n      );\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }}>\r\n        <AspectRatioIcon onClick={this.handleClickOpen} />\r\n        <Dialog\r\n          fullScreen\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          TransitionComponent={Transition}>\r\n          <AppBar className={classes.appBar} color=\"primary\">\r\n            <Toolbar>\r\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\r\n                {block.name}\r\n              </Typography>\r\n              {showProperties}\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Paper style={{ height: \"100%\" }}>\r\n            <Col center=\"xs\" style={{ height: \"90%\", textAlign: \"center\" }}>\r\n              <div style={{ height: \"5%\" }} />\r\n              <div style={{ height: \"100%\", paddingLeft: 16 }}>\r\n                <BlockCard block={block} key={block.id} expanded={true} />\r\n              </div>\r\n            </Col>\r\n          </Paper>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExpandedBlockCard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return { amplitude: state.mainPage.present.amplitude };\r\n};\r\n\r\nlet ExpandedBlockCardWithStyles = withStyles(styles)(ExpandedBlockCard);\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(ExpandedBlockCardWithStyles);\r\n","import _ from 'lodash'\r\nimport { connect } from 'react-redux'\r\nimport { pauseBlock } from '../actions'\r\nimport BlockCard from './BlockCard'\r\nimport Button from '@material-ui/core/Button'\r\nimport ExpandBlockCard from './ExpandedBlockCard'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\r\nimport withWidth from '@material-ui/core/withWidth';\r\n\r\nimport * as selectors from '../selectors'\r\nlet style = {\r\n  height: 200\r\n}\r\n\r\nconst getHeigth = (width,blocksNum) => {\r\n  let style = { height: 200 }\r\n  if(blocksNum === 0){\r\n    return style\r\n  }\r\n  if (width === 'xs') {\r\n    style = { height: blocksNum * 200 }\r\n  }\r\n  else if (width === 'sm') {\r\n    let rows = Math.ceil(blocksNum / 3)\r\n    style = { height: rows * 200 }\r\n  }\r\n  else {\r\n    let rows = Math.ceil(blocksNum / 4)\r\n    style = { height: rows * 200 }\r\n  }\r\n  return style\r\n}\r\n\r\nconst BottomArea = props => {\r\n  const blocksNum = _.filter(props.blocks, block => block.render).length\r\n  style = getHeigth(props.width,blocksNum)\r\n  // Se o total de links for diferente de 0 e o bloco não estiver linkado ele nao é renderizado\r\n  let renderBlockCards = _.map(props.blocks, block => {\r\n    if (!block.render) {\r\n      return\r\n    }\r\n    return (\r\n      <Grid priority={block.neededLinks} key={block.id} container item xs={12} sm={4} md={3}>\r\n        {/* Button 1 */}\r\n        <Grid xs={2} container item style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }}>\r\n          {block.paused ?\r\n            <PlayArrowIcon onClick={event => props.pauseBlock({ block })} /> :\r\n            <PauseIcon onClick={event => props.pauseBlock({ block })} />\r\n          }\r\n        </Grid>\r\n        <Grid xs={8} container item >\r\n          <Typography variant=\"subheading\" align=\"center\" style={{ marginTop: 5, width: '90%' }}>\r\n            <b>{block.name}</b>\r\n          </Typography>\r\n        </Grid>\r\n        {/* Button 2 */}\r\n        <Grid xs={2} container item justify=\"center\">\r\n          <ExpandBlockCard block={block} />\r\n        </Grid>\r\n        {/* BlockCard */}\r\n        <Grid style={{ height: 180 }} container item xs={12} spacing={16} style={{paddingLeft:16}}>\r\n          <Grid xs={12} item>\r\n            <BlockCard block={block} key={block.id} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  })\r\n  return (\r\n    <Paper elevation={0} square={true} style={style}>\r\n      <Grid container>{renderBlockCards}</Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: selectors.projectBlocksSelector(state),\r\n  }\r\n}\r\n\r\nexport default withWidth()(connect(\r\n  mapStateToProps,\r\n  { pauseBlock }\r\n)(BottomArea))\r\n","import React, { Fragment } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport * as _ from 'lodash';\r\n//import Subheader from 'material-ui/Subheader';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { updateBlockValue, updateDropDown } from '../actions';\r\n//import {updateBlockValue} from '../SideBar/actions';\r\n\r\nconst style = {\r\n\tfontWeight: 'bold'\r\n};\r\nconst ID = () => {\r\n\treturn '_' + Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nconst SideBarBlock = (props) => {\r\n\tconst renderRequiredLinks = _.map(props.clickedBlock.requiredLinks, (link, index) => {\r\n\t\tconsole.log(link);\r\n\t\treturn link === 'None' ? (\r\n\t\t\t<Typography key={ID()}>{link}</Typography>\r\n\t\t) : (\r\n\t\t\t<Typography key={ID()}>{link} :</Typography>\r\n\t\t);\r\n\t});\r\n\treturn (\r\n\t\t<Paper elevation={0} square={true} key={props.clickedBlock.id} style={{ height: '100%', paddingTop: 16 }}>\r\n\t\t\t{_.isEmpty(props.clickedBlock) ? (\r\n\t\t\t\t<Typography variant=\"title\" gutterBottom align=\"center\">\r\n\t\t\t\t\tBlock Details\r\n\t\t\t\t</Typography>\r\n\t\t\t) : (\r\n\t\t\t\t<Typography variant=\"title\" gutterBottom align=\"center\">\r\n\t\t\t\t\t{props.clickedBlock.name}\r\n\t\t\t\t</Typography>\r\n\t\t\t)}\r\n\t\t\t<List>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tstyle={style}\r\n\t\t\t\t\t\tprimary={\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">{props.clickedBlock.description}</Typography>\r\n\t\t\t\t\t\t\t\t<p />\r\n\t\t\t\t\t\t\t\t{!_.isEmpty(props.clickedBlock) && (\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subheading\" gutterBottom align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<b>Required Links</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{renderRequiredLinks}\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t{/* <ListItem>\r\n                    <ListItemText\r\n                      primary=\"Formula:\"\r\n                    />\r\n                </ListItem> */}\r\n\t\t\t</List>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tclickedBlock: state.mainPage.present.clickedBlock\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, { updateBlockValue, updateDropDown })(SideBarBlock);\r\n","import _ from 'lodash';\r\nimport { Line } from 'react-lineto';\r\nimport Draggable from 'react-draggable';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Left from '@material-ui/icons/ChevronLeft';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Fragment } from 'react';\r\nimport Right from '@material-ui/icons/ChevronRight';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\nimport { notHidden, valueToBinary } from '../utils';\r\nimport * as selectors from '../selectors';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport SideBarBlock from '../SideBar/SideBarBlock'\r\n\r\nconst blockHeight = 100;\r\nconst blockWidth = 160;\r\nconst blockStyle = {\r\n\tborderStyle: 'solid',\r\n\tborderWidth: '1px 1px 1px 1px',\r\n\tborderColor: '#77a6f7',\r\n\tbackgroundColor: '#d3e3fc',\r\n\tzIndex: 2\r\n};\r\nconst blockStyleInput = {\r\n\tcursor: 'pointer',\r\n\tmaxWidth: '100%',\r\n\tbackgroundColor: '#00887a'\r\n};\r\nconst blockStyleOutput = {\r\n\tcursor: 'pointer',\r\n\tmaxWidth: '100%',\r\n\tbackgroundColor: '#77a6f7'\r\n};\r\nconst iconStyle = {\r\n\tposition: 'relative',\r\n\ttop: '7px',\r\n\tcursor: 'pointer'\r\n};\r\n\r\nconst blockTopRow = {\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\tjustifyContent: 'center'\r\n}\r\n\r\nconst OUTPUT = 195\r\nconst INPUT = 5\r\n\r\nclass Block extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tprojectTabOffset: 0,\r\n\t\t\toffsetX: 0,\r\n\t\t\toffsetY: 0,\r\n\t\t\tmouseClicked: false,\r\n\t\t\tposition: 5,\r\n\t\t\tblockPosition: props.block.position,\r\n\t\t\tanchorEl: null\r\n\t\t};\r\n\t}\r\n\tcomponentDidMount = () => {\r\n\t\tthis.props.blockClicked(this.props.block);\r\n\t\tthis.calculateOffset('projectTab');\r\n\t};\r\n\r\n\tcalculateOffset = (element) => {\r\n\t\tlet projectTabOffset = document.getElementsByClassName(element)[0].getBoundingClientRect();\r\n\t\tlet offsetX = window.pageXOffset + projectTabOffset.left;\r\n\t\tlet offsetY = window.pageYOffset + projectTabOffset.top;\r\n\t\tthis.setState({\r\n\t\t\tprojectTabOffset,\r\n\t\t\toffsetX,\r\n\t\t\toffsetY\r\n\t\t});\r\n\t};\r\n\r\n\tgetBounds = () => ({\r\n\t\tleft: 0,\r\n\t\ttop: 0,\r\n\t\tright: this.state.projectTabOffset.width - blockWidth - (this.props.block.neededLinks === 0 ? 16 : 32),\r\n\t\tbottom: this.state.projectTabOffset.height - blockHeight\r\n\t});\r\n\r\n\tgetPosition(bounds) {\r\n\t\tlet { position } = this.props.block;\r\n\t\tif (position.x > bounds.right) {\r\n\t\t\tposition.x = bounds.right;\r\n\t\t}\r\n\t\tif (position.y > bounds.bottom) {\r\n\t\t\tposition.y = bounds.bottom;\r\n\t\t}\r\n\t\treturn position;\r\n\t}\r\n\r\n\thandleClick = event => {\r\n\t\tif (this.props.block !== this.props.clickedBlock) {\r\n\t\t\tthis.props.blockClicked(this.props.block);\r\n\t\t}\r\n\t\tif (window.innerWidth < 960) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tanchorEl: event.currentTarget,\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\thandleClose = () => {\r\n\t\tthis.setState({\r\n\t\t\tanchorEl: null,\r\n\t\t});\r\n\t};\r\n\r\n\thandleDrag = (e, ui) => {\r\n\t\tconst { x, y } = this.props.block.position;\r\n\t\tconst deltaPosition = {\r\n\t\t\tx: x + ui.deltaX,\r\n\t\t\ty: y + ui.deltaY\r\n\t\t};\r\n\t\tthis.props.moveBlock({\r\n\t\t\tvalue: deltaPosition,\r\n\t\t\tblock: this.props.block,\r\n\t\t\tindexOfBlock: this.props.indexOfBlock\r\n\t\t});\r\n\t};\r\n\r\n\tlinkBlocks = (position) => {\r\n\t\tconst { blocksToLinkArray, block } = this.props;\r\n\t\tthis.setState({ position });\r\n\t\t//Can link only from the input to the output and cannot link fully linked blocks\r\n\t\t//Need to check if a block is already fully linked but other block wants to link with\r\n\t\t//it in the output\r\n\t\t//Nao deixar linkar quando o bloco que voce quer linkar nao esta linkado e nao tem Data\r\n\t\tif (\r\n\t\t\t(position === OUTPUT && (blocksToLinkArray.length === 0 || block.data.length === 0)) ||\r\n\t\t\t(block.links.length > block.neededLinks && block.neededLinks !== 0)\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tif (!this.blocksToLinkArrayIsFull() && !_.includes(blocksToLinkArray, this.props.block)) {\r\n\t\t\t\tthis.props.blocksToLink({ block });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\thasInput = block => block.neededLinks ? block.neededLinks > 0 : false\r\n\r\n\tblocksToLinkArrayIsFull = () => this.props.blocksToLinkArray.length >= 2;\r\n\r\n\trenderLines = () => {\r\n\t\tlet { selectLink, block, projects, selectedLink, currentProject } = this.props;\r\n\t\tlet { offsetX, offsetY } = this.state;\r\n\r\n\t\tif (block.neededLinks === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn block.links.map((linkPosition) => {\r\n\t\t\tlet linkBlock = _.find(projects[currentProject].blocks, (block) => block.id === linkPosition);\r\n\t\t\tlet borderStyle = 'solid';\r\n\t\t\tif (selectedLink.id === block.id && selectedLink.linkPosition === linkPosition) {\r\n\t\t\t\tborderStyle = 'dashed';\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div key={linkPosition} onClick={(event) => selectLink({ id: block.id, linkPosition })}>\r\n\t\t\t\t\t<Line\r\n\t\t\t\t\t\tborderWidth={3}\r\n\t\t\t\t\t\tborderStyle={borderStyle}\r\n\t\t\t\t\t\tborderColor=\"black\"\r\n\t\t\t\t\t\tzIndex={1}\r\n\t\t\t\t\t\tx0={block.position.x + 8 + offsetX}\r\n\t\t\t\t\t\ty0={block.position.y + blockHeight / 2 + offsetY}\r\n\t\t\t\t\t\tx1={linkBlock.position.x + offsetX + 170}\r\n\t\t\t\t\t\ty1={linkBlock.position.y + blockHeight / 2 + offsetY}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\trenderLineToCursor = (position) => {\r\n\t\tlet { block, cursorPosition } = this.props;\r\n\t\tlet { offsetX, offsetY } = this.state;\r\n\t\t//render line only when the block is not fully linked and is not already linking\r\n\t\tif (this.isLinking(block)) {\r\n\t\t\treturn (\r\n\t\t\t\t<Line\r\n\t\t\t\t\tborderWidth={3}\r\n\t\t\t\t\tborderStyle=\"solid\"\r\n\t\t\t\t\tborderColor=\"black\"\r\n\t\t\t\t\tzIndex={1}\r\n\t\t\t\t\tx0={block.position.x + position + offsetX}\r\n\t\t\t\t\ty0={block.position.y + blockHeight / 2 + offsetY}\r\n\t\t\t\t\tx1={cursorPosition.x + offsetX}\r\n\t\t\t\t\ty1={cursorPosition.y + offsetY}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else return null;\r\n\t};\r\n\r\n\tisLinking = (block) => _.includes(this.props.blocksToLinkArray, block);\r\n\r\n\tshowProperties = (block) => {\r\n\t\treturn _.map(block, (value, key) => {\r\n\t\t\tif (key === 'binary') {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Typography key={key} variant=\"body1\" style={{ marginLeft: 4 }}>\r\n\t\t\t\t\t\t<b>{_.capitalize(key)}:</b>\r\n\t\t\t\t\t\t{valueToBinary(value)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t//Hide unwanted properties\r\n\t\t\tif (notHidden(key)) {\r\n\t\t\t\tlet sum = 1;\r\n\t\t\t\tif (key === 'frequency') {\r\n\t\t\t\t\tsum = 6;\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Typography key={key} variant=\"body1\" style={{ marginLeft: 4 }}>\r\n\t\t\t\t\t\t<b>{_.capitalize(key)}:</b>\r\n\t\t\t\t\t\t<Left\r\n\t\t\t\t\t\t\tonClick={() => this.updateBlockOnClick(this.props.block[key] - sum, key)}\r\n\t\t\t\t\t\t\tstyle={iconStyle}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{value}\r\n\t\t\t\t\t\t<Right\r\n\t\t\t\t\t\t\tonClick={() => this.updateBlockOnClick(this.props.block[key] + sum, key)}\r\n\t\t\t\t\t\t\tstyle={iconStyle}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tupdateBlockOnClick = (value, key) => {\r\n\t\tthis.props.updateBlockValue({\r\n\t\t\tvalue,\r\n\t\t\tkey,\r\n\t\t\tblock: this.props.block\r\n\t\t});\r\n\t\tthis.props.updateBlockValue({\r\n\t\t\tvalue: true,\r\n\t\t\tkey: 'updated',\r\n\t\t\tblock: this.props.block\r\n\t\t});\r\n\t};\r\n\r\n\trender = () => {\r\n\t\tconst { block } = this.props;\r\n\t\tconst bounds = this.getBounds();\r\n\t\tconst position = this.getPosition(bounds);\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Draggable\r\n\t\t\t\t\tgrid={[10, 10]}\r\n\t\t\t\t\tbounds={bounds}\r\n\t\t\t\t\tonDrag={this.handleDrag}\r\n\t\t\t\t\t// onStop={this.handleStop}\r\n\t\t\t\t\tposition={position}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tstyle={{ height: 100, width: 192, position: 'absolute', zIndex: 2 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.hasInput(block) && (\r\n\t\t\t\t\t\t\t// INPUT\r\n\t\t\t\t\t\t\t<Grid item container direction=\"column\" xs={1}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} />\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\txs={4}\r\n\t\t\t\t\t\t\t\t\tstyle={blockStyleInput}\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.linkBlocks(INPUT)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{/* NAME AND PROPERTIES */}\r\n\t\t\t\t\t\t<Grid item container xs={10} style={blockStyle} direction=\"column\">\r\n\t\t\t\t\t\t\t{/* BLOCK INFO */}\r\n\t\t\t\t\t\t\t<Grid item container xs={3} style={{ maxWidth: '100%' }}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={2} style={blockTopRow}>\r\n\t\t\t\t\t\t\t\t\t<InfoIcon style={{ fontSize: 'larger', cursor: 'pointer' }} onClick={this.handleClick} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={8} style={blockTopRow}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subheading\" gutterBottom align=\"center\" style={{ margin: '0px' }}>\r\n\t\t\t\t\t\t\t\t\t\t<b>{block.name}</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{/* DELETE THE BLOCK */}\r\n\t\t\t\t\t\t\t\t<Grid item xs={2} style={blockTopRow}>\r\n\t\t\t\t\t\t\t\t\t<CloseIcon style={{ fontSize: 'larger', cursor: 'pointer' }} onClick={() => this.props.deleteBlock({ block })} />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item container xs={9} style={{ maxWidth: '100%' }}>\r\n\t\t\t\t\t\t\t\t{/* BLOCK PROPERTIES */}\r\n\t\t\t\t\t\t\t\t{this.showProperties(block)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{/* OUTPUT */}\r\n\t\t\t\t\t\t<Grid item container direction=\"column\" xs={1}>\r\n\t\t\t\t\t\t\t<Grid item xs={4} />\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\txs={4}\r\n\t\t\t\t\t\t\t\tstyle={blockStyleOutput}\r\n\t\t\t\t\t\t\t\tonClick={() => this.linkBlocks(OUTPUT)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Grid item xs={4} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Popover\r\n\t\t\t\t\t\t\tid=\"simple-popper\"\r\n\t\t\t\t\t\t\topen={Boolean(this.state.anchorEl)}\r\n\t\t\t\t\t\t\tanchorEl={this.state.anchorEl}\r\n\t\t\t\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<SideBarBlock />\r\n\t\t\t\t\t\t</Popover>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t</Draggable>\r\n\t\t\t\t{!_.isNil(block.links) ? this.renderLines() : []}\r\n\t\t\t\t{this.renderLineToCursor(this.state.position)}\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nBlock.propTypes = {\r\n\tselectLink: PropTypes.func.isRequired,\r\n\ttrackLocation: PropTypes.func.isRequired,\r\n\tblockClicked: PropTypes.func.isRequired,\r\n\tblock: PropTypes.object.isRequired,\r\n\tdimensions: PropTypes.object.isRequired,\r\n\tcreateLink: PropTypes.func.isRequired,\r\n\tblocksToLink: PropTypes.func.isRequired,\r\n\tblocksToLinkArray: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n\tconst { clickedBlock, projects, selectedLink, currentProject, blocksToLinkArray } = state.mainPage.present;\r\n\r\n\treturn {\r\n\t\tclickedBlock,\r\n\t\tprojects,\r\n\t\tselectedLink,\r\n\t\tcurrentProject,\r\n\t\tblocksToLinkArray,\r\n\t\tlinkedBlocks: selectors.linkedBlocksSelector(state, props),\r\n\t\tindexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(Block);\r\n","import React, { Fragment } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport _ from \"lodash\";\r\nimport Dimensions from \"react-dimensions\";\r\nimport ReactCursorPosition from \"react-cursor-position\";\r\n\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport { updateCurrentProject } from \"../actions\";\r\nimport Block from \"./Block\";\r\n\r\nconst ProjectArea = props => {\r\n  let width = props.containerWidth;\r\n  let height = props.containerHeight;\r\n  return (\r\n    <Fragment>\r\n      <AppBar elevation={1} square={true} position=\"static\">\r\n        <Tabs value={0}>\r\n          <Tab label={props.project.name} key={props.project.id} value={props.project.id} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <ReactCursorPosition>\r\n        <ProjectTab key=\"0\" blocks={props.project.blocks} dimensions={{ width, height }} />\r\n      </ReactCursorPosition>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst projectTabStyle = {\r\n  height: 600,\r\n  zIndex: -10\r\n};\r\n\r\nconst ProjectTab = props => {\r\n  const renderBlocks = _.map(props.blocks, block => {\r\n    return (\r\n      <Block\r\n        cursorPosition={props.position}\r\n        key={block.id}\r\n        block={block}\r\n        dimensions={props.dimensions}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <Paper square={true} elevation={0} className=\"projectTab\" style={projectTabStyle}>\r\n      {renderBlocks}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //projects : projectsSelector(state)\r\n    project: state.mainPage.present.projects[0]\r\n  };\r\n};\r\nconst projectArea = connect(\r\n  mapStateToProps,\r\n  { updateCurrentProject }\r\n)(ProjectArea);\r\nexport default Dimensions()(projectArea);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  flex: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nfunction Menu(props) {\r\n  const { classes } = props;\r\n  return (\r\n    //<div className={classes.root}>\r\n      <AppBar elevation={0} square={true} position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\r\n            TCC\r\n          </Typography>\r\n          <Button color=\"inherit\">Lucas</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    //\t</div>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Menu);\r\n","import React, { Fragment, useState } from \"react\";\r\n\r\n//Material\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport _ from \"lodash\";\r\n\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { addBlockToProject } from \"../actions\";\r\nimport useWindowDimensions from '../../../hooks/WindowDimensions'\r\n//let SelectableList = makeSelectable(List);\r\n\r\n// const subHeaderStyle={\r\n//     backgroundColor : blue500,\r\n//     color : grey50\r\n// }\r\nconst style = {\r\n  height: \"100%\"\r\n};\r\n\r\nlet flexContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  padding: 0,\r\n};\r\n\r\n\r\nconst SideBar = props => {\r\n  const [drawerOpen, setDrawerOpen] = useState(false)\r\n  const onClickHandler = block => {\r\n    props.addBlockToProject({ block, idCounter: props.idCounter });\r\n  };\r\n\r\n  //Cria a lista de items\r\n  const ItemList = _.map(props.blocks, block => {\r\n    return (\r\n      <ListItem key={block.name} button onClick={() => onClickHandler(block)}>\r\n        <ListItemText primary={block.name} />\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  const blocksList =\r\n    <List component=\"nav\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" style={{ position: \"inherit\" }}>\r\n          Blocks\r\n        </ListSubheader>}>\r\n      {ItemList}\r\n    </List>\r\n\r\n  return (\r\n    <Fragment>\r\n      <Hidden smUp>\r\n        <Button onClick={() => setDrawerOpen(true)}>New Block</Button>\r\n        <Drawer open={drawerOpen} onClose={() => setDrawerOpen(false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => setDrawerOpen(false)}\r\n            onKeyDown={() => setDrawerOpen(false)}\r\n          >\r\n            <div style={{ width: 250 }}>\r\n              {blocksList}\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden xsDown>\r\n        <Paper elevation={0} square={true} style={{ height: \"100%\" }}>\r\n          {blocksList}\r\n        </Paper>\r\n      </Hidden>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    blocks: state.mainPage.present.blocks,\r\n    idCounter: state.mainPage.present.idCounter\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addBlockToProject }\r\n)(SideBar);\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\n// Imports dos components do projeto\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomArea from './BottomArea/BottomArea';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProjectArea from './ProjectArea/ProjectArea';\r\nimport _ from 'lodash';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport Menu from './Menu';\r\nimport SideBar from './SideBar/SideBar';\r\nimport SideBarBlock from './SideBar/SideBarBlock';\r\n\r\nimport * as selectors from './selectors';\r\nimport { deleteLink, deleteBlock } from './actions';\r\nimport KeyHandler, { KEYPRESS } from 'react-key-handler';\r\n\r\nimport { ActionCreators } from 'redux-undo';\r\nimport { connect } from 'react-redux';\r\n// import { createDb } from 'C:/Users/Lucas/Documents/GitHub/tcc/src/firebase.js';\r\nconst styles = (theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing.unit * 2,\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: theme.palette.text.secondary\r\n\t}\r\n});\r\n// createDb();\r\nconst App = (props) => {\r\n\tif (props.isAuthenticated) {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tpaddingRight: 16,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<KeyHandler\r\n\t\t\t\t\tkeyEventName={KEYPRESS}\r\n\t\t\t\t\tkeyValue=\"q\"\r\n\t\t\t\t\tonKeyHandle={() => props.deleteBlock(props.clickedBlock)}\r\n\t\t\t\t/>\r\n\t\t\t\t<KeyHandler\r\n\t\t\t\t\tkeyEventName={KEYPRESS}\r\n\t\t\t\t\tkeyValue=\"x\"\r\n\t\t\t\t\tonKeyHandle={() =>\r\n\t\t\t\t\t\tprops.deleteLink({\r\n\t\t\t\t\t\t\tblock: _.find(props.blocks, (block) => block.id === props.selectedLink.id),\r\n\t\t\t\t\t\t\tlink: props.selectedLink.linkPosition\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<KeyHandler keyEventName={KEYPRESS} keyValue=\"z\" onKeyHandle={() => props.undo()} />\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Grid container justify=\"flex-end\" spacing={16}>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs item>\r\n\t\t\t\t\t\t\t<Menu />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs={12} sm={3} md={2} item>\r\n\t\t\t\t\t\t\t<SideBar />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid xs={12} sm={9} md={8} item>\r\n\t\t\t\t\t\t\t<ProjectArea />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Hidden smDown>\r\n\t\t\t\t\t\t\t<Grid md={2} item>\r\n\t\t\t\t\t\t\t\t<SideBarBlock />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Hidden>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs={12} item>\r\n\t\t\t\t\t\t\t<BottomArea />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <Redirect to=\"/\" />;\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tdeleteLink: (payload) => {\r\n\t\t\tdispatch(deleteLink(payload));\r\n\t\t},\r\n\t\tdeleteBlock: (clickedBlock) => {\r\n\t\t\tdispatch(deleteBlock(clickedBlock));\r\n\t\t},\r\n\t\tundo: () => {\r\n\t\t\tdispatch(ActionCreators.undo());\r\n\t\t}\r\n\t};\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuthenticated: state.mainPage.present.isAuthenticated,\r\n\t\tclickedBlock: state.mainPage.present.clickedBlock,\r\n\t\tselectedLink: state.mainPage.present.selectedLink,\r\n\t\tblocks: selectors.projectBlocksSelector(state)\r\n\t};\r\n};\r\n\r\nconst AppWithStyles = withRouter(withStyles(styles)(App));\r\nconst AppWithStylesWithoutRouter = withStyles(styles)(App);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppWithStylesWithoutRouter);\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\n// import firebase from 'firebase'\r\n\r\nconst styles = theme => ({\r\n  // textField: {   marginLeft: theme.spacing.unit,   marginRight:\r\n  // theme.spacing.unit,   width: 200 },\r\n  root: {\r\n    ...theme\r\n      .mixins\r\n      .gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    height: 200,\r\n    textAlign: \"center\"\r\n  },\r\n  // card: {   maxWidth: 345 },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: 'popup',\r\n  signInSuccessUrl: '/Home',\r\n  // We will display Google and Facebook as auth providers.\r\n  // signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID]\r\n}\r\nclass LoginPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usuario: \"\",\r\n      senha: \"\"\r\n    };\r\n  }\r\n\r\n  validateForm = () => this.state.usuario.length > 0 && this.state.senha.length > 0;\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if (this.state.usuario === \"admin\" && this.state.senha === \"admin\") {\r\n      this\r\n        .props\r\n        .history\r\n        .push(\"/Home\");\r\n    } else {\r\n      alert(\"Usuário ou senha inválidos.\");\r\n    }\r\n    // try {   await Auth.signIn(this.state.usuario, this.state.password);\r\n    // alert(\"Logged in\"); } catch (e) {   alert(e.message); }\r\n  };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div>\r\n        <CssBaseline/>\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{\r\n          minHeight: \"100vh\"\r\n        }}>\r\n          <Grid item xs={3} justify=\"center\">\r\n            <Card\r\n              style={{\r\n              textAlign: \"center\"\r\n            }}\r\n              className={classes.card}>\r\n              <CardHeader title=\"Login\"/>\r\n              <form\r\n                onSubmit={this.handleSubmit}\r\n                className={classes.container}\r\n                noValidate\r\n                autoComplete=\"off\">\r\n                <CardContent>\r\n                  <TextField\r\n                    autoFocus\r\n                    id=\"usuario\"\r\n                    label=\"Usuário\"\r\n                    className={classes.textField}\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                    margin=\"normal\"/>\r\n                  <div/>\r\n                  <TextField\r\n                    id=\"senha\"\r\n                    label=\"Senha\"\r\n                    className={classes.textField}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={this.handleChange}\r\n                    margisn=\"normal\"/>\r\n                    {/* <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/> */}\r\n                </CardContent>\r\n                <CardActions\r\n                  style={{\r\n                  justifyContent: \"center\"\r\n                }}>\r\n                  <Button type=\"submit\" disabled={!this.validateForm()} // component={Link} }} // to=\"/Home\"\r\n                    variant=\"contained\" color=\"primary\"  className={classes.button}>\r\n                    Login\r\n                  </Button>\r\n                </CardActions>\r\n              </form>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      ); } } LoginPage.propTypes = {classes : PropTypes.object.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(LoginPage));","// In production, we register a service worker to serve assets from local cache.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background. To learn more about the\r\n// benefits of this model, read https://goo.gl/KwvDNy. This link also includes\r\n// instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n// [::1] is the IPv6 localhost address.\r\nwindow.location.hostname === '[::1]' ||\r\n// 127.0.0.1/8 is considered localhost for IPv4.\r\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin from\r\n      // what our page is served on. This might happen if a CDN is used to serve\r\n      // assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl)\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or\r\n        // not.\r\n        checkValidServiceWorker(swUrl)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator\r\n    .serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and the fresh content\r\n              // will have been added to the cache. It's the perfect time to display a \"New\r\n              // content is available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.')\r\n            } else {\r\n              // At this point, everything has been precached. It's the perfect time to\r\n              // display a \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  // eslint-disable-next-line no-undef\r\n  fetch(swUrl).then(response => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator\r\n        .serviceWorker\r\n        .ready\r\n        .then(registration => {\r\n          registration\r\n            .unregister()\r\n            .then(() => {\r\n              window\r\n                .location\r\n                .reload()\r\n            })\r\n        })\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl)\r\n    }\r\n  }).catch(() => {\r\n    console.log('No internet connection found. App is running in offline mode.')\r\n  })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator\r\n      .serviceWorker\r\n      .ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport * as consts from '../../constants';\r\nimport update from 'immutability-helper';\r\n\r\nimport { initialState } from '../../initialState';\r\nimport { createReducer } from 'redux-starter-kit';\r\n\r\nimport * as actions from './actions';\r\nimport _ from 'lodash';\r\n\r\nconst reducer = createReducer(initialState, {\r\n\t// ADICIONA BLOCO AO PROJETO\r\n\t[actions.addBlockToProject]: (state, action) => {\r\n\t\tconst newBlock = _.clone(action.payload.block);\r\n\t\tnewBlock['id'] = state.idCounter++;\r\n\t\tstate.projects[state.currentProject].blocks.push(newBlock);\r\n\t\tstate.projects[state.currentProject].blocks = _.sortBy(state.projects[state.currentProject].blocks, ['priority'])\r\n\t},\r\n\t// ATUALIZA O BLOCO CLICADO\r\n\t[actions.blockClicked]: (state, action) => {\r\n\t\tstate.clickedBlock = action.payload;\r\n\t},\r\n\t// ATUALIZA O ARRAY DE BLOCOS QUE VAO SER LINKADOS\r\n\t[actions.blocksToLink]: (state, action) => {\r\n\t\tstate.blocksToLinkArray.push(action.payload.block);\r\n\t\t// Se o usuário fez o link entre os 2 blocos(clicou na saída e na entrada), adiciona o link no objeto\r\n\t\tif (state.blocksToLinkArray.length === 2) {\r\n\t\t\tconst blockToReceiveData = state.blocksToLinkArray[0];\r\n\t\t\tconst blockToSendData = state.blocksToLinkArray[1];\r\n\t\t\tlet block = _.find(state.projects[state.currentProject].blocks, { 'id': blockToReceiveData.id })\r\n\t\t\tblock.links.push(blockToSendData.id);\r\n\t\t\t// Checa se o bloco tem links suficientes para mostrar os dados\r\n\t\t\tif (block.links.length >= block.neededLinks) {\r\n\t\t\t\tblock.linked = true;\r\n\t\t\t\tblock.render = true;\r\n\t\t\t}\r\n\t\t\t// Limpa os blocos que estão sendo linkados\r\n\t\t\tstate.blocksToLinkArray = [];\r\n\t\t}\r\n\t},\r\n\t// DELETA O BLOCO DO PROJETO\r\n\t[actions.deleteBlock]: (state, action) => {\r\n\t\tconst block = action.payload.block;\r\n\t\tconst blockIndex = findBlockIndex(state.projects[state.currentProject].blocks, block);\r\n\t\t// Deleta os links e dados de todos os blocos que estão linkados com o bloco deletado \r\n\t\t// Ex: Se um bloco AWGN está linkado a um bloco BPSK e o bloco BPSK é deletado, o link e os dados do AWGN\r\n\t\t// devem ser deletados\r\n\t\tstate.projects[state.currentProject].blocks.map((bl) => {\r\n\t\t\tbl.links = bl.links.filter((link) => link !== block.id);\r\n\t\t\tif (bl.links.length < bl.neededLinks) {\r\n\t\t\t\tbl.linked = false;\r\n\t\t\t\tbl.data = [];\r\n\t\t\t\tbl.render = false;\r\n\t\t\t}\r\n\t\t\treturn bl;\r\n\t\t});\r\n\t\tstate.projects[state.currentProject].blocks.splice(blockIndex, 1);\r\n\t},\r\n\t// DELETA UM LINK DO BLOCO\r\n\t[actions.deleteLink]: (state, action) => {\r\n\t\tconst newBlock = _.clone(action.payload.block);\r\n\t\tnewBlock.links = newBlock.links.filter((link) => link !== action.payload.link);\r\n\t\tnewBlock.linked = false;\r\n\t\tnewBlock.data = [];\r\n\t\tnewBlock.render = false;\r\n\t\tconst arrayIndex = state.projects[state.currentProject].blocks.findIndex(\r\n\t\t\t(prop) => prop.id == action.payload.block.id\r\n\t\t);\r\n\t\tstate.projects[state.currentProject].blocks[arrayIndex] = newBlock;\r\n\t},\r\n\t// MOVE O BLOCO NA TELA\r\n\t[actions.moveBlock]: (state, action) => {\r\n\t\tstate.projects[state.currentProject].blocks[action.payload.indexOfBlock].position = action.payload.value;\r\n\t},\r\n\t// PAUSA O GRÁFICO DO BLOCO\r\n\t[actions.pauseBlock]: (state, action) => {\r\n\t\tconst blockId = action.payload.block.id;\r\n\t\tlet block = _.find(state.projects[state.currentProject].blocks, { 'id': blockId })\r\n\t\tblock['paused'] = !block.paused;\r\n\t},\r\n\t// ATUALIZA O LINK ATUALMENTE SELECIONADO, PARA PODER DELETA-LO\r\n\t[actions.selectLink]: (state, action) => {\r\n\t\tstate.selectedLink = action.payload;\r\n\t},\r\n\t// ATUALIZA UMA PROPRIEDADE DO BLOCO\r\n\t[actions.updateBlockValue]: (state, action) => {\r\n\t\tconst { block, key, value } = action.payload;\r\n\t\tconst projectBlocks = state.projects[state.currentProject].blocks;\r\n\t\tlet blockToUpdate = _.find(projectBlocks, { 'id': block.id })\r\n\t\tblockToUpdate[key] = value;\r\n\t},\r\n\t// ATUALIZA O PROJETO,\r\n\t[actions.updateCurrentProject]: (state, action) => {\r\n\t\tstate.currentProject = action.payload;\r\n\t\tstate.clickedBlock = {};\r\n\t}\r\n});\r\n\r\nconst findBlockIndex = (blocks, block) => blocks.findIndex((p) => p.id === block.id);\r\n\r\nexport default reducer;\r\n","export const initialState = {\r\n\tisAuthenticated: true,\r\n\tuser: 'Lucas',\r\n\tcurrentProject: 0,\r\n\tidCounter: 0,\r\n\tselectedLink: {\r\n\t\tid: 2,\r\n\t\tlinkPosition: 0\r\n\t},\r\n\tamplitude: 3,\r\n\tblocksToLinkArray: [],\r\n\tclickedBlock: {\r\n\t\t// id: 2,\r\n\t\t// name: 'BPSK',\r\n\t\t// links: [],\r\n\t\t// type: 'bpsk',\r\n\t\t// position: {\r\n\t\t// \tx: 200,\r\n\t\t// \ty: 120\r\n\t\t// },\r\n\t\t// paused: false,\r\n\t\t// linked: true,\r\n\t\t// updated: false,\r\n\t\t// neededLinks: 2,\r\n\t\t// data: [],\r\n\t\t// requiredLinks: [ 'Data', 'Carrier Wave' ],\r\n\t\t// description:\r\n\t\t// \t'Binary Phase Shift Keying (BPSK) is a two phase modulation scheme, where the 0’s' +\r\n\t\t// \t' and 1’s in a binary message are represented by two different phase states in th' +\r\n\t\t// \t'e carrier signal: θ=0° for binary 1 and θ=180° for binary 0.'\r\n\t},\r\n\tprojects: {\r\n\t\t0: {\r\n\t\t\tid: 0,\r\n\t\t\tname: 'Project 1',\r\n\t\t\ttotalBlocks: 0,\r\n\t\t\tblocks: []\r\n\t\t},\r\n\t\t1: {\r\n\t\t\tid: 1,\r\n\t\t\tname: 'Project 2',\r\n\t\t\ttotalBlocks: 1,\r\n\t\t\tblocks: {\r\n\t\t\t\t1: {\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t\tname: 'Carrier Wave',\r\n\t\t\t\t\tfrequency: 4,\r\n\t\t\t\t\tamplitude: 4,\r\n\t\t\t\t\ttype: 'sine',\r\n\t\t\t\t\tposition: {\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 300\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpaused: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tblocks: [\r\n\t\t{\r\n\t\t\tbinary: [1, 1, 1, -1, 1, -1],\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'Data',\r\n\t\t\tneededLinks: 0,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 1,\r\n\t\t\trequiredLinks: ['None'],\r\n\t\t\ttype: 'square',\r\n\t\t\tupdated: false,\r\n\t\t\trender: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tamplitude: 3,\r\n\t\t\tdata: [],\r\n\t\t\tfrequency: 12,\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'Carrier Wave',\r\n\t\t\tneededLinks: 0,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 1,\r\n\t\t\trequiredLinks: ['None'],\r\n\t\t\ttype: 'sine',\r\n\t\t\tupdated: false,\r\n\t\t\trender: true,\r\n\t\t\tdescription:\r\n\t\t\t\t'A carrier wave, carrier signal, or just carrier, is a waveform (usually sinusoid' +\r\n\t\t\t\t'al) that is modulated (modified) with an input signal for the purpose of conveyi' +\r\n\t\t\t\t'ng information.'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'BPSK',\r\n\t\t\tneededLinks: 2,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 2,\r\n\t\t\trequiredLinks: ['Data', 'Carrier Wave'],\r\n\t\t\ttype: 'bpsk',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'Binary Phase Shift Keying (BPSK) is a two phase modulation scheme, where the 0’s' +\r\n\t\t\t\t' and 1’s in a binary message are represented by two different phase states in th' +\r\n\t\t\t\t'e carrier signal: θ=0° for binary 1 and θ=180° for binary 0.'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'AWGN',\r\n\t\t\tneededLinks: 1,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 3,\r\n\t\t\trequiredLinks: ['Data'],\r\n\t\t\ttype: 'awgn',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'Additive white Gaussian noise (AWGN) is a basic noise model used in Information ' +\r\n\t\t\t\t'theory to mimic the effect of many random processes that occur in nature.'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'FSK',\r\n\t\t\tneededLinks: 2,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 2,\r\n\t\t\trequiredLinks: ['Data', 'Carrier Wave'],\r\n\t\t\ttype: 'fsk',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'In Frequency Shify Keying (FSK) the frequency of the Carrier Wave is varied in a' +\r\n\t\t\t\t'ccordance with baseband digital input. Binary 1 and 0 is represented by two diff' +\r\n\t\t\t\t'erent carrier frequencies.'\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'ASK',\r\n\t\t\tneededLinks: 2,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 2,\r\n\t\t\trequiredLinks: ['Data', 'Carrier Wave'],\r\n\t\t\ttype: 'ask',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'In an ASK system, the binary symbol 1 is represented by transmitting a fixed-amplitude carrier wave and fixed frequency for a bit duration of T seconds. If the signal value is 1 then the carrier signal will be transmitted; otherwise, a signal value of 0 will be transmitted.'\r\n\t\t}\r\n\t]\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/MainPage/App';\r\nimport LoginPage from './components/LoginPage/LoginPage';\r\nimport { Provider } from 'react-redux';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport mainPage from './components/MainPage/reducer';\r\nimport 'typeface-roboto';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\r\n\r\nimport undoable from 'redux-undo';\r\n\r\n// We'll use redux-logger just as an example of adding another middleware\r\nimport logger from 'redux-logger';\r\n\r\nconst reducer = {\r\n\tmainPage: undoable(mainPage, { limit: 5 })\r\n};\r\n\r\nconst middleware = [ ...getDefaultMiddleware(), logger ];\r\n\r\nconst store = configureStore({\r\n\treducer,\r\n\tmiddleware,\r\n\tdevTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\n// const theme = createMuiTheme({   palette: {     background: { default:\r\n// \"#374785\", paper: \"#a8d0e6\" },     primary: { main: \"#24305e\" },\r\n// secondary: {       main: \"#a8d0e6\"     }   } });\r\n\r\nconst theme2 = createMuiTheme({\r\n\tpalette: {\r\n\t\tbackground: {\r\n\t\t\tdefault: '#d3e3fc',\r\n\t\t\tpaper: '#ffffff'\r\n\t\t},\r\n\t\tprimary: {\r\n\t\t\tmain: '#77a6f7'\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#a8d0e6'\r\n\t\t}\r\n\t}\r\n});\r\n// const theme3 = createMuiTheme({   palette: {     background: { default:\r\n// \"#f2f2f2\", paper: \"#ffffff\" },     primary: { main: \"#3b945e\" },\r\n// secondary: {       main: \"#57ba98\"     }   } });\r\n\r\nReactDOM.render(\r\n\t<Fragment>\r\n\t\t<Provider store={store}>\r\n\t\t\t<MuiThemeProvider theme={theme2}>\r\n\t\t\t\t<App />\r\n\t\t\t\t{/* <Router>\r\n\t\t\t\t\t\t<Route path=\"/Home\" component={App} />\r\n\t\t\t\t</Router> */}\r\n\t\t\t</MuiThemeProvider>\r\n\t\t</Provider>\r\n\t</Fragment>,\r\n\tdocument.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}
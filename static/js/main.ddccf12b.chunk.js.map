{"version":3,"sources":["components/MainPage/actions.js","constants.js","components/MainPage/utils.js","hooks/UsePrevious.js","hooks/UseAnimation.js","components/MainPage/BottomArea/Axis.jsx","components/MainPage/BottomArea/line.js","components/MainPage/BottomArea/Graph.jsx","components/MainPage/BottomArea/Data/Binary.jsx","components/MainPage/selectors.js","components/MainPage/BottomArea/Data/BPSK.jsx","components/MainPage/BottomArea/Data/FSK.jsx","components/MainPage/BottomArea/Data/AWGN.jsx","components/MainPage/BottomArea/Data/ASK.jsx","components/MainPage/BottomArea/Data/CarrierWave.jsx","components/MainPage/BottomArea/BlockCard.jsx","components/MainPage/BottomArea/ExpandedBlockCard.jsx","components/MainPage/BottomArea/BottomArea.jsx","components/MainPage/ProjectArea/LinkLine.jsx","components/MainPage/ProjectArea/Block/Properties.jsx","components/MainPage/SideBar/SideBarBlock.jsx","components/MainPage/ProjectArea/Block/Header.jsx","components/MainPage/ProjectArea/Block/InputOutput.jsx","hooks/WindowDimensions.js","components/MainPage/ProjectArea/Block/Block.jsx","components/MainPage/ProjectArea/ProjectArea.jsx","components/MainPage/Menu.jsx","components/MainPage/SideBar/SideBar.jsx","firebase.js","components/MainPage/App.jsx","hooks/UseInterval.js","components/LoginPage/LoginPage.jsx","registerServiceWorker.js","components/MainPage/reducer.js","initialState.js","index.js"],"names":["addBlockToProject","createAction","blockClicked","blocksToLink","moveBlock","deleteBlock","deleteLink","payload","block","links","filter","link","linked","data","render","type","pauseBlock","setInitialState","selectLink","updateBlockValue","updateBlockData","updateCurrentProject","updateDropDown","createTimeArray","totalTime","createTimeArrayWithIndexes","map","time","Array","fill","x","i","getScales","dimensions","blockName","resolution","amplitude","scale","xLine","yLine","yAxis","tickValues","_findMinMax","dataArray","maxX","minY","Number","MAX_SAFE_INTEGER","maxY","MIN_SAFE_INTEGER","_","minX","findMinMax","scaleLinear","domain","toFixed","range","width","height","findLink","linkName","blocks","clone","find","id","name","blockTypes","usePrevious","value","ref","useRef","useEffect","current","useAnimation","createDataArray","createDataArrayArgs","updateOnChanges","requestRef","wasPaused","paused","_useState","useState","_useState2","Object","slicedToArray","setData","_useState3","_useState4","firstRender","setFirstRender","dispatch","useDispatch","animate","prevData","clonedData","item","shift","push","shiftArray","requestAnimationFrame","newData","apply","toConsumableArray","cancelAnimationFrame","concat","Axis","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderAxis","bind","assertThisInitialized","inherits","createClass","key","_this$props","axis","node","refs","axisFn","select","react_default","a","createElement","transform","React","Component","Line","xScale","yScale","length","fullData","new_data","forEach","index","y","createFullArray","path","line","curve","curveLinear","d","lineFunction","style","stroke","strokeWidth","Graph","_ref","line_Line","Axis_Axis","axisRight","binaryArray","size","binaryData","Binary","binary","Graph_Graph","userState","state","mainPage","present","currentProjectBlocks","projects","currentUser","user","projectBlocksSelector","currentProject","linkedBlocksSelector","createSelector","getIndexOfBlockSelector","indexOf","sort","property","sortOrder","substr","b","result","dynamicSort","carrierDataArray","carrierData","position","BPSK","useSelector","selectors","_findLink","carrierAmplitude","frequency","wt","Math","PI","sin","FSK","carrierFrequency","rnorm","AWGN","linkedBlock","ASK","angularFrequency","currentTime","CarrierWave","BlockCard","containerWidth","expandedHeight","window","innerHeight","expanded","Data_Binary","Data_CarrierWave","Data_BPSK","Data_FSK","Data_ASK","Data_AWGN","Dimensions","Transition","Slide_default","assign","direction","ExpandedBlockCard","open","handleClickOpen","setState","handleClose","onClickHandler","blockUpdated","updated","classes","haveProperties","isNil","showProperties","className","flex","Typography_default","color","display","alignItems","justifyContent","cursor","AspectRatio_default","onClick","Dialog_default","fullScreen","onClose","TransitionComponent","AppBar_default","appBar","Toolbar_default","IconButton_default","aria-label","Close_default","variant","Paper_default","react_flexbox_grid_lib","center","textAlign","paddingLeft","BottomArea_BlockCard","ExpandedBlockCardWithStyles","withStyles","iconStyle","top","connect","actions","withWidth","blocksNum","ceil","getHeigth","renderBlockCards","Grid_default","priority","neededLinks","container","xs","sm","md","PlayArrow_default","event","Pause_default","align","marginTop","justify","BottomArea_ExpandedBlockCard","spacing","elevation","square","LinkLine","selectedLink","offsetX","offsetY","blockDimensions","blockTotalWidth","blockTotalHeight","outputHeight","outputWidth","linkPosition","x0","x1","y0","y1","linkBlock","borderStyle","react_lineto","borderWidth","borderColor","zIndex","Properties","keysToShow","marginLeft","capitalize","number","sum","ChevronLeft_default","blockId","ChevronRight_default","fontWeight","ID","random","toString","clickedBlock","undefined","paddingTop","gutterBottom","List_default","ListItem_default","ListItemText_default","primary","react","description","requiredLinks","blockTopRow","anchorEl","setAnchorEl","Info_default","fontSize","currentTarget","Popover_default","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","SideBar_SideBarBlock","margin","blockStyleInput","maxWidth","backgroundColor","blockStyleOutput","InputOutput","inputOutputSize","inputOutputHeight","inputOutputWidth","isInput","blocksToLinkArray","isMobile","isDataEmpty","isBlocksToLinkArrayEmpty","includes","linkBlocks","getWindowDimensions","_window","innerWidth","blockStyle","_selectors$userState","indexOfBlock","cursorPosition","projectTabOffset","BASE_WIDTH","BASE_HEIGHT","setDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","_useState5","_useState6","bounds","setBounds","_useState7","_useState8","setPosition","_useState9","_useState10","setIsMobile","newIsMobile","hasInput","blockWidth","blockHeight","offset","element","componentOffset","document","getElementsByClassName","getBoundingClientRect","pageXOffset","left","pageYOffset","calculateOffset","newBounds","getBounds","newPosition","getPosition","isEqual","prevState","objectSpread","right","bottom","cloneDeep","react_draggable_min_default","grid","onDrag","e","ui","Block_InputOutput","Block_Header","Block_Properties","ProjectArea_LinkLine","toCursor","isLinking","renderLineToCursor","projectTabStyle","ProjectTab","renderBlocks","ProjectArea_Block_Block","elementDimensions","projectArea","project","Tabs_default","Tab_default","label","ReactCursorPosition","ProjectArea_ProjectTab","root","flexGrow","menuButton","marginRight","Menu_default","Button_default","idCounter","drawerOpen","setDrawerOpen","ItemList","button","blocksList","component","subheader","ListSubheader_default","Hidden_default","smUp","Drawer_default","tabIndex","role","onKeyDown","xsDown","getUserData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Firebase","database","abrupt","once","then","snapshot","val","stop","arguments","styles","theme","paper","padding","unit","palette","text","secondary","App","isLoading","setIsLoading","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","finally","callback","delay","savedCallback","setInterval","clearInterval","useInterval","set","paddingRight","dist_default","keyEventName","KEYPRESS","keyValue","onKeyHandle","undo","CssBaseline_default","MainPage_Menu","MainPage_SideBar_SideBar","MainPage_ProjectArea_ProjectArea","smDown","MainPage_BottomArea_BottomArea","AppWithStylesWithoutRouter","withRouter","isAuthenticated","ActionCreators","LoginPage","validateForm","usuario","senha","handleChange","defineProperty","target","handleSubmit","preventDefault","history","alert","_x","minHeight","Card_default","card","CardHeader_default","title","onSubmit","noValidate","autoComplete","CardContent_default","TextField_default","autoFocus","textField","onChange","margisn","CardActions_default","disabled","isLocalhost","mixins","gutters","paddingBottom","media","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","reducer","createReducer","0","totalBlocks","_createReducer","action","newBlock","sortBy","blockToReceiveData","blockToSendData","blockIndex","findBlockIndex","bl","splice","arrayIndex","findIndex","prop","_action$payload","projectBlocks","_action$payload2","p","undoable","limit","middleware","getDefaultMiddleware","store","configureStore","devTools","process","theme2","createMuiTheme","background","default","main","ReactDOM","es","core_styles","MainPage_App","getElementById","URL","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ddccf12b.chunk.js","sourcesContent":["import * as consts from '../../constants'\r\nimport { createAction } from 'redux-starter-kit'\r\n\r\n\r\n\r\nexport const addBlockToProject = createAction('ADD_TO_PROJECT')\r\n\r\nexport const blockClicked = createAction('BLOCK_CLICKED')\r\n\r\nexport const blocksToLink = createAction('BLOCKS_TO_LINK')\r\n\r\nexport const moveBlock = createAction('MOVE_BLOCK')\r\n\r\nexport const deleteBlock = createAction('DELETE_BLOCK')\r\n\r\n// Quando um link é deletado, é necessário sempre apagar a data porque quando um\r\n// link é deletado o bloco num está com todos os links e não deve ter nenhuma\r\n// data\r\nexport const deleteLink = payload => {\r\n  payload.block.links = payload\r\n    .block\r\n    .links\r\n    .filter(link => link !== payload.link)\r\n  payload.block.linked = false\r\n  payload.block.data = []\r\n  payload.block.render = false\r\n  return { type: consts.DELETE_LINK, payload: payload }\r\n}\r\n\r\nexport const pauseBlock = createAction('PAUSE_BLOCK')\r\n\r\nexport const setInitialState = createAction('SET_INITIAL_STATE')\r\n\r\nexport const selectLink = createAction('SELECT_LINK')\r\n\r\nexport const updateBlockValue = createAction('UPDATE_BLOCK_VALUE')\r\n\r\nexport const updateBlockData = createAction('UPDATE_BLOCK_DATA')\r\n\r\nexport const updateCurrentProject = createAction('UPDATE_CURRENT_PROJECT')\r\n\r\nexport const updateDropDown = payload => ({ type: consts.UPDATE_DROPDOWN, payload })\r\n","export const ADD_TO_PROJECT = 'ADD_TO_PROJECT'\r\nexport const BLOCK_CLICKED = 'BLOCK_CLICKED'\r\nexport const BLOCK_LIST = 'BLOCK_LIST'\r\nexport const BLOCK_UPDATED = 'BLOCK_UPDATED'\r\nexport const BLOCKS_TO_LINK = 'BLOCKS_TO_LINK'\r\nexport const CREATE_LINK = 'CREATE_LINK'\r\nexport const DELETE_BLOCK = 'DELETE_BLOCK'\r\nexport const DELETE_LINK = 'DELETE_LINK'\r\nexport const LOGIN = 'LOGIN'\r\nexport const PAUSE_BLOCK = 'PAUSE_BLOCK'\r\nexport const SELECT_LINK = 'SELECT_LINK'\r\nexport const SET_BLOCK_VALUE = 'SET_BLOCK_VALUE'\r\nexport const TRACK_LOCATION = 'TRACK_LOCATION'\r\nexport const UPDATE_BLOCK = 'UPDATE_BLOCK'\r\nexport const UPDATE_CURRENT_PROJECT = 'UPDATE_CURRENT_PROJECT'\r\nexport const UPDATE_DATA = 'UPDATE_DATA'\r\nexport const UPDATE_DROPDOWN = 'UPDATE_DROPDOWN'\r\nexport const UPDATE_VALUE = 'UPDATE_VALUE'\r\n","import _ from 'lodash'\r\n// AWGN +rnorm();\r\nimport { scaleLinear } from 'd3-scale'\r\n/**\r\n * Find min and max.\r\n * @param  {Array} dataArray - x axis of array.\r\n * @param  {number} resolution - Total time of the function.\r\n * @return {Object}            Return the min and max.\r\n */\r\nexport const findMinMax = (dataArray, resolution) => {\r\n  let minX = 0\r\n\r\n  let maxX = resolution - 1\r\n\r\n  let minY = Number.MAX_SAFE_INTEGER\r\n\r\n  let maxY = Number.MIN_SAFE_INTEGER\r\n\r\n  _.map(dataArray, data => {\r\n    if (data < minY) {\r\n      minY = data\r\n    } else if (data > maxY) {\r\n      maxY = data\r\n    }\r\n  })\r\n  return { minX, maxX, minY, maxY }\r\n}\r\n\r\n/**\r\n * Shift the data array to make the movement.\r\n * @param  {Array} data The data on a certain time.\r\n * @return {Array}       The shifted data.\r\n */\r\nexport const shiftArray = data => {\r\n  const clonedData = _.clone(data)\r\n  let item = clonedData.shift()\r\n  clonedData.push(item)\r\n  return clonedData\r\n}\r\n\r\n/**\r\n * Create an array with the total time of the function to draw the xy coordinates.\r\n * @param  {number} totalTime Total time of the function.\r\n * @return {Array}            Return the array from 0 to totalTime-1.\r\n */\r\nexport const createTimeArray = totalTime => {\r\n  const totalTimeArray = createTimeArrayWithIndexes(totalTime)\r\n  return totalTimeArray.map(time => time / totalTime)\r\n}\r\n\r\nexport const createTimeArrayWithIndexes = totalTime => Array(totalTime).fill(null).map((x, i) => i)\r\n\r\n/**\r\n * getScales returns the x,y scale based on the data array to fit the graph.\r\n * @param  {Array} data       Array to scale the y-line.\r\n * @param  {Object} dimensions Has width and height properties.\r\n * @param  {Object} block      Object to set tickValues.\r\n * @param  {number} resolution Variable to scale the x-line.\r\n * @param  {number} [amplitude]  Variable to set tickValues.\r\n * @return {Object}            Return the scales.\r\n */\r\nexport const getScales = (data, dimensions, blockName, resolution, amplitude) => {\r\n  let scale = {\r\n    xLine: 0,\r\n    yLine: 0,\r\n    yAxis: 0,\r\n    tickValues: 0\r\n  }\r\n  let paddingxAxis = 30\r\n  let paddingyAxis = 20\r\n  const { minX, maxX, minY, maxY } = findMinMax(data, resolution)\r\n  scale.xLine = scaleLinear()\r\n    .domain([minX.toFixed(2), maxX.toFixed(2)])\r\n    .range([paddingxAxis, dimensions.width - paddingxAxis])\r\n\r\n  scale.yLine = scaleLinear()\r\n    .domain([minY.toFixed(2), maxY.toFixed(2)])\r\n    .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n\r\n  // Binary Block\r\n  if (blockName === 'Data') {\r\n    scale.yAxis = scaleLinear()\r\n      .domain([0, 1])\r\n      .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n    scale.tickValues = [-1, 0, 1]\r\n  } else {\r\n    scale.yAxis = scaleLinear()\r\n      .domain([-amplitude / 2, amplitude / 2])\r\n      .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n    scale.tickValues = [-amplitude / 2, 0, amplitude / 2]\r\n  }\r\n  return scale\r\n}\r\n\r\n/**\r\n * The binary array uses -1 to 1 to match the BPSK equation, this change all -1\r\n * to 1.\r\n * @param  {Array} data The binary array.\r\n * @return {Array}      Return the array with 0 and 1.\r\n */\r\nexport const valueToBinary = data => {\r\n  return data.map(number => (number === 1 ? 1 : 0))\r\n}\r\n\r\nexport const findLink = (linkName, blocks, links) => {\r\n  return _.clone(\r\n    _.find(\r\n      blocks,\r\n      block => (block.id === links[0] || block.id === links[1]) && block.name === linkName\r\n    )\r\n  );\r\n};\r\n\r\nexport const blockTypes = {\r\n  DATA: 'Data',\r\n  CARRIER_WAVE: 'Carrier Wave',\r\n  BPSS: 'BPSK'\r\n}\r\n\r\nexport const calculateOffset = (element) => {\r\n  let componentOffset = document.getElementsByClassName(element)[0].getBoundingClientRect()\r\n  let offsetX = window.pageXOffset + componentOffset.left\r\n  let offsetY = window.pageYOffset + componentOffset.top\r\n  return {\r\n    componentOffset,\r\n    offsetX,\r\n    offsetY\r\n  }\r\n}\r\n","import { useRef, useEffect } from 'react'\r\nconst usePrevious = value => {\r\n  const ref = useRef()\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n  return ref.current\r\n}\r\nexport default usePrevious","import { updateBlockData } from \"../components/MainPage/actions\"\r\nimport { shiftArray } from \"../components/MainPage/utils\"\r\nimport React, { useRef, useState, useEffect } from \"react\"\r\nimport usePrevious from './UsePrevious'\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nconst useAnimation = (block, createDataArray, createDataArrayArgs, updateOnChanges) => {\r\n  const requestRef = useRef()\r\n  const wasPaused = usePrevious(block.paused)\r\n  const [data, setData] = useState([])\r\n  const [firstRender, setFirstRender] = useState(true)\r\n  const dispatch = useDispatch()\r\n\r\n  const animate = () => {\r\n    if (!block.paused) {\r\n      setData(prevData => shiftArray(prevData))\r\n    }\r\n    requestRef.current = requestAnimationFrame(animate)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (block.paused === wasPaused || firstRender) {\r\n      const newData = createDataArray(...createDataArrayArgs)\r\n      setData(newData)\r\n      dispatch(updateBlockData({ id: block.id, data: newData }))\r\n      setFirstRender(false)\r\n    }\r\n    requestRef.current = requestAnimationFrame(animate)\r\n    return () => cancelAnimationFrame(requestRef.current)\r\n  }, [...updateOnChanges, block.paused])\r\n\r\n  return data\r\n}\r\nexport default useAnimation","import React from \"react\";\r\nimport { select } from \"d3-selection\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Axis extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderAxis = this.renderAxis.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderAxis();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.renderAxis();\r\n  }\r\n\r\n  renderAxis() {\r\n    const { scale, axis, tickValues } = this.props;\r\n    const node = this.refs.axis;\r\n    const axisFn = axis(scale).tickValues(tickValues);\r\n    axisFn(select(node));\r\n  }\r\n\r\n  render() {\r\n    return <g ref=\"axis\" transform={this.props.transform} />;\r\n  }\r\n}\r\n\r\nAxis.propTypes = {\r\n  scale: PropTypes.func,\r\n  axis: PropTypes.func,\r\n  tickValues: PropTypes.array\r\n};\r\n","import React from \"react\";\r\nimport { line, curveLinear } from \"d3-shape\";\r\n//import simplify from 'simplify-js'\r\n\r\nexport const Line = props => {\r\n  const { xScale, yScale, data } = props;\r\n  //const stroke = \"#2196f3\";\r\n  const stroke = \"#00887a\";\r\n  //if there's no data return\r\n  if (!data.length) {\r\n    return null;\r\n  }\r\n  /**\r\n   * Create an xy array with the data to create the line path.\r\n   * @param  {Array} data Data of the block.\r\n   * @return {Array}      Return an xy array.\r\n   */\r\n  const createFullArray = data => {\r\n    let new_data = [];\r\n    data.forEach((item, index) => {\r\n      new_data.push({ x: index, y: item });\r\n    });\r\n    return new_data;\r\n  };\r\n  let fullData = createFullArray(data);\r\n\r\n  //Scale the data to fit the SVG\r\n  fullData.forEach(data => {\r\n    data.x = xScale(data.x);\r\n    data.y = yScale(data.y);\r\n  });\r\n\r\n  const lineFunction = line()\r\n    .curve(curveLinear)\r\n    .x(d => d.x)\r\n    .y(d => d.y);\r\n  //const path = lineFunction(simplify(data));\r\n  const path = lineFunction(fullData);\r\n\r\n  return <path d={path} style={{ stroke: stroke, strokeWidth: 3, fill: \"none\" }} />;\r\n};\r\n","import React from 'react'\r\nimport { axisRight } from 'd3-axis'\r\nimport { Axis } from './Axis'\r\nimport { Line } from './line'\r\n\r\nexport const Graph = ({ scale, data }) => {\r\n  return <g>\r\n    <Line\r\n      xScale={scale.xLine}\r\n      yScale={scale.yLine}\r\n      data={data}\r\n    />\r\n    <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n  </g>\r\n}","import React from 'react'\r\n\r\nimport { getScales } from '../../utils'\r\nimport useAnimation from '../../../../hooks/UseAnimation'\r\nimport { Graph } from '../Graph'\r\n\r\nconst createDataArray = (totalTime, binaryArray) => {\r\n  const size = totalTime / binaryArray.length\r\n  let binaryData = []\r\n\r\n  binaryArray.forEach(item => {\r\n    binaryData = binaryData.concat(Array(size).fill(item))\r\n  })\r\n  return binaryData\r\n}\r\n\r\nconst Binary = ({ resolution, block, dimensions }) => {\r\n  const { binary } = block\r\n\r\n  const createDataArrayArgs = [resolution, binary]\r\n  const updateOnChanges = [resolution, binary]\r\n  const data = useAnimation(block, createDataArray, createDataArrayArgs, updateOnChanges)\r\n  const scale = getScales(data, dimensions, block.name, resolution)\r\n\r\n  return <Graph scale={scale} data={data} />\r\n}\r\n\r\nexport default Binary","import { createSelector } from 'reselect'\r\nimport _ from 'lodash'\r\n\r\nexport const allBlocksSelector = state => state.mainPage.present.blocks\r\n\r\nexport const userState = state => state.mainPage.present.userState || null\r\n\r\nexport const currentProjectBlocks = state => {\r\n  const userState = state.mainPage.present.userState\r\n  return userState.projects[0].blocks\r\n}\r\n\r\nexport const currentUser = state => userState(state).user\r\n\r\nexport const clickedBlockSelector = state => state.mainPage.present.userState ? state.mainPage.present.userState.clickedBlock : null\r\n\r\nexport const projectBlocksSelector = state => state.mainPage.present.userState.projects[state.mainPage.present.userState.currentProject].blocks\r\n\r\nexport const linkedBlocksSelector = createSelector((_, props) => props.block, projectBlocksSelector, (block, blocks) => {\r\n  return block\r\n    .links\r\n    .map(link => _.find(blocks, block => block.id === link))\r\n})\r\n\r\nexport const getIndexOfBlockSelector = (state, props) => {\r\n  return state\r\n    .mainPage\r\n    .present\r\n    .blocks\r\n    .indexOf(props.block)\r\n};\r\n\r\nexport const getPrioritySelector = createSelector(projectBlocksSelector, blocks => {\r\n  blocks.sort(dynamicSort('priority'))\r\n})\r\n\r\nfunction dynamicSort (property) {\r\n  var sortOrder = 1\r\n  if (property[0] === '-') {\r\n    sortOrder = -1\r\n    property = property.substr(1)\r\n  }\r\n  return function (a, b) {\r\n    var result = a[property] < b[property]\r\n      ? -1\r\n      : a[property] > b[property]\r\n        ? 1\r\n        : 0\r\n    return result * sortOrder\r\n  };\r\n}\r\n","import { useSelector } from \"react-redux\"\r\nimport React from \"react\"\r\n\r\nimport { getScales, findLink, blockTypes } from \"../../utils\"\r\nimport useAnimation from '../../../../hooks/UseAnimation'\r\nimport { Graph } from \"../Graph\"\r\nimport * as selectors from '../../selectors'\r\n\r\n\r\nconst createDataArray = (binaryArray, carrierDataArray) => {\r\n  return carrierDataArray.map((carrierData, position) => carrierData * binaryArray[position] || 0)\r\n}\r\n\r\nconst BPSK = ({ block, resolution, dimensions }) => {\r\n  const blocks = useSelector(state => selectors.currentProjectBlocks(state))\r\n  const binaryData = findLink(blockTypes.DATA, blocks, block.links).data\r\n  const { amplitude: carrierAmplitude, data: carrierData } = findLink(blockTypes.CARRIER_WAVE, blocks, block.links)\r\n\r\n  const createDataArrayArgs = [binaryData, carrierData]\r\n  const updateOnChanges = [binaryData, carrierData]\r\n  const data = useAnimation(block, createDataArray, createDataArrayArgs, updateOnChanges)\r\n  const scale = getScales(data, dimensions, block, resolution, carrierAmplitude)\r\n\r\n  return <Graph scale={scale} data={data} />\r\n}\r\n\r\nexport default BPSK\r\n","import { useSelector } from \"react-redux\"\r\nimport React from \"react\"\r\n\r\nimport { getScales, findLink, blockTypes, createTimeArray } from \"../../utils\"\r\nimport useAnimation from '../../../../hooks/UseAnimation'\r\nimport { Graph } from \"../Graph\"\r\nimport * as selectors from '../../selectors'\r\n\r\nconst createDataArray = (binaryArray, carrierData, amplitude, frequency, totalTime) => {\r\n  const time = createTimeArray(totalTime)\r\n  return carrierData.map((data, index) => {\r\n    if (binaryArray[index] === 1) {\r\n      return data\r\n    }\r\n    else {\r\n      const angularFrequency = 2 * Math.PI * (frequency * 2)\r\n      const wt = angularFrequency * time[index]\r\n      return amplitude * Math.sin(wt)\r\n    }\r\n  })\r\n}\r\nconst FSK = ({ block, resolution, dimensions }) => {\r\n  const blocks = useSelector(state => selectors.currentProjectBlocks(state))\r\n  const binaryData = findLink(blockTypes.DATA, blocks, block.links).data\r\n  const { amplitude: carrierAmplitude, data: carrierData, frequency: carrierFrequency } = findLink(blockTypes.CARRIER_WAVE, blocks, block.links)\r\n  \r\n  const createDataArrayArgs = [binaryData, carrierData, carrierAmplitude, carrierFrequency, resolution]\r\n  const updateOnChanges = [binaryData, carrierData]\r\n  const data = useAnimation(block, createDataArray, createDataArrayArgs, updateOnChanges)\r\n\r\n  const scale = getScales(data, dimensions, block, resolution, carrierAmplitude)\r\n\r\n  return <Graph scale={scale} data={data} />\r\n}\r\n\r\nexport default FSK\r\n\r\n","import { useSelector } from \"react-redux\"\r\nimport React from \"react\"\r\n\r\nimport { getScales } from \"../../utils\"\r\nimport useAnimation from '../../../../hooks/UseAnimation'\r\nimport { Graph } from \"../Graph\"\r\n\r\nimport * as selectors from \"../../selectors\"\r\nimport { rnorm } from \"randgen\"\r\n\r\nconst createDataArray = data => data.map(item => item + rnorm())\r\n\r\nconst AWGN = ({ block, resolution, dimensions }) => {\r\n  const linkedBlock = useSelector(state => selectors.linkedBlocksSelector(state, { block }))[0]\r\n  const amplitude = linkedBlock.amplitude || 1\r\n\r\n  const createDataArrayArgs = [linkedBlock.data]\r\n  const updateOnChanges = [linkedBlock.data]\r\n  const data = useAnimation(block, createDataArray, createDataArrayArgs, updateOnChanges)\r\n  const scale = getScales(data, dimensions, block, resolution, amplitude)\r\n\r\n  return <Graph scale={scale} data={data} />\r\n}\r\n\r\nexport default AWGN\r\n","import { useSelector } from \"react-redux\"\r\nimport React from \"react\"\r\n\r\nimport { getScales, findLink, blockTypes } from \"../../utils\"\r\nimport useAnimation from '../../../../hooks/UseAnimation'\r\nimport { Graph } from \"../Graph\"\r\nimport * as selectors from '../../selectors'\r\n\r\nconst createDataArray = (binaryArray, carrierData, amplitude) => {\r\n  return carrierData.map((value, index) => (binaryArray[index] === -1 ? value : value * (amplitude * 2)) || 0)\r\n}\r\n\r\nconst ASK = ({ block, resolution, dimensions }) => {\r\n  const blocks = useSelector(state => selectors.currentProjectBlocks(state))\r\n  const binaryData = findLink(blockTypes.DATA, blocks, block.links).data\r\n  const { amplitude: carrierAmplitude, data: carrierData } = findLink(blockTypes.CARRIER_WAVE, blocks, block.links)\r\n\r\n  const createDataArrayArgs = [binaryData, carrierData, carrierAmplitude]\r\n  const updateOnChanges = [binaryData, carrierData]\r\n  const data = useAnimation(block, createDataArray, createDataArrayArgs, updateOnChanges)\r\n\r\n  const scale = getScales(data, dimensions, block, resolution, carrierAmplitude)\r\n\r\n  return <Graph scale={scale} data={data} />\r\n}\r\n\r\nexport default ASK\r\n","import React from 'react'\r\n\r\nimport { createTimeArray, getScales } from '../../utils'\r\nimport useAnimation from '../../../../hooks/UseAnimation'\r\nimport { Graph } from '../Graph'\r\n\r\n\r\nconst createDataArray = (totalTime, frequency, amplitude) => {\r\n  let time = createTimeArray(totalTime)\r\n  const angularFrequency = 2 * Math.PI * frequency\r\n  return time.map(currentTime => {\r\n    let wt = angularFrequency * currentTime\r\n    return amplitude * Math.sin(wt)\r\n  })\r\n}\r\n\r\nconst CarrierWave = ({ resolution, block, dimensions }) => {\r\n  const { frequency, amplitude } = block\r\n\r\n  const createDataArrayArgs = [resolution, frequency, amplitude]\r\n  const updateOnChanges = [resolution, frequency, amplitude]\r\n  const data = useAnimation(block, createDataArray, createDataArrayArgs, updateOnChanges)\r\n  const scale = getScales(data, dimensions, block.name, resolution, amplitude)\r\n\r\n  return <Graph scale={scale} data={data} />\r\n}\r\n\r\nexport default CarrierWave","import React from 'react'\r\nimport Dimensions from 'react-dimensions'\r\n\r\nimport Binary from './Data/Binary'\r\nimport BPSK from './Data/BPSK'\r\nimport FSK from './Data/FSK'\r\nimport AWGN from './Data/AWGN'\r\nimport ASK from './Data/ASK'\r\nimport CarrierWave from './Data/CarrierWave'\r\n\r\n\r\nclass BlockCard extends React.Component {\r\n  render() {\r\n    const { block } = this.props\r\n    let data\r\n    let width = this.props.containerWidth\r\n    let height = 164\r\n    const expandedHeight = window.innerHeight - 90\r\n    if (this.props.expanded) {\r\n      height = expandedHeight\r\n    }\r\n    if (block.name === 'Data') {\r\n      data = <Binary dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'Carrier Wave') {\r\n      data = <CarrierWave dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.linked) {\r\n      if (block.name === 'BPSK') {\r\n        data = <BPSK dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n      if (block.name === 'FSK') {\r\n        data = <FSK dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n      if (block.name === 'ASK') {\r\n        data = <ASK dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n      if (block.name === 'AWGN') {\r\n        data = <AWGN dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n    }\r\n\r\n    return (\r\n      <svg height={height} width={width}>\r\n        {data}\r\n      </svg>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dimensions()(BlockCard)\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport Slide from \"@material-ui/core/Slide\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio'\r\n\r\nimport { Col } from \"react-flexbox-grid\"\r\n\r\nimport _ from \"lodash\"\r\n\r\nimport BlockCard from \"./BlockCard\"\r\n\r\n//react redux\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"../actions\"\r\n\r\nconst styles = {\r\n  iconStyle: {\r\n    position: \"relative\",\r\n    top: \"6px\"\r\n  },\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  }\r\n}\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />\r\n}\r\n\r\nclass ExpandedBlockCard extends React.Component {\r\n  state = {\r\n    open: false\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false })\r\n  }\r\n  onClickHandler = (block, value, key) => {\r\n    this.props.updateBlockValue({ value, key, id: block.id })\r\n    this.props.blockUpdated({ block, updated: true })\r\n  }\r\n\r\n  render() {\r\n    const { classes, block } = this.props\r\n    let haveProperties = false\r\n    if (!_.isNil(block.frequency)) {\r\n      haveProperties = true\r\n    }\r\n    const showProperties = haveProperties ? (\r\n      <div className={classes.flex}>\r\n        <Typography color=\"inherit\">\r\n          {/* <Left onClick={(event,value)=> this.onClickHandler(block,block.frequency - 1,'frequency')} style={styles.iconStyle}/> */}\r\n          Frequency: {block.frequency}\r\n          {/* <Right onClick={(event,value)=> this.onClickHandler(block,block.frequency + 1,'frequency')} style={styles.iconStyle}/> */}\r\n        </Typography>\r\n        <Typography color=\"inherit\">\r\n          {/* <Left onClick={(event,value)=> this.onClickHandler(block,block.amplitude - 1,'amplitude')} style={styles.iconStyle}/> */}\r\n          Amplitude: {block.amplitude}\r\n          {/* <Right onClick={(event,value)=> this.onClickHandler(block,block.amplitude + 1,'amplitude')} style={styles.iconStyle}/> */}\r\n        </Typography>\r\n      </div>\r\n    ) : (\r\n        <div />\r\n      )\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }}>\r\n        <AspectRatioIcon onClick={this.handleClickOpen} />\r\n        <Dialog\r\n          fullScreen\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          TransitionComponent={Transition}>\r\n          <AppBar className={classes.appBar} color=\"primary\">\r\n            <Toolbar>\r\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\r\n                {block.name}\r\n              </Typography>\r\n              {showProperties}\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Paper style={{ height: \"100%\" }}>\r\n            <Col center=\"xs\" style={{ height: \"90%\", textAlign: \"center\" }}>\r\n              <div style={{ height: \"5%\" }} />\r\n              <div style={{ height: \"100%\", paddingLeft: 16 }}>\r\n                <BlockCard block={block} key={block.id} expanded={true} />\r\n              </div>\r\n            </Col>\r\n          </Paper>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExpandedBlockCard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => {\r\n  return { amplitude: state.mainPage.present.amplitude }\r\n}\r\n\r\nlet ExpandedBlockCardWithStyles = withStyles(styles)(ExpandedBlockCard)\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(ExpandedBlockCardWithStyles)\r\n","import _ from 'lodash'\r\nimport { connect } from 'react-redux'\r\nimport { pauseBlock } from '../actions'\r\nimport BlockCard from './BlockCard'\r\nimport ExpandBlockCard from './ExpandedBlockCard'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport withWidth from '@material-ui/core/withWidth';\r\n\r\nimport * as selectors from '../selectors'\r\nlet style = {\r\n  height: 200\r\n}\r\n\r\nconst getHeigth = (width, blocksNum) => {\r\n  let style = { height: 200 }\r\n  if (blocksNum === 0) {\r\n    return style\r\n  }\r\n  if (width === 'xs') {\r\n    style = { height: blocksNum * 200 }\r\n  }\r\n  else if (width === 'sm') {\r\n    let rows = Math.ceil(blocksNum / 3)\r\n    style = { height: rows * 200 }\r\n  }\r\n  else {\r\n    let rows = Math.ceil(blocksNum / 4)\r\n    style = { height: rows * 200 }\r\n  }\r\n  return style\r\n}\r\n\r\nconst BottomArea = props => {\r\n  const blocksNum = _.filter(props.blocks, block => block.render).length\r\n  style = getHeigth(props.width, blocksNum)\r\n  // Se o total de links for diferente de 0 e o bloco não estiver linkado ele nao é renderizado\r\n  let renderBlockCards = _.map(props.blocks, block => {\r\n    if (!block.render) {\r\n      return\r\n    }\r\n    return (\r\n      <Grid priority={block.neededLinks} key={block.id} container item xs={12} sm={4} md={3}>\r\n        {/* Button 1 */}\r\n        <Grid xs={2} container item style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }}>\r\n          {block.paused ?\r\n            <PlayArrowIcon onClick={event => props.pauseBlock({ id: block.id })} /> :\r\n            <PauseIcon onClick={event => props.pauseBlock({ id: block.id })} />\r\n          }\r\n        </Grid>\r\n        <Grid xs={8} container item >\r\n          <Typography variant=\"subheading\" align=\"center\" style={{ marginTop: 5, width: '90%' }}>\r\n            <b>{block.name}</b>\r\n          </Typography>\r\n        </Grid>\r\n        {/* Button 2 */}\r\n        <Grid xs={2} container item justify=\"center\">\r\n          <ExpandBlockCard block={block} />\r\n        </Grid>\r\n        {/* BlockCard */}\r\n        <Grid style={{ height: 180, paddingLeft: 16 }} container item xs={12} spacing={16}>\r\n          <Grid xs={12} item>\r\n            <BlockCard block={block} key={block.id} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  })\r\n  return (\r\n    <Paper elevation={0} square={true} style={style}>\r\n      <Grid container>\r\n        {renderBlockCards}\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: selectors.projectBlocksSelector(state),\r\n  }\r\n}\r\n\r\nexport default withWidth()(connect(\r\n  mapStateToProps,\r\n  { pauseBlock }\r\n)(BottomArea))\r\n","import React, { memo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { selectLink } from '../actions'\r\nimport { Line } from 'react-lineto'\r\nimport _ from 'lodash'\r\n\r\nconst LinkLine = ({ block, blocks, selectedLink, width, offsetX, offsetY, blockDimensions }) => {\r\n  const { blockTotalWidth, blockTotalHeight, outputHeight, outputWidth } = blockDimensions\r\n  const dispatch = useDispatch()\r\n\r\n  if (block.neededLinks === 0) {\r\n    return null\r\n  }\r\n  return block.links.map((linkPosition) => {\r\n    let linkBlock = _.find(blocks, (block) => block.id === linkPosition)\r\n    let borderStyle = 'solid'\r\n    if (selectedLink.id === block.id && selectedLink.linkPosition === linkPosition) {\r\n      borderStyle = 'dashed'\r\n    }\r\n    let x0, x1, y0, y1\r\n    // No mobile input e output são invertidos\r\n    if (width === 'xs') {\r\n      x0 = block.position.x + blockTotalWidth / 2 + offsetX\r\n      y0 = block.position.y + offsetY + outputHeight\r\n      x1 = linkBlock.position.x + blockTotalWidth / 2 + offsetX\r\n      y1 = linkBlock.position.y + offsetY + blockTotalHeight - outputHeight * 2\r\n    }\r\n    else {\r\n      x0 = block.position.x + offsetX + outputWidth\r\n      y0 = block.position.y + blockTotalHeight / 2 + offsetY\r\n      x1 = linkBlock.position.x + offsetX + blockTotalWidth - outputWidth * 2\r\n      y1 = linkBlock.position.y + blockTotalHeight / 2 + offsetY\r\n    }\r\n    return (\r\n      <div key={linkPosition} onClick={() => dispatch(selectLink({ id: block.id, linkPosition }))}>\r\n        <Line\r\n          borderWidth={3}\r\n          borderStyle={borderStyle}\r\n          borderColor=\"black\"\r\n          zIndex={1}\r\n          x0={x0}\r\n          y0={y0}\r\n          x1={x1}\r\n          y1={y1}\r\n        />\r\n      </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default LinkLine","import React from 'react'\r\nimport { updateBlockValue } from '../../actions'\r\nimport { useDispatch } from 'react-redux'\r\nimport _ from 'lodash'\r\nimport { valueToBinary } from '../../utils'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Left from '@material-ui/icons/ChevronLeft'\r\nimport Right from '@material-ui/icons/ChevronRight'\r\n\r\nconst iconStyle = {\r\n  position: 'relative',\r\n  top: '7px',\r\n  cursor: 'pointer'\r\n}\r\n\r\nconst Properties = ({block}) => {\r\n  const dispatch = useDispatch()\r\n  return _.map(block.keysToShow, key => {\r\n    const value = block[key]\r\n    if (key === 'binary') {\r\n      return (\r\n        <Typography key={key} variant=\"body1\" style={{ marginLeft: 4 }}>\r\n          <b>{_.capitalize(key)}:</b>\r\n          {valueToBinary(value)}\r\n        </Typography>\r\n      )\r\n    }\r\n    const sum = key === 'frequency' ? 6 : 1\r\n    return (\r\n      <Typography key={key} variant=\"body1\" style={{ marginLeft: 4 }}>\r\n        <b>{_.capitalize(key)}:</b>\r\n        <Left\r\n          onClick={() => dispatch(updateBlockValue({ value: value - sum, key, blockId: block.id }))}\r\n          style={iconStyle}\r\n        />\r\n        {value}\r\n        <Right\r\n          onClick={() => dispatch(updateBlockValue({ value: value + sum, key, blockId: block.id }))}\r\n          style={iconStyle}\r\n        />\r\n      </Typography>\r\n    )\r\n  })\r\n}\r\n\r\nexport default Properties","import React, { Fragment } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport * as _ from 'lodash';\r\n//import Subheader from 'material-ui/Subheader';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { updateBlockValue, updateDropDown } from '../actions';\r\n//import {updateBlockValue} from '../SideBar/actions';\r\n\r\nconst style = {\r\n\tfontWeight: 'bold'\r\n};\r\nconst ID = () => {\r\n\treturn '_' + Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nconst renderRequiredLinks = (requiredLinks) => _.map(requiredLinks, (link, index) => {\r\n\treturn link === 'None' ? (\r\n\t\t<Typography key={ID()}>{link}</Typography>\r\n\t) : (\r\n\t\t\t<Typography key={ID()}>{link} :</Typography>\r\n\t\t);\r\n});\r\n\r\nconst SideBarBlock = (props) => {\r\n\tif (props.clickedBlock === undefined) {\r\n\t\treturn <Paper elevation={0} square={true} key={0} style={{ height: '100%', paddingTop: 16 }}>\r\n\t\t\t<Typography variant=\"title\" gutterBottom align=\"center\">\r\n\t\t\t\tBlock Details\r\n\t\t\t</Typography>\r\n\t\t</Paper>\r\n\t}\r\n\treturn (\r\n\t\t<Paper elevation={0} square={true} key={props.clickedBlock.id} style={{ height: '100%', paddingTop: 16 }}>\r\n\t\t\t<Typography variant=\"title\" gutterBottom align=\"center\">\r\n\t\t\t\t{props.clickedBlock ? props.clickedBlock.name : \"Block Details\"}\r\n\t\t\t</Typography>\r\n\t\t\t<List>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tstyle={style}\r\n\t\t\t\t\t\tprimary={\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">{props.clickedBlock.description}</Typography>\r\n\t\t\t\t\t\t\t\t<p />\r\n\t\t\t\t\t\t\t\t{!_.isEmpty(props.clickedBlock) && (\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subheading\" gutterBottom align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<b>Required Links</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{props.clickedBlock && renderRequiredLinks(props.requiredLinks)}\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tclickedBlock: state.mainPage.present.userState.clickedBlock\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, { updateBlockValue, updateDropDown })(SideBarBlock);\r\n","import React, { Fragment, useState } from 'react'\r\nimport withWidth from '@material-ui/core/withWidth'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport Popover from '@material-ui/core/Popover'\r\nimport SideBarBlock from '../../SideBar/SideBarBlock'\r\nimport { blockClicked, deleteBlock } from '../../actions'\r\nimport { useDispatch } from 'react-redux'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst blockTopRow = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst Header = ({ block, clickedBlock, width }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = event => {\r\n    if (block.id !== clickedBlock.id) {\r\n      dispatch(blockClicked(block))\r\n    }\r\n    if (width === 'xs' || width === 'sm') {\r\n      setAnchorEl(event.currentTarget)\r\n    }\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={2} style={blockTopRow}>\r\n        <InfoIcon style={{ fontSize: 'larger', cursor: 'pointer' }} onClick={handleClick} />\r\n        <Popover\r\n          id=\"simple-popper\"\r\n          open={Boolean(anchorEl)}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <SideBarBlock />\r\n        </Popover>\r\n      </Grid>\r\n      <Grid item xs={8} style={blockTopRow}>\r\n        <Typography variant=\"subheading\" gutterBottom align=\"center\" style={{ margin: '0px' }}>\r\n          <b>{block.name}</b>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={2} style={blockTopRow}>\r\n        <CloseIcon style={{ fontSize: 'larger', cursor: 'pointer' }} onClick={() => dispatch(deleteBlock(block.id))} />\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default withWidth()(Header)","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { blocksToLink } from '../../actions'\r\nimport _ from 'lodash'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst blockStyleInput = {\r\n  cursor: 'pointer',\r\n  maxWidth: '100%',\r\n  backgroundColor: '#00887a'\r\n}\r\nconst blockStyleOutput = {\r\n  cursor: 'pointer',\r\n  maxWidth: '100%',\r\n  backgroundColor: '#77a6f7'\r\n}\r\nconst OUTPUT = 195\r\nconst INPUT = 5\r\n\r\nconst blocksToLinkArrayIsFull = array => array.length >= 2\r\n\r\nconst InputOutput = ({ isInput, block, blocksToLinkArray, isMobile }) => {\r\n  const dispatch = useDispatch()\r\n  const linkBlocks = (position) => {\r\n    //Can link only from the input to the output and cannot link fully linked blocks\r\n    //Need to check if a block is already fully linked but other block wants to link with\r\n    //it in the output\r\n    //Nao deixar linkar quando o bloco que voce quer linkar nao esta linkado e nao tem Data\r\n    const isDataEmpty = block.data && block.data.length === 0\r\n    const isBlocksToLinkArrayEmpty = blocksToLinkArray && blocksToLinkArray.length === 0\r\n    if (\r\n      (position === OUTPUT && (isBlocksToLinkArrayEmpty || isDataEmpty)) ||\r\n      ((block.links && block.links.length) > block.neededLinks && block.neededLinks !== 0)\r\n    ) {\r\n      return\r\n    } else if (!blocksToLinkArrayIsFull(blocksToLinkArray) && !_.includes(blocksToLinkArray, block)) {\r\n      dispatch(blocksToLink({ block }))\r\n    }\r\n  }\r\n\r\n  let style, type, direction, inputOutputSize, inputOutputHeight, inputOutputWidth\r\n  if (isInput) {\r\n    style = blockStyleInput\r\n    type = INPUT\r\n  }\r\n  else {\r\n    style = blockStyleOutput\r\n    type = OUTPUT\r\n  }\r\n  if (isMobile) {\r\n    direction = 'row'\r\n    inputOutputSize = 12\r\n    inputOutputHeight = { height: '10%' }\r\n    inputOutputWidth = 3\r\n  }\r\n  else {\r\n    direction = 'column'\r\n    inputOutputSize = 1\r\n    inputOutputHeight = { height: '100%' }\r\n    inputOutputWidth = 4\r\n  }\r\n\r\n  return (\r\n    <Grid item container direction={direction} xs={inputOutputSize} style={inputOutputHeight} justify='center'>\r\n      <Grid\r\n        item\r\n        xs={inputOutputWidth}\r\n        style={style}\r\n        onClick={() => linkBlocks(type)}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default InputOutput","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import _ from 'lodash'\r\nimport Draggable from 'react-draggable'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport withWidth from '@material-ui/core/withWidth'\r\nimport { Line } from 'react-lineto'\r\n\r\nimport { calculateOffset } from '../../utils'\r\nimport * as selectors from '../../selectors'\r\nimport usePrevious from '../../../../hooks/UsePrevious'\r\n\r\n//redux\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport * as actions from '../../actions'\r\nimport LinkLine from '../LinkLine'\r\nimport Properties from './Properties'\r\nimport Header from './Header'\r\nimport InputOutput from './InputOutput'\r\nimport useWindowDimensions from '../../../../hooks/WindowDimensions'\r\n\r\nconst BASE_WIDTH = 160\r\nconst BASE_HEIGHT = 108\r\nconst INPUT_OUTPUT_MOBILE_HEIGHT = '10%'\r\nconst INPUT_OUTPUT_DESKTOP_HEIGHT = '100%'\r\n\r\nconst outputWidth = BASE_WIDTH * 0.1\r\nconst outputHeight = BASE_HEIGHT * 0.1\r\nconst blockStyle = {\r\n  borderStyle: 'solid',\r\n  borderWidth: '1px 1px 1px 1px',\r\n  borderColor: '#77a6f7',\r\n  backgroundColor: '#d3e3fc',\r\n  zIndex: 2,\r\n}\r\n\r\nconst OUTPUT = 195\r\nconst INPUT = 5\r\n\r\nconst Block = ({ width, block, blocks, selectedLink, clickedBlock, blocksToLink, moveBlock, blocksToLinkArray, indexOfBlock, cursorPosition }) => {\r\n  const [state, setState] = useState({\r\n    projectTabOffset: 0,\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n    isMobile: false\r\n  })\r\n  const [dimensions, setDimensions] = useState({ outputWidth, outputHeight })\r\n  const windowDimensions = useWindowDimensions()\r\n  const [bounds, setBounds] = useState()\r\n  const [position, setPosition] = useState()\r\n  const [isMobile, setIsMobile] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let dimensions\r\n    const newIsMobile = width === 'xs'\r\n    if (newIsMobile) {\r\n      dimensions = {\r\n        blockTotalWidth: BASE_WIDTH,\r\n        blockTotalHeight: hasInput(block.neededLinks) ? BASE_HEIGHT + (outputHeight * 2) : BASE_HEIGHT + outputHeight,\r\n        blockWidth: 12,\r\n        blockHeight: hasInput(block.neededLinks) ? '80%' : '90%'\r\n      }\r\n    }\r\n    else {\r\n      dimensions = {\r\n        blockTotalWidth: hasInput(block.neededLinks) ? BASE_WIDTH + (outputWidth * 2) : BASE_WIDTH + outputWidth,\r\n        blockTotalHeight: BASE_HEIGHT,\r\n        blockWidth: hasInput(block.neededLinks) ? 10 : 11,\r\n        blockHeight: '100%'\r\n      }\r\n    }\r\n\r\n    const offset = calculateOffset('projectTab')\r\n    const newBounds = getBounds(offset.componentOffset, dimensions)\r\n    const newPosition = getPosition(newBounds)\r\n\r\n\r\n    if (!_.isEqual(newPosition, block.position)) {\r\n      moveBlock({\r\n        value: { x: newPosition.x, y: newPosition.y },\r\n        blockId: block.id\r\n      })\r\n    }\r\n    setIsMobile(newIsMobile)\r\n    setDimensions(prevState => {\r\n      return { ...prevState, ...dimensions }\r\n    })\r\n    setBounds(newBounds)\r\n    setPosition(newPosition)\r\n    setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        ...{\r\n          projectTabOffset: offset.componentOffset,\r\n          offsetX: offset.offsetX,\r\n          offsetY: offset.offsetY\r\n        }\r\n      }\r\n    })\r\n  }, [width, windowDimensions])\r\n\r\n\r\n  useEffect(() => {\r\n    setPosition(block.position)\r\n  }, [block.position])\r\n\r\n\r\n  const getBounds = (projectTabOffset, dimensions) => ({\r\n    left: 0,\r\n    top: 0,\r\n    right: projectTabOffset.width - dimensions.blockTotalWidth,\r\n    bottom: projectTabOffset.height - dimensions.blockTotalHeight\r\n  })\r\n\r\n  const getPosition = bounds => {\r\n    let { position } = _.cloneDeep(block)\r\n    if (position.x > bounds.right) {\r\n      position.x = bounds.right\r\n    }\r\n    if (position.y > bounds.bottom) {\r\n      position.y = bounds.bottom\r\n    }\r\n\r\n    return position\r\n  }\r\n\r\n  const handleDrag = (e, ui) => {\r\n    const { x, y } = ui\r\n    moveBlock({\r\n      value: { x, y },\r\n    blockId: block.id\r\n    })\r\n  }\r\n\r\n  const hasInput = neededLinks => neededLinks > 0\r\n\r\n  const renderLineToCursor = () => {\r\n    let { offsetX, offsetY } = state\r\n    //render line only when the block is not fully linked and is not already linking\r\n    return (\r\n      <Line\r\n        borderWidth={3}\r\n        borderStyle=\"solid\"\r\n        borderColor=\"black\"\r\n        zIndex={1}\r\n        x0={block.position.x + INPUT + offsetX}\r\n        y0={block.position.y + dimensions.blockTotalHeight / 2 + offsetY}\r\n        x1={cursorPosition.x + offsetX}\r\n        y1={cursorPosition.y + offsetY}\r\n      />\r\n    )\r\n  }\r\n  const isLinking = (block) => _.includes(blocksToLinkArray, block)\r\n\r\n  return (\r\n    <Fragment>\r\n      <Draggable\r\n        grid={[10, 10]}\r\n        bounds={bounds}\r\n        onDrag={handleDrag}\r\n        // onStop={this.handleStop}\r\n        position={position}\r\n      >\r\n        <Grid\r\n          container\r\n          style={{ height: dimensions.blockTotalHeight, width: dimensions.blockTotalWidth, position: 'absolute', zIndex: 2 }}\r\n        >\r\n          {hasInput(block.neededLinks) && (\r\n            // INPUT\r\n            <InputOutput isInput={true} block={block} blocksToLinkArray={blocksToLinkArray} isMobile={isMobile} />\r\n          )}\r\n          {/* NAME AND PROPERTIES */}\r\n          <Grid item container xs={dimensions.blockWidth} style={{ ...blockStyle, height: dimensions.blockHeight }} direction='row'>\r\n            {/* BLOCK INFO */}\r\n            <Grid item container xs={12} style={{ height: '20%' }}>\r\n              <Header block={block} clickedBlock={clickedBlock} />\r\n            </Grid>\r\n            {/* BLOCK PROPERTIES */}\r\n            <Grid item container xs={12} style={{ height: '70%' }}>\r\n              <Properties block={block} />\r\n            </Grid>\r\n          </Grid>\r\n          {/* OUTPUT */}\r\n          <InputOutput isInput={false} block={block} blocksToLinkArray={blocksToLinkArray} isMobile={isMobile} />\r\n        </Grid>\r\n\r\n      </Draggable>\r\n      {block.links && block.links.length > 0 &&\r\n        <LinkLine block={block}\r\n          blocks={blocks}\r\n          selectedLink={selectedLink}\r\n          width={width}\r\n          offsetX={state.offsetX}\r\n          offsetY={state.offsetY}\r\n          blockDimensions={dimensions}\r\n          toCursor={false}\r\n        />}\r\n      {isLinking(block) &&\r\n        renderLineToCursor()}\r\n    </Fragment >\r\n  )\r\n}\r\n\r\nBlock.propTypes = {\r\n  selectLink: PropTypes.func.isRequired,\r\n  blockClicked: PropTypes.func.isRequired,\r\n  block: PropTypes.object.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  blocksToLink: PropTypes.func.isRequired,\r\n  blocksToLinkArray: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { clickedBlock, projects, selectedLink, currentProject, blocksToLinkArray } = selectors.userState(state)\r\n  return {\r\n    clickedBlock,\r\n    blocks: projects[currentProject].blocks,\r\n    blocksToLinkArray,\r\n    selectedLink,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  }\r\n}\r\n\r\nexport default withWidth()(connect(mapStateToProps, actions)(Block))\r\n","import React, { Fragment } from \"react\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Tabs from \"@material-ui/core/Tabs\"\r\nimport Tab from \"@material-ui/core/Tab\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport _ from \"lodash\"\r\nimport ReactCursorPosition from \"react-cursor-position\"\r\n\r\n\r\n//redux\r\nimport { connect, useDispatch, useSelector } from \"react-redux\"\r\nimport { updateCurrentProject } from \"../actions\"\r\nimport Block from \"./Block/Block\"\r\n\r\nconst ProjectArea = props => {\r\n  return (\r\n    <Fragment>\r\n      <AppBar elevation={1} square={true} position=\"static\">\r\n        <Tabs value={0}>\r\n          <Tab label={props.project.name} key={props.project.id} value={props.project.id} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <ReactCursorPosition>\r\n        <ProjectTab key=\"0\" blocks={props.project.blocks} />\r\n      </ReactCursorPosition>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst projectTabStyle = {\r\n  height: 600,\r\n  zIndex: -10\r\n}\r\n\r\nconst ProjectTab = props => {\r\n  const renderBlocks = _.map(props.blocks, block =>\r\n    <Block\r\n      cursorPosition={props.position}\r\n      key={block.id}\r\n      block={block}\r\n      dimensions={props.elementDimensions}\r\n    />\r\n  )\r\n  return (\r\n    <Paper square={true} elevation={0} className=\"projectTab\" style={projectTabStyle}>\r\n      {renderBlocks}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    project: state.mainPage.present.userState.projects[0]\r\n  }\r\n}\r\nconst projectArea = connect(\r\n  mapStateToProps,\r\n  { updateCurrentProject }\r\n)(ProjectArea)\r\nexport default projectArea\r\n","import React from \"react\";\r\nimport {useSelector} from 'react-redux'\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport * as selectors from '../../components/MainPage/selectors'\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  flex: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nfunction Menu(props) {\r\n  const { classes } = props\r\n  const currentUser = useSelector(state => selectors.currentUser(state))\r\n  return (\r\n    //<div className={classes.root}>\r\n      <AppBar elevation={0} square={true} position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\r\n            TCC\r\n          </Typography>\r\n          <Button color=\"inherit\">{currentUser}</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    //\t</div>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Menu);\r\n","import React, { Fragment, useState } from \"react\";\r\n\r\n//Material\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport _ from \"lodash\";\r\n\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { addBlockToProject } from \"../actions\";\r\n\r\nconst SideBar = props => {\r\n  const [drawerOpen, setDrawerOpen] = useState(false)\r\n  const onClickHandler = block => {\r\n    props.addBlockToProject({ block, idCounter: props.idCounter });\r\n  };\r\n\r\n  //Cria a lista de items\r\n  const ItemList = _.map(props.blocks, block => {\r\n    return (\r\n      <ListItem key={block.name} button onClick={() => onClickHandler(block)}>\r\n        <ListItemText primary={block.name} />\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  const blocksList =\r\n    <List component=\"nav\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" style={{ position: \"inherit\" }}>\r\n          Blocks\r\n        </ListSubheader>}>\r\n      {ItemList}\r\n    </List>\r\n\r\n  return (\r\n    <Fragment>\r\n      <Hidden smUp>\r\n        <Button onClick={() => setDrawerOpen(true)}>New Block</Button>\r\n        <Drawer open={drawerOpen} onClose={() => setDrawerOpen(false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => setDrawerOpen(false)}\r\n            onKeyDown={() => setDrawerOpen(false)}\r\n          >\r\n            <div style={{ width: 250 }}>\r\n              {blocksList}\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden xsDown>\r\n        <Paper elevation={0} square={true} style={{ height: \"100%\" }}>\r\n          {blocksList}\r\n        </Paper>\r\n      </Hidden>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    blocks: state.mainPage.present.blocks,\r\n    idCounter: state.mainPage.present.userState.idCounter\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addBlockToProject }\r\n)(SideBar);\r\n","import Firebase from 'firebase'\r\nexport const init = () => {\r\n    Firebase.initializeApp({\r\n        apiKey: \"AIzaSyDHY9IPIaTKPVcrOrTRbKm1tOQag4jk-xE\",\r\n        authDomain: \"projeto-tcc-333d6.firebaseapp.com\",\r\n        databaseURL: \"https://projeto-tcc-333d6.firebaseio.com\",\r\n        projectId: \"projeto-tcc-333d6\",\r\n        storageBucket: \"projeto-tcc-333d6.appspot.com\",\r\n        messagingSenderId: \"264938431096\",\r\n        appId: \"1:264938431096:web:02052e939a0b09ac65c38d\"\r\n    })\r\n}\r\nexport const getUserData = async () => {\r\n    let ref = Firebase.database().ref('/')\r\n    return ref.once('value').then(snapshot => snapshot.val())\r\n}\r\n\r\nexport const setUserData = userState => {\r\n    Firebase.database().ref('/').set(userState)\r\n}","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, use, useState } from 'react';\r\n// Imports dos components do projeto\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomArea from './BottomArea/BottomArea';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProjectArea from './ProjectArea/ProjectArea';\r\nimport _ from 'lodash';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Menu from './Menu';\r\nimport SideBar from './SideBar/SideBar';\r\nimport SideBarBlock from './SideBar/SideBarBlock';\r\n\r\nimport * as selectors from './selectors';\r\nimport * as actions from './actions';\r\nimport KeyHandler, { KEYPRESS } from 'react-key-handler';\r\n\r\nimport { ActionCreators } from 'redux-undo';\r\nimport { connect } from 'react-redux';\r\nimport * as firebase from '../../firebase'\r\nimport useInterval from '../../hooks/UseInterval'\r\n// import { createDb } from 'C:/Users/Lucas/Documents/GitHub/tcc/src/firebase.js';\r\nconst styles = (theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing.unit * 2,\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: theme.palette.text.secondary\r\n\t}\r\n});\r\n\r\nconst App = (props) => {\r\n\tconst [isLoading, setIsLoading] = useState(true)\r\n\r\n\tuseEffect(() => {\r\n\t\tfirebase.init()\r\n\t\tfirebase.getUserData()\r\n\t\t\t.then(data => {\r\n\t\t\t\tprops.setInitialState(data)\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tsetIsLoading(false)\r\n\t\t\t})\r\n\t}, [])\r\n\r\n\tuseInterval(() => {\r\n\t\tfirebase.setUserData(props.userState)\r\n\t}, 5000)\r\n\r\n\tif (!isLoading) {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tpaddingRight: 16,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<KeyHandler\r\n\t\t\t\t\tkeyEventName={KEYPRESS}\r\n\t\t\t\t\tkeyValue=\"q\"\r\n\t\t\t\t\tonKeyHandle={() => props.deleteBlock(props.clickedBlock)}\r\n\t\t\t\t/>\r\n\t\t\t\t<KeyHandler\r\n\t\t\t\t\tkeyEventName={KEYPRESS}\r\n\t\t\t\t\tkeyValue=\"x\"\r\n\t\t\t\t\tonKeyHandle={() =>\r\n\t\t\t\t\t\tprops.deleteLink({\r\n\t\t\t\t\t\t\tblock: _.find(props.blocks, (block) => block.id === props.selectedLink.id),\r\n\t\t\t\t\t\t\tlink: props.selectedLink.linkPosition\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<KeyHandler keyEventName={KEYPRESS} keyValue=\"z\" onKeyHandle={() => props.undo()} />\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Grid container justify=\"flex-end\" spacing={16}>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs item>\r\n\t\t\t\t\t\t\t<Menu />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs={12} sm={3} md={2} item>\r\n\t\t\t\t\t\t\t<SideBar />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid xs={12} sm={9} md={8} item>\r\n\t\t\t\t\t\t\t<ProjectArea />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Hidden smDown>\r\n\t\t\t\t\t\t\t<Grid md={2} item>\r\n\t\t\t\t\t\t\t\t<SideBarBlock />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Hidden>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs={12} item style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t<Typography variant=\"title\" color=\"inherit\">\r\n\t\t\t\t\t\t\t\tBlock Graphs\r\n          \t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid xs={12} item>\r\n\t\t\t\t\t\t\t<BottomArea />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <div>Loading...</div>\r\n\t\t// return <Redirect to=\"/\" />;\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsetInitialState: (payload) => {\r\n\t\t\tdispatch(actions.setInitialState(payload))\r\n\t\t},\r\n\t\tdeleteLink: (payload) => {\r\n\t\t\tdispatch(actions.deleteLink(payload));\r\n\t\t},\r\n\t\tdeleteBlock: (clickedBlock) => {\r\n\t\t\tdispatch(actions.deleteBlock(clickedBlock));\r\n\t\t},\r\n\t\tundo: () => {\r\n\t\t\tdispatch(ActionCreators.undo());\r\n\t\t}\r\n\t};\r\n};\r\nconst mapStateToProps = (state) => {\r\n\tconst userState = selectors.userState(state)\r\n\treturn {\r\n\t\tuserState,\r\n\t\tisAuthenticated: state.mainPage.present.isAuthenticated,\r\n\t\tclickedBlock: userState.clickedBlock,\r\n\t\tselectedLink: userState.selectedLink,\r\n\t\tblocks: selectors.projectBlocksSelector(state)\r\n\t};\r\n};\r\n\r\nconst AppWithStyles = withRouter(withStyles(styles)(App));\r\nconst AppWithStylesWithoutRouter = withStyles(styles)(App);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppWithStylesWithoutRouter);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport default function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\n// import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\n// import firebase from 'firebase'\r\n\r\nconst styles = theme => ({\r\n  // textField: {   marginLeft: theme.spacing.unit,   marginRight:\r\n  // theme.spacing.unit,   width: 200 },\r\n  root: {\r\n    ...theme\r\n      .mixins\r\n      .gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    height: 200,\r\n    textAlign: \"center\"\r\n  },\r\n  // card: {   maxWidth: 345 },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\n// const uiConfig = {\r\n//   // Popup signin flow rather than redirect flow.\r\n//   signInFlow: 'popup',\r\n//   signInSuccessUrl: '/Home',\r\n//   // We will display Google and Facebook as auth providers.\r\n//   // signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID]\r\n// }\r\nclass LoginPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usuario: \"\",\r\n      senha: \"\"\r\n    };\r\n  }\r\n\r\n  validateForm = () => this.state.usuario.length > 0 && this.state.senha.length > 0;\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if (this.state.usuario === \"admin\" && this.state.senha === \"admin\") {\r\n      this\r\n        .props\r\n        .history\r\n        .push(\"/Home\");\r\n    } else {\r\n      alert(\"Usuário ou senha inválidos.\");\r\n    }\r\n    // try {   await Auth.signIn(this.state.usuario, this.state.password);\r\n    // alert(\"Logged in\"); } catch (e) {   alert(e.message); }\r\n  };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div>\r\n        <CssBaseline/>\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{\r\n          minHeight: \"100vh\"\r\n        }}>\r\n          <Grid item xs={3} justify=\"center\">\r\n            <Card\r\n              style={{\r\n              textAlign: \"center\"\r\n            }}\r\n              className={classes.card}>\r\n              <CardHeader title=\"Login\"/>\r\n              <form\r\n                onSubmit={this.handleSubmit}\r\n                className={classes.container}\r\n                noValidate\r\n                autoComplete=\"off\">\r\n                <CardContent>\r\n                  <TextField\r\n                    autoFocus\r\n                    id=\"usuario\"\r\n                    label=\"Usuário\"\r\n                    className={classes.textField}\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                    margin=\"normal\"/>\r\n                  <div/>\r\n                  <TextField\r\n                    id=\"senha\"\r\n                    label=\"Senha\"\r\n                    className={classes.textField}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={this.handleChange}\r\n                    margisn=\"normal\"/>\r\n                    {/* <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/> */}\r\n                </CardContent>\r\n                <CardActions\r\n                  style={{\r\n                  justifyContent: \"center\"\r\n                }}>\r\n                  <Button type=\"submit\" disabled={!this.validateForm()} // component={Link} }} // to=\"/Home\"\r\n                    variant=\"contained\" color=\"primary\"  className={classes.button}>\r\n                    Login\r\n                  </Button>\r\n                </CardActions>\r\n              </form>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      ); } } LoginPage.propTypes = {classes : PropTypes.object.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(LoginPage));","// In production, we register a service worker to serve assets from local cache.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background. To learn more about the\r\n// benefits of this model, read https://goo.gl/KwvDNy. This link also includes\r\n// instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n// [::1] is the IPv6 localhost address.\r\nwindow.location.hostname === '[::1]' ||\r\n// 127.0.0.1/8 is considered localhost for IPv4.\r\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin from\r\n      // what our page is served on. This might happen if a CDN is used to serve\r\n      // assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl)\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or\r\n        // not.\r\n        checkValidServiceWorker(swUrl)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator\r\n    .serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and the fresh content\r\n              // will have been added to the cache. It's the perfect time to display a \"New\r\n              // content is available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.')\r\n            } else {\r\n              // At this point, everything has been precached. It's the perfect time to\r\n              // display a \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  // eslint-disable-next-line no-undef\r\n  fetch(swUrl).then(response => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator\r\n        .serviceWorker\r\n        .ready\r\n        .then(registration => {\r\n          registration\r\n            .unregister()\r\n            .then(() => {\r\n              window\r\n                .location\r\n                .reload()\r\n            })\r\n        })\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl)\r\n    }\r\n  }).catch(() => {\r\n    console.log('No internet connection found. App is running in offline mode.')\r\n  })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator\r\n      .serviceWorker\r\n      .ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport * as consts from '../../constants';\r\nimport update from 'immutability-helper';\r\n\r\nimport { initialState } from '../../initialState';\r\nimport { createReducer } from 'redux-starter-kit';\r\n\r\nimport * as actions from './actions';\r\nimport _ from 'lodash';\r\n\r\nconst reducer = createReducer(initialState, {\r\n\t[actions.setInitialState]: (state, action) => {\r\n\t\tif (!action.payload.clickedBlock) {\r\n\t\t\taction.payload['clickedBlock'] = {}\r\n\t\t}\r\n\t\tif (!action.payload.projects[0].blocks) {\r\n\t\t\taction.payload.projects[0] = {\r\n\t\t\t\t...action.payload.projects[0], blocks: []\r\n\t\t\t}\r\n\t\t}\r\n\t\taction.payload['blocksToLinkArray'] = []\r\n\t\tstate.userState = action.payload\r\n\t},\r\n\t// ADICIONA BLOCO AO PROJETO\r\n\t[actions.addBlockToProject]: (state, action) => {\r\n\t\tconst newBlock = _.clone(action.payload.block);\r\n\t\tnewBlock['id'] = state.userState.idCounter++;\r\n\t\tstate.userState.projects[state.userState.currentProject].blocks.push(newBlock);\r\n\t\tstate.userState.projects[state.userState.currentProject].blocks = _.sortBy(state.userState.projects[state.userState.currentProject].blocks, ['priority'])\r\n\t},\r\n\t// ATUALIZA O BLOCO CLICADO\r\n\t[actions.blockClicked]: (state, action) => {\r\n\t\tstate.userState.clickedBlock = action.payload;\r\n\t},\r\n\t// ATUALIZA O ARRAY DE BLOCOS QUE VAO SER LINKADOS\r\n\t[actions.blocksToLink]: (state, action) => {\r\n\t\tstate.userState.blocksToLinkArray.push(action.payload.block);\r\n\t\t// Se o usuário fez o link entre os 2 blocos(clicou na saída e na entrada), adiciona o link no objeto\r\n\t\tif (state.userState.blocksToLinkArray.length === 2) {\r\n\t\t\tconst blockToReceiveData = state.userState.blocksToLinkArray[0];\r\n\t\t\tconst blockToSendData = state.userState.blocksToLinkArray[1];\r\n\t\t\tlet block = _.find(state.userState.projects[state.userState.currentProject].blocks, { 'id': blockToReceiveData.id })\r\n\t\t\tblock.links.push(blockToSendData.id);\r\n\t\t\t// Checa se o bloco tem links suficientes para mostrar os dados\r\n\t\t\tif (block.links.length >= block.neededLinks) {\r\n\t\t\t\tblock.linked = true;\r\n\t\t\t\tblock.render = true;\r\n\t\t\t}\r\n\t\t\t// Limpa os blocos que estão sendo linkados\r\n\t\t\tstate.userState.blocksToLinkArray = [];\r\n\t\t}\r\n\t},\r\n\t// DELETA O BLOCO DO PROJETO\r\n\t[actions.deleteBlock]: (state, action) => {\r\n\t\tconst blockId = action.payload;\r\n\t\tconst blockIndex = findBlockIndex(state.userState.projects[state.userState.currentProject].blocks, blockId);\r\n\t\t// Deleta os links e dados de todos os blocos que estão linkados com o bloco deletado \r\n\t\t// Ex: Se um bloco AWGN está linkado a um bloco BPSK e o bloco BPSK é deletado, o link e os dados do AWGN\r\n\t\t// devem ser deletados\r\n\t\tstate.userState.projects[state.userState.currentProject].blocks.map((bl) => {\r\n\t\t\tif (bl.links) {\r\n\t\t\t\tbl.links = bl.links.filter((link) => link !== blockId);\r\n\t\t\t\tif (bl.links.length < bl.neededLinks) {\r\n\t\t\t\t\tbl.linked = false;\r\n\t\t\t\t\tbl.data = [];\r\n\t\t\t\t\tbl.render = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn bl;\r\n\t\t});\r\n\t\tstate.userState.projects[state.userState.currentProject].blocks.splice(blockIndex, 1);\r\n\t},\r\n\t// DELETA UM LINK DO BLOCO\r\n\t[actions.deleteLink]: (state, action) => {\r\n\t\tconst newBlock = _.clone(action.payload.block);\r\n\t\tnewBlock.links = newBlock.links.filter((link) => link !== action.payload.link);\r\n\t\tnewBlock.linked = false;\r\n\t\tnewBlock.data = [];\r\n\t\tnewBlock.render = false;\r\n\t\tconst arrayIndex = state.userState.projects[state.userState.currentProject].blocks.findIndex(\r\n\t\t\t(prop) => prop.id === action.payload.block.id\r\n\t\t);\r\n\t\tstate.userState.projects[state.userState.currentProject].blocks[arrayIndex] = newBlock;\r\n\t},\r\n\t// MOVE O BLOCO NA TELA\r\n\t[actions.moveBlock]: (state, action) => {\r\n\t\tconst blockIndex = findBlockIndex(state.userState.projects[state.userState.currentProject].blocks, action.payload.blockId)\r\n\t\tstate.userState.projects[state.userState.currentProject].blocks[blockIndex].position = action.payload.value;\r\n\t},\r\n\t// PAUSA O GRÁFICO DO BLOCO\r\n\t[actions.pauseBlock]: (state, action) => {\r\n\t\tconst blockId = action.payload.id\r\n\t\tlet block = _.find(state.userState.projects[state.userState.currentProject].blocks, { 'id': blockId })\r\n\t\tblock['paused'] = !block.paused;\r\n\t},\r\n\t// ATUALIZA O LINK ATUALMENTE SELECIONADO, PARA PODER DELETA-LO\r\n\t[actions.selectLink]: (state, action) => {\r\n\t\tstate.userState.selectedLink = action.payload;\r\n\t},\r\n\t// ATUALIZA UMA PROPRIEDADE DO BLOCO\r\n\t[actions.updateBlockValue]: (state, action) => {\r\n\t\tconst { blockId, key, value } = action.payload;\r\n\t\tconst projectBlocks = state.userState.projects[state.userState.currentProject].blocks;\r\n\t\tlet blockToUpdate = _.find(projectBlocks, { 'id': blockId })\r\n\t\tblockToUpdate[key] = value;\r\n\t},\r\n\t[actions.updateBlockData]: (state, action) => {\r\n\t\tconst { id, data } = action.payload;\r\n\t\tconst projectBlocks = state.userState.projects[state.userState.currentProject].blocks;\r\n\t\tlet blockToUpdate = _.find(projectBlocks, { 'id': id })\r\n\t\tblockToUpdate.data = data\r\n\t},\r\n\t// ATUALIZA O PROJETO,\r\n\t[actions.updateCurrentProject]: (state, action) => {\r\n\t\tstate.userState.currentProject = action.payload;\r\n\t\tstate.userState.clickedBlock = {};\r\n\t}\r\n});\r\n\r\nconst findBlockIndex = (blocks, blockId) => blocks.findIndex((p) => p.id === blockId);\r\n\r\nexport default reducer;\r\n","import { createTimeArray } from '../src/components/MainPage/utils'\r\nexport const initialState = {\r\n  userState: {\r\n    user: 'Lucas',\r\n    currentProject: 0,\r\n    idCounter: 0,\r\n    selectedLink: {\r\n      id: 2,\r\n      linkPosition: 0\r\n    },\r\n    amplitude: 3,\r\n    blocksToLinkArray: [],\r\n    clickedBlock: -1,\r\n    projects: {\r\n      0: {\r\n        id: 0,\r\n        name: 'Project 1',\r\n        totalBlocks: 0,\r\n        blocks: []\r\n      },\r\n    },\r\n  },\r\n  isAuthenticated: true,\r\n  blocks: [\r\n    {\r\n      binary: [1, 1, 1, -1, 1, -1],\r\n      data: [],\r\n      linked: false,\r\n      links: [],\r\n      name: 'Data',\r\n      neededLinks: 0,\r\n      paused: false,\r\n      position: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      priority: 1,\r\n      requiredLinks: ['None'],\r\n      type: 'square',\r\n      updated: false,\r\n      render: true,\r\n      keysToShow: ['binary']\r\n    },\r\n    {\r\n      amplitude: 3,\r\n      data: [],\r\n      frequency: 12,\r\n      linked: false,\r\n      links: [],\r\n      name: 'Carrier Wave',\r\n      neededLinks: 0,\r\n      paused: false,\r\n      position: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      priority: 1,\r\n      requiredLinks: ['None'],\r\n      type: 'sine',\r\n      updated: false,\r\n      render: true,\r\n      description:\r\n        'A carrier wave, carrier signal, or just carrier, is a waveform (usually sinusoid' +\r\n        'al) that is modulated (modified) with an input signal for the purpose of conveyi' +\r\n        'ng information.',\r\n      keysToShow: ['amplitude', 'frequency'],\r\n    },\r\n    {\r\n      data: [],\r\n      linked: false,\r\n      links: [],\r\n      name: 'BPSK',\r\n      neededLinks: 2,\r\n      paused: false,\r\n      position: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      priority: 2,\r\n      requiredLinks: ['Data', 'Carrier Wave'],\r\n      type: 'bpsk',\r\n      updated: false,\r\n      render: false,\r\n      description:\r\n        'Binary Phase Shift Keying (BPSK) is a two phase modulation scheme, where the 0’s' +\r\n        ' and 1’s in a binary message are represented by two different phase states in th' +\r\n        'e carrier signal: θ=0° for binary 1 and θ=180° for binary 0.',\r\n      keysToShow: []\r\n    },\r\n    {\r\n      data: [],\r\n      linked: false,\r\n      links: [],\r\n      name: 'AWGN',\r\n      neededLinks: 1,\r\n      paused: false,\r\n      position: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      priority: 3,\r\n      requiredLinks: ['Data'],\r\n      type: 'awgn',\r\n      updated: false,\r\n      render: false,\r\n      description:\r\n        'Additive white Gaussian noise (AWGN) is a basic noise model used in Information ' +\r\n        'theory to mimic the effect of many random processes that occur in nature.',\r\n      keysToShow: []\r\n    },\r\n    {\r\n      data: [],\r\n      linked: false,\r\n      links: [],\r\n      name: 'FSK',\r\n      neededLinks: 2,\r\n      paused: false,\r\n      position: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      priority: 2,\r\n      requiredLinks: ['Data', 'Carrier Wave'],\r\n      type: 'fsk',\r\n      updated: false,\r\n      render: false,\r\n      description:\r\n        'In Frequency Shify Keying (FSK) the frequency of the Carrier Wave is varied in a' +\r\n        'ccordance with baseband digital input. Binary 1 and 0 is represented by two diff' +\r\n        'erent carrier frequencies.',\r\n      keysToShow: []\r\n    },\r\n    {\r\n      data: [],\r\n      linked: false,\r\n      links: [],\r\n      name: 'ASK',\r\n      neededLinks: 2,\r\n      paused: false,\r\n      position: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      priority: 2,\r\n      requiredLinks: ['Data', 'Carrier Wave'],\r\n      type: 'ask',\r\n      updated: false,\r\n      render: false,\r\n      description:\r\n        'In an ASK system, the binary symbol 1 is represented by transmitting a fixed-amplitude carrier' +\r\n        ' wave and fixed frequency for a bit duration of T seconds. If the signal value is 1 then the' +\r\n        'carrier signal will be transmitted; otherwise, a signal value of 0 will be transmitted.',\r\n      keysToShow: []\r\n    }\r\n  ]\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/MainPage/App';\r\nimport LoginPage from './components/LoginPage/LoginPage';\r\nimport { Provider } from 'react-redux';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport mainPage from './components/MainPage/reducer';\r\nimport 'typeface-roboto';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\r\n\r\nimport undoable from 'redux-undo';\r\n\r\n// We'll use redux-logger just as an example of adding another middleware\r\nimport logger from 'redux-logger';\r\n\r\nconst reducer = {\r\n\tmainPage: undoable(mainPage, { limit: 5 })\r\n};\r\n\r\nlet middleware = [...getDefaultMiddleware()]\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n\tmiddleware = [...middleware, logger];\r\n}\r\n\r\nconst store = configureStore({\r\n\treducer,\r\n\tmiddleware,\r\n\tdevTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\n// const theme = createMuiTheme({   palette: {     background: { default:\r\n// \"#374785\", paper: \"#a8d0e6\" },     primary: { main: \"#24305e\" },\r\n// secondary: {       main: \"#a8d0e6\"     }   } });\r\n\r\nconst theme2 = createMuiTheme({\r\n\tpalette: {\r\n\t\tbackground: {\r\n\t\t\tdefault: '#d3e3fc',\r\n\t\t\tpaper: '#ffffff'\r\n\t\t},\r\n\t\tprimary: {\r\n\t\t\tmain: '#77a6f7'\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#a8d0e6'\r\n\t\t}\r\n\t}\r\n});\r\n// const theme3 = createMuiTheme({   palette: {     background: { default:\r\n// \"#f2f2f2\", paper: \"#ffffff\" },     primary: { main: \"#3b945e\" },\r\n// secondary: {       main: \"#57ba98\"     }   } });\r\n\r\nReactDOM.render(\r\n\t<Fragment>\r\n\t\t<Provider store={store}>\r\n\t\t\t<MuiThemeProvider theme={theme2}>\r\n\t\t\t\t<App />\r\n\t\t\t\t{/* <Router>\r\n\t\t\t\t\t\t<Route path=\"/Home\" component={App} />\r\n\t\t\t\t</Router> */}\r\n\t\t\t</MuiThemeProvider>\r\n\t\t</Provider>\r\n\t</Fragment>,\r\n\tdocument.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}
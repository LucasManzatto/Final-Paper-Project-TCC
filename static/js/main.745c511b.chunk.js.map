{"version":3,"sources":["components/MainPage/actions.js","constants.js","components/MainPage/selectors.js","components/MainPage/BottomArea/axis.js","components/MainPage/BottomArea/Line.js","components/MainPage/utils.js","components/MainPage/BottomArea/BinaryData.js","components/MainPage/BottomArea/BPSKData.js","components/MainPage/BottomArea/FSKData.js","components/MainPage/BottomArea/AWGNData.js","components/MainPage/BottomArea/ASKData.js","components/MainPage/BottomArea/CarrierWaveData.js","components/MainPage/BottomArea/BlockCard.js","components/MainPage/BottomArea/ExpandedBlockCard.js","components/MainPage/BottomArea/bottomArea.js","components/MainPage/ProjectArea/Block.js","components/MainPage/ProjectArea/projectArea.js","components/MainPage/Menu.js","components/MainPage/SideBar/sideBar.js","components/MainPage/SideBar/sideBarBlock.js","firebase.js","components/MainPage/App.jsx","components/LoginPage/LoginPage.jsx","registerServiceWorker.js","components/MainPage/reducer.js","initialState.js","index.js"],"names":["addBlockToProject","createAction","blockClicked","blocksToLink","moveBlock","deleteBlock","payload","type","deleteLink","block","links","filter","link","linked","data","render","pauseBlock","selectLink","updateBlockValue","updateCurrentProject","updateDropDown","projectBlocksSelector","state","mainPage","present","projects","currentProject","blocks","linkedBlocksSelector","createSelector","_","props","map","find","id","getIndexOfBlockSelector","indexOf","sort","property","sortOrder","substr","a","b","result","dynamicSort","Axis","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderAxis","bind","assertThisInitialized","inherits","createClass","key","value","_this$props","scale","axis","tickValues","node","refs","axisFn","select","react_default","createElement","ref","transform","React","Component","Line","xScale","yScale","length","fullData","new_data","forEach","item","index","push","x","y","createFullArray","path","line","curve","curveLinear","d","lineFunction","style","stroke","strokeWidth","fill","shiftArray","shift","createTimeArray","totalTime","time","i","getScales","dimensions","resolution","amplitude","xLine","yLine","yAxis","_findMinMax","dataArray","maxX","minY","Number","MAX_SAFE_INTEGER","maxY","MIN_SAFE_INTEGER","minX","findMinMax","scaleLinear","domain","toFixed","range","width","height","name","notHidden","valueToBinary","number","BinaryData","updateData","createDataArray","indexOfBlock","_this2","newData","clone","paused","_ismounted","setState","window","requestAnimationFrame","binary","size","binaryAux","animationId","cancelAnimationFrame","_this$props2","clickedBlock","Line_Line","focused","axis_Axis","color","axisRight","connect","selectors","BPSKData","findLink","linkName","binaryArray","blockLinkCarrier","currentTime","blockLinkData","nextProps","neededLinks","nextProps_blockLinkData","nextProps_blockLinkCarrier","FSKData","f1","frequency","f2","wt","Math","PI","sin","AWGNData","awgnArray","isEmpty","rnorm","linkedBlocks","prevProps","_this$state","ASKData","a1","a2","CarrierWaveData","angularFrequency","updated","Dimensions","component","containerWidth","containerHeight","BottomArea_BinaryData","BottomArea_CarrierWaveData","BottomArea_BPSKData","BottomArea_FSKData","BottomArea_ASKData","BottomArea_AWGNData","Transition","Slide_default","assign","direction","ExpandedBlockCard","open","handleClickOpen","handleClose","onClickHandler","blockUpdated","classes","haveProperties","isNil","showProperties","className","flex","Typography_default","Button_default","variant","onClick","Dialog_default","fullScreen","onClose","TransitionComponent","AppBar_default","appBar","Toolbar_default","IconButton_default","aria-label","Close_default","Paper_default","react_flexbox_grid_lib","center","textAlign","paddingLeft","BottomArea_BlockCard","ExpandedBlockCardWithStyles","withStyles","iconStyle","position","top","actions","renderBlockCards","Grid_default","priority","container","xs","event","align","justify","BottomArea_ExpandedBlockCard","spacing","elevation","square","blockHeight","blockWidth","blockStyle","border","borderColor","backgroundColor","zIndex","blockStyleLeft","blockStyleRight","Block","componentDidMount","calculateOffset","element","projectTabOffset","document","getElementsByClassName","getBoundingClientRect","offsetX","pageXOffset","left","offsetY","pageYOffset","getBounds","right","bottom","handleClick","handleDrag","e","ui","_this$props$block$pos","deltaPosition","deltaX","deltaY","linkBlocks","blocksToLinkArray","blocksToLinkArrayIsFull","includes","renderLines","selectedLink","linkPosition","linkBlock","borderStyle","react_lineto","borderWidth","x0","y0","x1","y1","renderLineToCursor","_this$props3","cursorPosition","_this$state2","isLinking","capitalize","sum","ChevronLeft_default","updateBlockOnClick","ChevronRight_default","bounds","getPosition","react","react_draggable_default","grid","onDrag","alignItems","gutterBottom","mouseClicked","blockPosition","_state$mainPage$prese","projectTabStyle","ProjectTab","renderBlocks","ProjectArea_Block","projectArea","project","Tabs_default","Tab_default","label","ReactCursorPosition","projectArea_ProjectTab","root","flexGrow","menuButton","marginLeft","marginRight","Menu_default","idCounter","ItemList","ListItem_default","button","ListItemText_default","primary","List_default","subheader","ListSubheader_default","fontWeight","ID","random","toString","renderRequiredLinks","requiredLinks","paddingTop","description","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","settings","timestampsInSnapshots","styles","theme","paper","padding","unit","palette","text","secondary","App","isAuthenticated","paddingRight","overflowY","react_key_handler_dist_default","keyEventName","KEYPRESS","keyValue","onKeyHandle","undo","CssBaseline_default","MainPage_Menu","sideBar","ProjectArea_projectArea","sideBarBlock","bottomArea","Redirect","to","AppWithStylesWithoutRouter","withRouter","dispatch","ActionCreators","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","GithubAuthProvider","LoginPage","validateForm","usuario","senha","handleChange","defineProperty","target","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","history","alert","stop","_x","apply","arguments","minHeight","Card_default","card","CardHeader_default","title","onSubmit","noValidate","autoComplete","CardContent_default","TextField_default","autoFocus","textField","onChange","margin","margisn","StyledFirebaseAuth_default","firebaseAuth","CardActions_default","justifyContent","disabled","isLocalhost","objectSpread","mixins","gutters","paddingBottom","media","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","reducer","createReducer","user","0","1","_createReducer","action","newBlock","blockToLink1","blockToLink2","arrayIndexBlock1","findIndex","prop","arrayIndex","blockIndex","findBlockIndex","blockToUpdate","_action$payload","p","undoable","limit","middleware","toConsumableArray","getDefaultMiddleware","concat","logger","store","configureStore","devTools","process","theme2","createMuiTheme","background","default","main","ReactDOM","es","core_styles","MainPage_App","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.745c511b.chunk.js","sourcesContent":["import * as consts from '../../constants'\r\nimport u from 'updeep'\r\nimport _ from 'lodash'\r\nimport {createAction} from 'redux-starter-kit'\r\n\r\n\r\n\r\nexport const addBlockToProject = createAction('ADD_TO_PROJECT')\r\n\r\nexport const blockClicked = createAction('BLOCK_CLICKED')\r\n\r\nexport const blocksToLink = createAction('BLOCKS_TO_LINK')\r\n\r\nexport const moveBlock = createAction('MOVE_BLOCK')\r\n\r\nexport const deleteBlock = payload => ({ type: consts.DELETE_BLOCK, payload })\r\n\r\n// Quando um link é deletado, é necessário sempre apagar a data porque quando um\r\n// link é deletado o bloco num está com todos os links e não deve ter nenhuma\r\n// data\r\nexport const deleteLink = payload => {\r\n  payload.block.links = payload\r\n    .block\r\n    .links\r\n    .filter(link => link !== payload.link)\r\n  payload.block.linked = false\r\n  payload.block.data = []\r\n  payload.block.render = false\r\n  return { type: consts.DELETE_LINK, payload: payload }\r\n}\r\n\r\nexport const pauseBlock = createAction('PAUSE_BLOCK')\r\n\r\nexport const selectLink = createAction('SELECT_LINK')\r\n\r\nexport const updateBlockValue = createAction('UPDATE_BLOCK_VALUE')\r\n\r\nexport const updateCurrentProject = createAction('UPDATE_CURRENT_PROJECT')\r\n\r\nexport const updateDropDown = payload => ({ type: consts.UPDATE_DROPDOWN, payload })\r\n","export const ADD_TO_PROJECT = 'ADD_TO_PROJECT'\r\nexport const BLOCK_CLICKED = 'BLOCK_CLICKED'\r\nexport const BLOCK_LIST = 'BLOCK_LIST'\r\nexport const BLOCK_UPDATED = 'BLOCK_UPDATED'\r\nexport const BLOCKS_TO_LINK = 'BLOCKS_TO_LINK'\r\nexport const CREATE_LINK = 'CREATE_LINK'\r\nexport const DELETE_BLOCK = 'DELETE_BLOCK'\r\nexport const DELETE_LINK = 'DELETE_LINK'\r\nexport const LOGIN = 'LOGIN'\r\nexport const PAUSE_BLOCK = 'PAUSE_BLOCK'\r\nexport const SELECT_LINK = 'SELECT_LINK'\r\nexport const SET_BLOCK_VALUE = 'SET_BLOCK_VALUE'\r\nexport const TRACK_LOCATION = 'TRACK_LOCATION'\r\nexport const UPDATE_BLOCK = 'UPDATE_BLOCK'\r\nexport const UPDATE_CURRENT_PROJECT = 'UPDATE_CURRENT_PROJECT'\r\nexport const UPDATE_DATA = 'UPDATE_DATA'\r\nexport const UPDATE_DROPDOWN = 'UPDATE_DROPDOWN'\r\nexport const UPDATE_VALUE = 'UPDATE_VALUE'\r\n","import { createSelector } from 'reselect'\nimport _ from 'lodash'\n\nexport const allBlocksSelector = state => state.mainPage.blocks\n\nexport const clickedBlockSelector = state => state.mainPage.present.clickedBlock\n\nexport const projectBlocksSelector = state => state.mainPage.present.projects[state.mainPage.present.currentProject].blocks\n\nexport const linkedBlocksSelector = createSelector((_, props) => props.block, projectBlocksSelector, (block, blocks) => {\n  return block\n    .links\n    .map(link => _.find(blocks, block => block.id === link))\n})\n\nexport const getIndexOfBlockSelector = (state, props) => {\n  return state\n    .mainPage\n    .present\n    .projects[state.mainPage.present.currentProject]\n    .blocks\n    .indexOf(props.block)\n};\n\nexport const getPrioritySelector = createSelector(projectBlocksSelector, blocks => {\n  blocks.sort(dynamicSort('priority'))\n})\n\nfunction dynamicSort (property) {\n  var sortOrder = 1\n  if (property[0] === '-') {\n    sortOrder = -1\n    property = property.substr(1)\n  }\n  return function (a, b) {\n    var result = a[property] < b[property]\n      ? -1\n      : a[property] > b[property]\n        ? 1\n        : 0\n    return result * sortOrder\n  };\n}\n","import React from \"react\";\r\nimport { select } from \"d3-selection\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Axis extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderAxis = this.renderAxis.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderAxis();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.renderAxis();\r\n  }\r\n\r\n  renderAxis() {\r\n    const { scale, axis, tickValues } = this.props;\r\n    const node = this.refs.axis;\r\n    const axisFn = axis(scale).tickValues(tickValues);\r\n    axisFn(select(node));\r\n  }\r\n\r\n  render() {\r\n    return <g ref=\"axis\" transform={this.props.transform} />;\r\n  }\r\n}\r\n\r\nAxis.propTypes = {\r\n  scale: PropTypes.func,\r\n  axis: PropTypes.func,\r\n  tickValues: PropTypes.array\r\n};\r\n","import React from \"react\";\r\nimport { line, curveLinear } from \"d3-shape\";\r\n//import simplify from 'simplify-js'\r\n\r\nexport const Line = props => {\r\n  const { xScale, yScale, data } = props;\r\n  //const stroke = \"#2196f3\";\r\n  const stroke = \"#00887a\";\r\n  //if there's no data return\r\n  if (!data.length) {\r\n    return null;\r\n  }\r\n  /**\r\n   * Create an xy array with the data to create the line path.\r\n   * @param  {Array} data Data of the block.\r\n   * @return {Array}      Return an xy array.\r\n   */\r\n  const createFullArray = data => {\r\n    let new_data = [];\r\n    data.forEach((item, index) => {\r\n      new_data.push({ x: index, y: item });\r\n    });\r\n    return new_data;\r\n  };\r\n  let fullData = createFullArray(data);\r\n\r\n  //Scale the data to fit the SVG\r\n  fullData.forEach(data => {\r\n    data.x = xScale(data.x);\r\n    data.y = yScale(data.y);\r\n  });\r\n\r\n  const lineFunction = line()\r\n    .curve(curveLinear)\r\n    .x(d => d.x)\r\n    .y(d => d.y);\r\n  //const path = lineFunction(simplify(data));\r\n  const path = lineFunction(fullData);\r\n\r\n  return <path d={path} style={{ stroke: stroke, strokeWidth: 3, fill: \"none\" }} />;\r\n};\r\n","import _ from 'lodash'\r\n// AWGN +rnorm();\r\nimport { scaleLinear } from 'd3-scale'\r\n\r\n/**\r\n * Deep diff between two object, using lodash\r\n * @param  {Object} object Object compared\r\n * @param  {Object} base   Object to compare with\r\n * @return {Object}        Return a new object who represent the diff\r\n */\r\nexport const difference = (object, base) => {\r\n  function changes (object, base) {\r\n    return _.transform(object, function (result, value, key) {\r\n      if (!_.isEqual(value, base[key])) {\r\n        result[key] =\r\n          _.isObject(value) && _.isObject(base[key]) ? changes(value, base[key]) : value\r\n      }\r\n    })\r\n  }\r\n  return changes(object, base)\r\n}\r\n/**\r\n * Find min and max.\r\n * @param  {Array} dataArray - x axis of array.\r\n * @param  {number} resolution - Total time of the function.\r\n * @return {Object}            Return the min and max.\r\n */\r\nexport const findMinMax = (dataArray, resolution) => {\r\n  let minX = 0\r\n\r\n  let maxX = resolution - 1\r\n\r\n  let minY = Number.MAX_SAFE_INTEGER\r\n\r\n  let maxY = Number.MIN_SAFE_INTEGER\r\n\r\n  _.map(dataArray, data => {\r\n    if (data < minY) {\r\n      minY = data\r\n    } else if (data > maxY) {\r\n      maxY = data\r\n    }\r\n  })\r\n  return { minX, maxX, minY, maxY }\r\n}\r\n\r\n/**\r\n * Shift the data array to make the movement.\r\n * @param  {Array} data The data on a certain time.\r\n * @return {Array}       The shifted data.\r\n */\r\nexport const shiftArray = data => {\r\n  let item = data.shift()\r\n  data.push(item)\r\n  return data\r\n}\r\n\r\n/**\r\n * Create an array with the total time of the function to draw the xy coordinates.\r\n * @param  {number} totalTime Total time of the function.\r\n * @return {Array}            Return the array from 0 to totalTime-1.\r\n */\r\nexport const createTimeArray = totalTime => {\r\n  let time = []\r\n  for (let i = 0; i < totalTime; i++) {\r\n    time.push(i / totalTime)\r\n  }\r\n  return time\r\n}\r\n\r\n/**\r\n * getScales returns the x,y scale based on the data array to fit the graph.\r\n * @param  {Array} data       Array to scale the y-line.\r\n * @param  {Object} dimensions Has width and height properties.\r\n * @param  {Object} block      Object to set tickValues.\r\n * @param  {number} resolution Variable to scale the x-line.\r\n * @param  {number} [amplitude]  Variable to set tickValues.\r\n * @return {Object}            Return the scales.\r\n */\r\nexport const getScales = (data, dimensions, block, resolution, amplitude) => {\r\n  let scale = {\r\n    xLine: 0,\r\n    yLine: 0,\r\n    yAxis: 0,\r\n    tickValues: 0\r\n  }\r\n  let paddingxAxis = 30\r\n  let paddingyAxis = 20\r\n  const { minX, maxX, minY, maxY } = findMinMax(data, resolution)\r\n  scale.xLine = scaleLinear()\r\n    .domain([minX.toFixed(2), maxX.toFixed(2)])\r\n    .range([paddingxAxis, dimensions.width - paddingxAxis])\r\n\r\n  scale.yLine = scaleLinear()\r\n    .domain([minY.toFixed(2), maxY.toFixed(2)])\r\n    .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n\r\n  // Binary Block\r\n  if (block.name === 'Data') {\r\n    scale.yAxis = scaleLinear()\r\n      .domain([0, 1])\r\n      .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n    scale.tickValues = [-1, 0, 1]\r\n  } else {\r\n    scale.yAxis = scaleLinear()\r\n      .domain([-amplitude / 2, amplitude / 2])\r\n      .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n    scale.tickValues = [-amplitude / 2, 0, amplitude / 2]\r\n  }\r\n  return scale\r\n}\r\n/**\r\n * Hide all unwanted properties of the block.\r\n * @param  {string} key The checked key.\r\n * @return {boolean}     Return true or false.\r\n */\r\nexport const notHidden = key => {\r\n  if (\r\n    key === 'frequency' ||\r\n    key === 'amplitude' ||\r\n    key === 'binary'\r\n  ) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * The binary array uses -1 to 1 to match the BPSK equation, this change all -1\r\n * to 1.\r\n * @param  {Array} data The binary array.\r\n * @return {Array}      Return the array with 0 and 1.\r\n */\r\nexport const valueToBinary = data => {\r\n  return data.map(number => (number === 1 ? 1 : 0))\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport { updateBlockValue } from '../actions'\r\nimport * as selectors from '../selectors'\r\n\r\nimport { axisRight } from 'd3-axis'\r\nimport { Axis } from './axis'\r\nimport { Line } from './Line'\r\nimport { shiftArray, getScales } from '../utils'\r\n\r\nclass BinaryData extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.updateData = this.updateData.bind(this)\r\n    let data = this.createDataArray()\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: 'data',\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    })\r\n    this.state = { data }\r\n  }\r\n\r\n  updateData () {\r\n    const { block } = this.props\r\n    const { data } = this.state\r\n    let newData = _.clone(data)\r\n    if (!block.paused) {\r\n      newData = shiftArray(newData)\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: newData\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  createDataArray () {\r\n    const { resolution, block } = this.props\r\n    const dataArray = block.binary\r\n    const totalTime = resolution\r\n    const size = totalTime / dataArray.length\r\n    let index = 0\r\n    let binaryAux = []\r\n    dataArray.forEach(item => {\r\n      for (let i = 0; i < size; i++) {\r\n        binaryAux[index++] = item\r\n      }\r\n    })\r\n    return binaryAux\r\n  }\r\n\r\n  componentDidMount () {\r\n    this._ismounted = true\r\n    this.animationId = window.requestAnimationFrame(this.updateData)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this._ismounted = false\r\n    window.cancelAnimationFrame(this.animationId)\r\n  }\r\n  render () {\r\n    const { dimensions, block, clickedBlock } = this.props\r\n    const { data } = this.state\r\n    const scale = getScales(data, dimensions, block, this.props.resolution)\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          focused={block === clickedBlock}\r\n        />\r\n        <Axis\r\n          style={{ color: 'ffffff' }}\r\n          axis={axisRight}\r\n          tickValues={scale.tickValues}\r\n          scale={scale.yAxis}\r\n        />\r\n      </g>\r\n    )\r\n  }\r\n}\r\nBinaryData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockValue }\r\n)(BinaryData)\r\n","import _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nimport { Axis } from \"./axis\";\r\nimport { axisRight } from \"d3-axis\";\r\nimport { updateBlockValue } from \"../actions\";\r\nimport { Line } from \"./Line\";\r\nimport { shiftArray, createTimeArray, getScales, difference } from \"../utils\";\r\nimport * as selectors from \"../selectors\";\r\n\r\nclass BPSKData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateData = this.updateData.bind(this);\r\n    const { blocks, block, resolution } = props;\r\n    let data = [];\r\n    //Para entrar aqui deve ter os 2 links, data e Carrier\r\n    //os dois podem estar na posicao 0 ou 1, entao deve selecionar o correto\r\n\r\n    let blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    data = this.createDataArray(blockLinkData.data, resolution, blockLinkCarrier);\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: \"data\",\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    });\r\n    this.state = {\r\n      data,\r\n      blockLinkData,\r\n      blockLinkCarrier\r\n    };\r\n  }\r\n  findLink = (linkName, blocks, links) => {\r\n    return _.clone(\r\n      _.find(\r\n        blocks,\r\n        block => (block.id === links[0] || block.id === links[1]) && block.name === linkName\r\n      )\r\n    );\r\n  };\r\n\r\n  createDataArray = (binaryArray, totalTime, blockLinkCarrier) => {\r\n    let data = [];\r\n    let time = createTimeArray(totalTime);\r\n    time.forEach((currentTime, index) => {\r\n      data.push(binaryArray[index] * blockLinkCarrier.data[index]);\r\n    });\r\n    return data;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._ismounted = true;\r\n    this.animationId = window.requestAnimationFrame(this.updateData);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._ismounted = false;\r\n    window.cancelAnimationFrame(this.animationId);\r\n  }\r\n\r\n  // componentDidUpdate(prevProps){\r\n  //   const { blocks, block } = this.props;\r\n  //   const { blockLinkCarrier } = this.state;\r\n  //   let blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n  //   let blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n\r\n\r\n  //   if(blockLinkData.data !== this.state.blockLinkData.data){\r\n  //     console.log(\"entrou\")\r\n  //     let data = this.createDataArray(blockLinkData.data);\r\n  //     this.props.updateBlockValue({\r\n  //       block: this.props.block,\r\n  //       key: \"data\",\r\n  //       value: data,\r\n  //       indexOfBlock: this.props.indexOfBlock\r\n  //     });\r\n  //   this.setState({ data, blockLinkData});\r\n  //   }\r\n  // }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { blocks, block } = this.props;\r\n    const { blockLinkCarrier } = this.state;\r\n    if (nextProps.block.links < nextProps.block.neededLinks) {\r\n      return;\r\n    }\r\n    let nextProps_blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let nextProps_blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    \r\n    if (nextProps_blockLinkCarrier.data !== blockLinkCarrier.data) {\r\n      let data = this.createDataArray(\r\n        nextProps_blockLinkData.data,\r\n        this.props.resolution,\r\n        nextProps_blockLinkCarrier\r\n      );\r\n      this.props.updateBlockValue({\r\n        block: this.props.block,\r\n        key: \"data\",\r\n        value: data,\r\n        indexOfBlock: this.props.indexOfBlock\r\n      });\r\n      this.setState({ data, blockLinkCarrier: nextProps_blockLinkCarrier });\r\n    }\r\n  }\r\n  updateData() {\r\n    const { block } = this.props;\r\n    const { data } = this.state;\r\n    let new_data = _.clone(data);\r\n    if (!block.paused) {\r\n      new_data = shiftArray(new_data);\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: new_data\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { dimensions, block, clickedBlock } = this.props;\r\n    const { data } = this.state;\r\n    const scale = getScales(\r\n      data,\r\n      dimensions,\r\n      block,\r\n      this.props.resolution,\r\n      this.state.blockLinkCarrier.amplitude\r\n    );\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          focused={block === clickedBlock ? true : false}\r\n        />\r\n        <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nBPSKData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockValue }\r\n)(BPSKData);\r\n","import _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nimport { Axis } from \"./axis\";\r\nimport { axisRight } from \"d3-axis\";\r\nimport { updateBlockValue } from \"../actions\";\r\nimport { Line } from \"./Line\";\r\nimport { shiftArray, createTimeArray, getScales, difference } from \"../utils\";\r\nimport * as selectors from \"../selectors\";\r\n\r\nclass FSKData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateData = this.updateData.bind(this);\r\n    const { blocks, block, resolution } = props;\r\n    let data = [];\r\n    \r\n    //Para entrar aqui deve ter os 2 links, data e Carrier\r\n    let blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    data = this.createDataArray(blockLinkData.data, resolution, blockLinkCarrier);\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: \"data\",\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    });\r\n    this.state = {\r\n      data,\r\n      blockLinkData,\r\n      blockLinkCarrier\r\n    };\r\n  }\r\n  findLink = (linkName, blocks, links) => {\r\n    return _.clone(\r\n      _.find(\r\n        blocks,\r\n        block => (block.id === links[0] || block.id === links[1]) && block.name === linkName\r\n      )\r\n    );\r\n  };\r\n\r\n  createDataArray = (binaryArray, totalTime, blockLinkCarrier) => {\r\n    let data = [];\r\n    let f1=blockLinkCarrier.frequency,f2=blockLinkCarrier.frequency * 2,amplitude=blockLinkCarrier.amplitude;\r\n    let time = createTimeArray(totalTime);\r\n    time.forEach((currentTime, index) => {\r\n        if(binaryArray[index] === 1){\r\n          const angularFrequency = 2 * Math.PI * f1;\r\n          let wt = angularFrequency * currentTime;\r\n          data.push(amplitude * Math.sin(wt));\r\n        }\r\n        else{\r\n          const angularFrequency = 2 * Math.PI * f2;\r\n          let wt = angularFrequency * currentTime;\r\n          data.push(amplitude * Math.sin(wt));\r\n        }\r\n    });\r\n    return data;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._ismounted = true;\r\n    this.animationId = window.requestAnimationFrame(this.updateData);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._ismounted = false;\r\n    window.cancelAnimationFrame(this.animationId);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { blocks, block } = this.props;\r\n    const { blockLinkCarrier } = this.state;\r\n    if (nextProps.block.links < nextProps.block.neededLinks) {\r\n      return;\r\n    }\r\n    let nextProps_blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let nextProps_blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    //If there is differences update the state\r\n    if (nextProps_blockLinkCarrier.data !== blockLinkCarrier.data) {\r\n      let data = this.createDataArray(\r\n        nextProps_blockLinkData.data,\r\n        this.props.resolution,\r\n        nextProps_blockLinkCarrier\r\n      );\r\n      this.props.updateBlockValue({\r\n        block: this.props.block,\r\n        key: \"data\",\r\n        value: data,\r\n        indexOfBlock: this.props.indexOfBlock\r\n      });\r\n      this.setState({ data, blockLinkCarrier: nextProps_blockLinkCarrier });\r\n    }\r\n  }\r\n  updateData() {\r\n    const { block } = this.props;\r\n    const { data } = this.state;\r\n    let new_data = _.clone(data);\r\n    if (!block.paused) {\r\n      new_data = shiftArray(new_data);\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: new_data\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { dimensions, block, clickedBlock } = this.props;\r\n    const { data } = this.state;\r\n    const scale = getScales(\r\n      data,\r\n      dimensions,\r\n      block,\r\n      this.props.resolution,\r\n      this.state.blockLinkCarrier.amplitude\r\n    );\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          focused={block === clickedBlock ? true : false}\r\n        />\r\n        <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nFSKData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockValue }\r\n)(FSKData);\r\n","import _ from \"lodash\";\r\nimport { Axis } from \"./axis\";\r\nimport { axisRight } from \"d3-axis\";\r\nimport { updateBlockValue } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Line } from \"./Line\";\r\nimport { rnorm } from \"randgen\";\r\nimport { shiftArray, getScales } from \"../utils\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport * as selectors from \"../selectors\";\r\n\r\nclass AWGNData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateData = this.updateData.bind(this);\r\n    const blockLinkData = _.clone(props.linkedBlocks[0]);\r\n    const data = this.createDataArray(blockLinkData.data);\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: \"data\",\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    });\r\n    this.state = {\r\n      data,\r\n      blockLinkData\r\n    };\r\n  }\r\n\r\n  createDataArray = data => {\r\n    let awgnArray = [];\r\n    if(!_.isEmpty(data)){\r\n      data.forEach(item => {\r\n        awgnArray.push(item + rnorm());\r\n      });\r\n    }\r\n    return awgnArray;\r\n  };\r\n  componentDidMount() {\r\n    this._ismounted = true;\r\n    this.animationId = window.requestAnimationFrame(this.updateData);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._ismounted = false;\r\n    window.cancelAnimationFrame(this.animationId);\r\n  }\r\n  \r\n  componentDidUpdate(prevProps){\r\n      const blockLinkData = prevProps.linkedBlocks[0];\r\n      if(blockLinkData.data !== this.state.blockLinkData.data){\r\n        let data = this.createDataArray(blockLinkData.data);\r\n        this.props.updateBlockValue({\r\n          block: this.props.block,\r\n          key: \"data\",\r\n          value: data,\r\n          indexOfBlock: this.props.indexOfBlock\r\n        });\r\n      this.setState({ data, blockLinkData});\r\n      }\r\n  }\r\n  \r\n  updateData() {\r\n    const { block } = this.props;\r\n    const { data } = this.state;\r\n    let new_data = _.clone(data);\r\n    if (!block.paused) {\r\n      new_data = shiftArray(new_data);\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: new_data\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { dimensions, block, blocks, clickedBlock } = this.props;\r\n    const { data, blockLinkData } = this.state;\r\n    let amplitude = 1;\r\n    if (\"amplitude\" in blockLinkData) amplitude = blockLinkData.amplitude;\r\n    const scale = getScales(data, dimensions, block, this.props.resolution, amplitude);\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          //focused={block === clickedBlock ? true : false}\r\n        />\r\n        <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n      </g>\r\n    );\r\n  }\r\n}\r\nAWGNData.propTypes = {\r\n  block: PropTypes.object,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number,\r\n  updateBlockValue: PropTypes.func\r\n};\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    linkedBlocks: selectors.linkedBlocksSelector(state, props),\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockValue }\r\n)(AWGNData);\r\n","import _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nimport { Axis } from \"./axis\";\r\nimport { axisRight } from \"d3-axis\";\r\nimport { updateBlockValue } from \"../actions\";\r\nimport { Line } from \"./Line\";\r\nimport { shiftArray, createTimeArray, getScales, difference } from \"../utils\";\r\nimport * as selectors from \"../selectors\";\r\n\r\nclass ASKData extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateData = this.updateData.bind(this);\r\n    const { blocks, block, resolution } = props;\r\n    let data = [];\r\n    //Para entrar aqui deve ter os 2 links, data e Carrier\r\n    //os dois podem estar na posicao 0 ou 1, entao deve selecionar o correto\r\n\r\n    let blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    data = this.createDataArray(blockLinkData.data, resolution, blockLinkCarrier);\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: \"data\",\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    });\r\n    this.state = {\r\n      data,\r\n      blockLinkData,\r\n      blockLinkCarrier\r\n    };\r\n  }\r\n  findLink = (linkName, blocks, links) => {\r\n    return _.clone(\r\n      _.find(\r\n        blocks,\r\n        block => (block.id === links[0] || block.id === links[1]) && block.name === linkName\r\n      )\r\n    );\r\n  };\r\n\r\n  createDataArray = (binaryArray, totalTime, blockLinkCarrier) => {\r\n    let data = [];\r\n    let a1 = blockLinkCarrier.amplitude, a2= blockLinkCarrier.amplitude * 2;\r\n    let time = createTimeArray(totalTime);\r\n    time.forEach((currentTime, index) => {\r\n      if(binaryArray[index] === -1){\r\n        data.push(blockLinkCarrier.data[index] * a1);\r\n      }\r\n      else{\r\n        data.push(blockLinkCarrier.data[index] * a2);\r\n      }\r\n    });\r\n    return data;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._ismounted = true;\r\n    this.animationId = window.requestAnimationFrame(this.updateData);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._ismounted = false;\r\n    window.cancelAnimationFrame(this.animationId);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { blocks, block } = this.props;\r\n    const { blockLinkCarrier } = this.state;\r\n    if (nextProps.block.links < nextProps.block.neededLinks) {\r\n      return;\r\n    }\r\n    let nextProps_blockLinkData = this.findLink(\"Data\", blocks, block.links);\r\n    let nextProps_blockLinkCarrier = this.findLink(\"Carrier Wave\", blocks, block.links);\r\n    if (nextProps_blockLinkCarrier.data !== blockLinkCarrier.data) {\r\n      let data = this.createDataArray(\r\n        nextProps_blockLinkData.data,\r\n        this.props.resolution,\r\n        nextProps_blockLinkCarrier\r\n      );\r\n      this.props.updateBlockValue({\r\n        block: this.props.block,\r\n        key: \"data\",\r\n        value: data,\r\n        indexOfBlock: this.props.indexOfBlock\r\n      });\r\n      this.setState({ data, blockLinkCarrier: nextProps_blockLinkCarrier });\r\n    }\r\n  }\r\n  updateData() {\r\n    const { block } = this.props;\r\n    const { data } = this.state;\r\n    let new_data = _.clone(data);\r\n    if (!block.paused) {\r\n      new_data = shiftArray(new_data);\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: new_data\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { dimensions, block, clickedBlock } = this.props;\r\n    const { data } = this.state;\r\n    const scale = getScales(\r\n      data,\r\n      dimensions,\r\n      block,\r\n      this.props.resolution,\r\n      this.state.blockLinkCarrier.amplitude\r\n    );\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          focused={block === clickedBlock ? true : false}\r\n        />\r\n        <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nASKData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {  updateBlockValue }\r\n)(ASKData);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport {updateBlockValue } from '../actions'\r\nimport * as selectors from '../selectors'\r\n\r\nimport { axisRight } from 'd3-axis'\r\nimport { Axis } from './axis'\r\nimport { Line } from './Line'\r\nimport { shiftArray, createTimeArray, getScales } from '../utils'\r\n\r\nimport ft from 'fourier-transform'\r\nimport oscillator from 'audio-oscillator'\r\nimport * as dsp from 'dsp.js'\r\n\r\nclass CarrierWaveData extends React.Component {\r\n\r\n  constructor (props) {\r\n    super(props)\r\n    this.updateData = this.updateData.bind(this)\r\n    const { resolution, block } = this.props\r\n    let data = this.createDataArray(resolution, block.frequency, block.amplitude)\r\n\r\n    props.updateBlockValue({\r\n      block: props.block,\r\n      key: 'data',\r\n      value: data,\r\n      indexOfBlock: props.indexOfBlock\r\n    })\r\n    this.state = { data }\r\n  }\r\n\r\n  updateData () {\r\n    const { block } = this.props\r\n    const { data } = this.state\r\n    let newData = _.clone(data)\r\n    if (!block.paused) {\r\n      newData = shiftArray(newData)\r\n    }\r\n    if (this._ismounted) {\r\n      this.setState(\r\n        {\r\n          data: newData\r\n        },\r\n        () => {\r\n          window.requestAnimationFrame(this.updateData)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  createDataArray (totalTime, frequency, amplitude) {\r\n\r\n    // var bufferSize = totalTime\r\n    // var sampleRate = 44100\r\n    // frequency *= frequency*2\r\n    // var frequency = 344\r\n    // var sine = new dsp.Oscillator(dsp.Oscillator.Sine, frequency, amplitude, bufferSize, sampleRate)\r\n    // sine.generate()\r\n    // var signal = sine.signal\r\n    // let data = [].slice.call(signal)\r\n    // var nthHarmonic = 8\r\n    // let harmonic = new dsp.Oscillator(dsp.Oscillator.Sine, frequency * nthHarmonic, 10 / nthHarmonic, bufferSize, sampleRate);\r\n    // harmonic.generate()\r\n    // sine.add(harmonic)\r\n\r\n\r\n\r\n    //var fft = new dsp.FFT(2048, 44100)\r\n    // var spectrum = fft.spectrum\r\n    //var sampleRate = 44100\r\n    //var lp12 = new dsp.IIRFilter(dsp.DSP.LOWPASS, 22050, 0, sampleRate)\r\n    //lp12.set(2500, 0.3)\r\n    //signal = lp12.func.process(signal)\r\n\r\n\r\n\r\n    let data = []\r\n    let time = createTimeArray(totalTime)\r\n    const angularFrequency = 2 * Math.PI * frequency\r\n    time.forEach(currentTime => {\r\n      let wt = angularFrequency * currentTime\r\n      data.push(amplitude * Math.sin(wt))\r\n    })\r\n    return data\r\n  }\r\n\r\n  render () {\r\n    const { dimensions, block, clickedBlock } = this.props\r\n    const { data } = this.state\r\n    const scale = getScales(data, dimensions, block, this.props.resolution, block.amplitude)\r\n    return (\r\n      <g>\r\n        <Line\r\n          xScale={scale.xLine}\r\n          yScale={scale.yLine}\r\n          data={data}\r\n          focused={block === clickedBlock}\r\n        />\r\n        <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n      </g>\r\n    )\r\n  }\r\n  componentDidMount () {\r\n    this._ismounted = true\r\n    this.animationId = window.requestAnimationFrame(this.updateData)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this._ismounted = false\r\n    window.cancelAnimationFrame(this.animationId)\r\n  }\r\n  componentWillReceiveProps (nextProps) {\r\n    const { resolution, block } = nextProps\r\n    if (block.updated) {\r\n      let data = this.createDataArray(resolution, block.frequency, block.amplitude)\r\n      this.props.updateBlockValue({\r\n        block: this.props.block,\r\n        key: 'data',\r\n        value: data,\r\n        indexOfBlock: this.props.indexOfBlock\r\n      })\r\n      this.props.updateBlockValue({\r\n        block: this.props.block,\r\n        key: 'updated',\r\n        value: false,\r\n        indexOfBlock: this.props.indexOfBlock\r\n      })\r\n      this.setState({ data })\r\n    }\r\n  }\r\n}\r\nCarrierWaveData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: selectors.projectBlocksSelector(state),\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  {updateBlockValue }\r\n)(CarrierWaveData)\r\n","import React from 'react'\r\nimport Dimensions from 'react-dimensions'\r\n\r\nimport BinaryData from './BinaryData'\r\nimport BPSKData from './BPSKData'\r\nimport FSKData from './FSKData'\r\nimport AWGNData from './AWGNData'\r\nimport ASKData from './ASKData'\r\nimport CarrierWaveData from './CarrierWaveData'\r\n\r\nconst BlockCard = props => {\r\n  const component = new React.Component(props)\r\n  component.render = () => {\r\n    const { block } = component.props\r\n    let data\r\n    let width = component.props.containerWidth\r\n    let height = component.props.containerHeight\r\n    const maxHeight = 870\r\n    if (height > maxHeight) {\r\n      height = maxHeight\r\n    }\r\n    if (block.name === 'Data') {\r\n      data = <BinaryData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'Carrier Wave') {\r\n      data = <CarrierWaveData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'BPSK' && block.linked) {\r\n      data = <BPSKData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'FSK' && block.linked) {\r\n      data = <FSKData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'ASK' && block.linked) {\r\n      data = <ASKData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'AWGN' && block.linked) {\r\n      data = <AWGNData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    return (\r\n      <svg height={height} width={width}>\r\n        {data}\r\n      </svg>\r\n    )\r\n  }\r\n  return component\r\n}\r\n\r\nexport default Dimensions()(BlockCard)\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { Col } from \"react-flexbox-grid\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nimport BlockCard from \"./BlockCard\";\r\n\r\n//react redux\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions\";\r\n\r\nconst styles = {\r\n  iconStyle: {\r\n    position: \"relative\",\r\n    top: \"6px\"\r\n  },\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  }\r\n};\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass ExpandedBlockCard extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  onClickHandler = (block, value, key) => {\r\n    this.props.updateBlockValue({ value, key, id: block.id });\r\n    this.props.blockUpdated({ block, updated: true });\r\n  };\r\n\r\n  render() {\r\n    const { classes, block } = this.props;\r\n    let haveProperties = false;\r\n    if (!_.isNil(block.frequency)) {\r\n      haveProperties = true;\r\n    }\r\n    const showProperties = haveProperties ? (\r\n      <div className={classes.flex}>\r\n        <Typography color=\"inherit\">\r\n          {/* <Left onClick={(event,value)=> this.onClickHandler(block,block.frequency - 1,'frequency')} style={styles.iconStyle}/> */}\r\n          Frequency: {block.frequency}\r\n          {/* <Right onClick={(event,value)=> this.onClickHandler(block,block.frequency + 1,'frequency')} style={styles.iconStyle}/> */}\r\n        </Typography>\r\n        <Typography color=\"inherit\">\r\n          {/* <Left onClick={(event,value)=> this.onClickHandler(block,block.amplitude - 1,'amplitude')} style={styles.iconStyle}/> */}\r\n          Amplitude: {block.amplitude}\r\n          {/* <Right onClick={(event,value)=> this.onClickHandler(block,block.amplitude + 1,'amplitude')} style={styles.iconStyle}/> */}\r\n        </Typography>\r\n      </div>\r\n    ) : (\r\n      <div />\r\n    );\r\n    return (\r\n      <div>\r\n        <Button variant=\"contained\" onClick={this.handleClickOpen} color=\"primary\">\r\n          Expand\r\n        </Button>\r\n        <Dialog\r\n          fullScreen\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          TransitionComponent={Transition}>\r\n          <AppBar className={classes.appBar} color=\"primary\">\r\n            <Toolbar>\r\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\r\n                {block.name}\r\n              </Typography>\r\n              {showProperties}\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Paper style={{ height: \"100%\" }}>\r\n            <Col center=\"xs\" style={{ height: \"90%\", textAlign: \"center\" }}>\r\n              <div style={{ height: \"5%\" }} />\r\n              <div style={{ height: \"100%\", paddingLeft: 16 }}>\r\n                <BlockCard block={block} key={block.id} />\r\n              </div>\r\n            </Col>\r\n          </Paper>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExpandedBlockCard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => {\r\n  return { amplitude: state.mainPage.present.amplitude };\r\n};\r\n\r\nlet ExpandedBlockCardWithStyles = withStyles(styles)(ExpandedBlockCard);\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(ExpandedBlockCardWithStyles);\r\n","import _ from 'lodash'\r\nimport { connect } from 'react-redux'\r\nimport { pauseBlock } from '../actions'\r\nimport BlockCard from './BlockCard'\r\nimport Button from '@material-ui/core/Button'\r\nimport ExpandBlockCard from './ExpandedBlockCard'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport * as selectors from '../selectors'\r\nconst style = {\r\n  height: 200\r\n}\r\n\r\nconst BottomArea = props => {\r\n  // Se o total de links for diferente de 0 e o bloco não estiver linkado ele nao é renderizado\r\n  let renderBlockCards = _.map(props.blocks, block => {\r\n    if (!block.render) {\r\n      return\r\n    }\r\n    return (\r\n      <Grid priority={block.neededLinks} key={block.id} container item xs={3}>\r\n        {/* Button 1 */}\r\n        <Grid xs={4} container item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={event => props.pauseBlock({ block})}\r\n          >\r\n            {block.paused ? <div>Resume</div> : <div>Pause</div>}\r\n          </Button>\r\n        </Grid>\r\n        <Grid xs={4} container item>\r\n          <Typography variant=\"subheading\" align=\"center\">\r\n            <b>{block.name}</b>\r\n          </Typography>\r\n        </Grid>\r\n        {/* Button 2 */}\r\n        <Grid xs={4} container item justify=\"center\">\r\n          <ExpandBlockCard block={block} />\r\n        </Grid>\r\n        {/* BlockCard */}\r\n        <Grid style={{ height: 180 }} container item xs={12} spacing={16}>\r\n          <Grid xs={12} item>\r\n            <BlockCard block={block} key={block.id} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  })\r\n  // renderBlockCards = _.orderBy(renderBlockCards, [\"props\"], [\"asc\"]);\r\n  return (\r\n    <Paper elevation={0} square={true} style={style}>\r\n      <Grid container>{renderBlockCards}</Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: selectors.projectBlocksSelector(state),\r\n    //blocksSorted: selectors.getPrioritySelector(state)\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { pauseBlock }\r\n)(BottomArea)\r\n","import _ from 'lodash';\r\nimport { Line } from 'react-lineto';\r\nimport Draggable from 'react-draggable';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Left from '@material-ui/icons/ChevronLeft';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Fragment } from 'react';\r\nimport Right from '@material-ui/icons/ChevronRight';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { notHidden, valueToBinary } from '../utils';\r\nimport * as selectors from '../selectors';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nconst blockHeight = 100;\r\nconst blockWidth = 160;\r\nconst blockStyle = {\r\n\theight: blockHeight,\r\n\twidth: blockWidth,\r\n\tborder: '1px solid',\r\n\tborderColor: '#77a6f7',\r\n\tbackgroundColor: '#d3e3fc',\r\n\tzIndex: 2\r\n};\r\nconst blockStyleLeft = {\r\n\theight: 33,\r\n\t//  borderTop: \"1px solid black\",\r\n\t//\tborderRight: \"1px solid black\",\r\n\t//borderLeft: \"1px solid black\",\r\n\t//  borderBottom: \"1px solid black\",\r\n\tbackgroundColor: '#00887a'\r\n};\r\nconst blockStyleRight = {\r\n\theight: 33,\r\n\t//  borderTop: \"1px solid black\",\r\n\t//  borderRight: \"1px solid black\",\r\n\t//borderLeft: \"1px solid black\",\r\n\t//  borderBottom: \"1px solid black\",\r\n\tbackgroundColor: '#77a6f7'\r\n};\r\nconst iconStyle = {\r\n\tposition: 'relative',\r\n\ttop: '7px'\r\n};\r\n\r\nclass Block extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tprojectTabOffset: 0,\r\n\t\t\toffsetX: 0,\r\n\t\t\toffsetY: 0,\r\n\t\t\tmouseClicked: false,\r\n\t\t\tposition: 5,\r\n\t\t\tblockPosition: props.block.position\r\n\t\t};\r\n\t}\r\n\tcomponentDidMount = () => {\r\n\t\tthis.props.blockClicked(this.props.block);\r\n\t\tthis.calculateOffset('projectTab');\r\n\t};\r\n\r\n\tcalculateOffset = (element) => {\r\n\t\tlet projectTabOffset = document.getElementsByClassName(element)[0].getBoundingClientRect();\r\n\t\tlet offsetX = window.pageXOffset + projectTabOffset.left;\r\n\t\tlet offsetY = window.pageYOffset + projectTabOffset.top;\r\n\t\tthis.setState({\r\n\t\t\tprojectTabOffset,\r\n\t\t\toffsetX,\r\n\t\t\toffsetY\r\n\t\t});\r\n\t};\r\n\r\n\tgetBounds = () => ({\r\n\t\tleft: 0,\r\n\t\ttop: 0,\r\n\t\tright: this.state.projectTabOffset.width - blockWidth - (this.props.block.neededLinks === 0 ? 16 : 32),\r\n\t\tbottom: this.state.projectTabOffset.height - blockHeight\r\n\t});\r\n\r\n\tgetPosition(bounds) {\r\n\t\tlet { position } = this.props.block;\r\n\t\tif (position.x > bounds.right) {\r\n\t\t\tposition.x = bounds.right;\r\n\t\t}\r\n\t\tif (position.y > bounds.bottom) {\r\n\t\t\tposition.y = bounds.bottom;\r\n\t\t}\r\n\t\treturn position;\r\n\t}\r\n\r\n\thandleClick = () => {\r\n\t\tif (this.props.block !== this.props.clickedBlock) {\r\n\t\t\tthis.props.blockClicked(this.props.block);\r\n\t\t}\r\n\t};\r\n\r\n\thandleDrag = (e, ui) => {\r\n\t\tconst { x, y } = this.props.block.position;\r\n\t\tconst deltaPosition = {\r\n\t\t\tx: x + ui.deltaX,\r\n\t\t\ty: y + ui.deltaY\r\n\t\t};\r\n\t\tthis.props.moveBlock({\r\n\t\t\tvalue: deltaPosition,\r\n\t\t\tblock: this.props.block,\r\n\t\t\tindexOfBlock: this.props.indexOfBlock\r\n\t\t});\r\n\t};\r\n\r\n\tlinkBlocks = (position) => {\r\n\t\tconst { blocksToLinkArray, block } = this.props;\r\n\t\tthis.setState({ position });\r\n\t\t//Can link only from the input to the output and cannot link fully linked blocks\r\n\t\t//Need to check if a block is already fully linked but other block wants to link with\r\n\t\t//it in the output\r\n\t\t//Nao deixar linkar quando o bloco que voce quer linkar nao esta linkado e nao tem Data\r\n\t\tif (\r\n\t\t\t(position === 195 && (blocksToLinkArray.length === 0 || block.data.length === 0)) ||\r\n\t\t\t(block.links.length > block.neededLinks && block.neededLinks !== 0)\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tif (!this.blocksToLinkArrayIsFull() && !_.includes(blocksToLinkArray, this.props.block)) {\r\n\t\t\t\tthis.props.blocksToLink({ block });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tblocksToLinkArrayIsFull = () => this.props.blocksToLinkArray.length >= 2;\r\n\r\n\trenderLines = () => {\r\n\t\tlet { selectLink, block, projects, selectedLink, currentProject } = this.props;\r\n\t\tlet { offsetX, offsetY } = this.state;\r\n\r\n\t\tif (block.neededLinks === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn block.links.map((linkPosition) => {\r\n\t\t\tlet linkBlock = _.find(projects[currentProject].blocks, (block) => block.id === linkPosition);\r\n\t\t\tlet borderStyle = 'solid';\r\n\t\t\tif (selectedLink.id === block.id && selectedLink.linkPosition === linkPosition) {\r\n\t\t\t\tborderStyle = 'dashed';\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div key={linkPosition} onClick={(event) => selectLink({ id: block.id, linkPosition })}>\r\n\t\t\t\t\t<Line\r\n\t\t\t\t\t\tborderWidth={3}\r\n\t\t\t\t\t\tborderStyle={borderStyle}\r\n\t\t\t\t\t\tborderColor=\"black\"\r\n\t\t\t\t\t\tzIndex={1}\r\n\t\t\t\t\t\tx0={block.position.x + 8 + offsetX}\r\n\t\t\t\t\t\ty0={block.position.y + blockHeight / 2 + offsetY}\r\n\t\t\t\t\t\tx1={linkBlock.position.x + offsetX + 170}\r\n\t\t\t\t\t\ty1={linkBlock.position.y + blockHeight / 2 + offsetY}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\trenderLineToCursor = (position) => {\r\n\t\tlet { block, cursorPosition } = this.props;\r\n\t\tlet { offsetX, offsetY } = this.state;\r\n\t\t//render line only when the block is not fully linked and is not already linking\r\n\t\tif (this.isLinking(block)) {\r\n\t\t\treturn (\r\n\t\t\t\t<Line\r\n\t\t\t\t\tborderWidth={3}\r\n\t\t\t\t\tborderStyle=\"solid\"\r\n\t\t\t\t\tborderColor=\"black\"\r\n\t\t\t\t\tzIndex={1}\r\n\t\t\t\t\tx0={block.position.x + position + offsetX}\r\n\t\t\t\t\ty0={block.position.y + blockHeight / 2 + offsetY}\r\n\t\t\t\t\tx1={cursorPosition.x + offsetX}\r\n\t\t\t\t\ty1={cursorPosition.y + offsetY}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else return null;\r\n\t};\r\n\r\n\tisLinking = (block) => _.includes(this.props.blocksToLinkArray, block);\r\n\r\n\tshowProperties = (block) => {\r\n\t\treturn _.map(block, (value, key) => {\r\n\t\t\tif (key === 'binary') {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Typography key={key} variant=\"body1\">\r\n\t\t\t\t\t\t<b>{_.capitalize(key)}:</b>\r\n\t\t\t\t\t\t{valueToBinary(value)}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t//Hide unwanted properties\r\n\t\t\tif (notHidden(key)) {\r\n\t\t\t\tlet sum = 1;\r\n\t\t\t\tif (key === 'frequency') {\r\n\t\t\t\t\tsum = 6;\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Typography key={key} variant=\"body1\">\r\n\t\t\t\t\t\t<b>{_.capitalize(key)}:</b>\r\n\t\t\t\t\t\t<Left\r\n\t\t\t\t\t\t\tonClick={(event, value) => this.updateBlockOnClick(this.props.block[key] - sum, key)}\r\n\t\t\t\t\t\t\tstyle={iconStyle}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{value}\r\n\t\t\t\t\t\t<Right\r\n\t\t\t\t\t\t\tonClick={(event, value) => this.updateBlockOnClick(this.props.block[key] + sum, key)}\r\n\t\t\t\t\t\t\tstyle={iconStyle}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tupdateBlockOnClick = (value, key) => {\r\n\t\tthis.props.updateBlockValue({\r\n\t\t\tvalue,\r\n\t\t\tkey,\r\n\t\t\tblock: this.props.block\r\n\t\t});\r\n\t\tthis.props.updateBlockValue({\r\n\t\t\tvalue: true,\r\n\t\t\tkey: 'updated',\r\n\t\t\tblock: this.props.block\r\n\t\t});\r\n\t};\r\n\r\n\trender = () => {\r\n\t\tconst { block } = this.props;\r\n\t\tconst bounds = this.getBounds();\r\n\t\tconst position = this.getPosition(bounds);\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Draggable\r\n\t\t\t\t\tgrid={[ 10, 10 ]}\r\n\t\t\t\t\tbounds={bounds}\r\n\t\t\t\t\tonDrag={this.handleDrag}\r\n\t\t\t\t\t// onStop={this.handleStop}\r\n\t\t\t\t\tposition={position}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tstyle={{ height: 100, width: 192, position: 'absolute', zIndex: 2 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{block.neededLinks === 0 ? null : (\r\n\t\t\t\t\t\t\t<Grid item container direction=\"column\" xs={1} style={{ height: 100 }}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} />\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\tstyle={blockStyleLeft}\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.linkBlocks(5)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Grid item xs={4} />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<Grid item xs={10} style={blockStyle}>\r\n\t\t\t\t\t\t\t<Typography variant=\"subheading\" gutterBottom align=\"center\">\r\n\t\t\t\t\t\t\t\t<b>{block.name}</b>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t{this.showProperties(block)}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item container direction=\"column\" xs={1} style={{ height: 100 }}>\r\n\t\t\t\t\t\t\t<Grid item xs={4} />\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\tstyle={blockStyleRight}\r\n\t\t\t\t\t\t\t\tonClick={() => this.linkBlocks(195)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Grid item xs={4} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Draggable>\r\n\t\t\t\t{!_.isNil(block.links) ? this.renderLines() : []}\r\n\t\t\t\t{this.renderLineToCursor(this.state.position)}\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nBlock.propTypes = {\r\n\tselectLink: PropTypes.func.isRequired,\r\n\ttrackLocation: PropTypes.func.isRequired,\r\n\tblockClicked: PropTypes.func.isRequired,\r\n\tblock: PropTypes.object.isRequired,\r\n\tdimensions: PropTypes.object.isRequired,\r\n\tcreateLink: PropTypes.func.isRequired,\r\n\tblocksToLink: PropTypes.func.isRequired,\r\n\tblocksToLinkArray: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n\tconst { clickedBlock, projects, selectedLink, currentProject, blocksToLinkArray } = state.mainPage.present;\r\n\r\n\treturn {\r\n\t\tclickedBlock,\r\n\t\tprojects,\r\n\t\tselectedLink,\r\n\t\tcurrentProject,\r\n\t\tblocksToLinkArray,\r\n\t\tlinkedBlocks: selectors.linkedBlocksSelector(state, props),\r\n\t\tindexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(Block);\r\n","import React, { Fragment } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport _ from \"lodash\";\r\nimport Dimensions from \"react-dimensions\";\r\nimport ReactCursorPosition from \"react-cursor-position\";\r\n\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport { updateCurrentProject } from \"../actions\";\r\nimport Block from \"./Block\";\r\n\r\nconst ProjectArea = props => {\r\n  let width = props.containerWidth;\r\n  let height = props.containerHeight;\r\n  return (\r\n    <Fragment>\r\n      <AppBar elevation={1} square={true} position=\"static\">\r\n        <Tabs value={0}>\r\n          <Tab label={props.project.name} key={props.project.id} value={props.project.id} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <ReactCursorPosition>\r\n        <ProjectTab key=\"0\" blocks={props.project.blocks} dimensions={{ width, height }} />\r\n      </ReactCursorPosition>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst projectTabStyle = {\r\n  height: 600,\r\n  zIndex: -10\r\n};\r\n\r\nconst ProjectTab = props => {\r\n  const renderBlocks = _.map(props.blocks, block => {\r\n    return (\r\n      <Block\r\n        cursorPosition={props.position}\r\n        key={block.id}\r\n        block={block}\r\n        dimensions={props.dimensions}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <Paper square={true} elevation={0} className=\"projectTab\" style={projectTabStyle}>\r\n      {renderBlocks}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //projects : projectsSelector(state)\r\n    project: state.mainPage.present.projects[0]\r\n  };\r\n};\r\nconst projectArea = connect(\r\n  mapStateToProps,\r\n  { updateCurrentProject }\r\n)(ProjectArea);\r\nexport default Dimensions()(projectArea);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  flex: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nfunction Menu(props) {\r\n  const { classes } = props;\r\n  return (\r\n    //<div className={classes.root}>\r\n    <div className={classes.root}>\r\n      <AppBar elevation={0} square={true} position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\r\n            TCC\r\n          </Typography>\r\n          <Button color=\"inherit\">Lucas</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n    //\t</div>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Menu);\r\n","import React from \"react\";\r\n\r\n//Material\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport _ from \"lodash\";\r\n\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { addBlockToProject } from \"../actions\";\r\n\r\n//let SelectableList = makeSelectable(List);\r\n\r\n// const subHeaderStyle={\r\n//     backgroundColor : blue500,\r\n//     color : grey50\r\n// }\r\nconst style = {\r\n  height: \"100%\"\r\n};\r\n\r\nconst SideBar = props => {\r\n  const onClickHandler = block => {\r\n    props.addBlockToProject({ block, idCounter: props.idCounter });\r\n  };\r\n\r\n  //Cria a lista de items\r\n  const ItemList = _.map(props.blocks, block => {\r\n    return (\r\n      <ListItem key={block.name} button onClick={() => onClickHandler(block)}>\r\n        <ListItemText primary={block.name} />\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Paper elevation={0} square={true} style={style}>\r\n      <List component=\"nav\" subheader={<ListSubheader component=\"div\">Blocks</ListSubheader>}>\r\n        {ItemList}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    blocks: state.mainPage.present.blocks,\r\n    idCounter: state.mainPage.present.idCounter\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addBlockToProject }\r\n)(SideBar);\r\n","import React, { Fragment } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n//import Subheader from 'material-ui/Subheader';\r\n\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport { updateBlockValue, updateDropDown } from \"../actions\";\r\n//import {updateBlockValue} from '../SideBar/actions';\r\n\r\nconst style = {\r\n  fontWeight: \"bold\"\r\n};\r\nconst ID = () => {\r\n  return (\r\n    \"_\" +\r\n    Math.random()\r\n      .toString(36)\r\n      .substr(2, 9)\r\n  );\r\n};\r\n\r\nconst SideBarBlock = props => {\r\n  const renderRequiredLinks = props.clickedBlock.requiredLinks.map((link, index) => {\r\n    return link === \"None\" ? (\r\n      <Typography key={ID()}>{link}</Typography>\r\n    ) : (\r\n      <Typography key={ID()}>{link} :</Typography>\r\n    );\r\n  });\r\n  return (\r\n    <Paper\r\n      elevation={0}\r\n      square={true}\r\n      key={props.clickedBlock.id}\r\n      style={{ height: \"100%\", paddingTop: 16 }}>\r\n      <Typography variant=\"title\" gutterBottom align=\"center\">\r\n        {props.clickedBlock.name}\r\n      </Typography>\r\n      <List>\r\n        <ListItem>\r\n          <ListItemText\r\n            style={style}\r\n            primary={\r\n              <Fragment>\r\n                <Typography variant=\"body1\">{props.clickedBlock.description}</Typography>\r\n                <p />\r\n                <Typography variant=\"subheading\" gutterBottom align=\"center\">\r\n                  <b>Required Links</b>\r\n                </Typography>\r\n                {renderRequiredLinks}\r\n              </Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n        {/* <ListItem>\r\n                    <ListItemText\r\n                      primary=\"Formula:\"\r\n                    />\r\n                </ListItem> */}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    clickedBlock: state.mainPage.present.clickedBlock\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockValue, updateDropDown }\r\n)(SideBarBlock);\r\n","import firebase from 'firebase'\r\n// Initialize Firebase\r\n// TODO: Replace with your project's customized code snippet\r\nvar config = {\r\n  apiKey: 'AIzaSyDHY9IPIaTKPVcrOrTRbKm1tOQag4jk-xE',\r\n  authDomain: 'projeto-tcc-333d6.firebaseapp.com',\r\n  databaseURL: 'https://projeto-tcc-333d6.firebaseio.com',\r\n  projectId: 'projeto-tcc-333d6',\r\n  storageBucket: 'projeto-tcc-333d6.appspot.com',\r\n  messagingSenderId: '264938431096'\r\n}\r\nfirebase.initializeApp(config)\r\nexport const db = firebase.firestore()\r\nconst settings = {\r\n  timestampsInSnapshots: true\r\n}\r\ndb.settings(settings)\r\n\r\nexport const createDb = () => {\r\n  db\r\n    .collection('blocks')\r\n    .add(blocks)\r\n\r\n  let blocksRef = db.collection('blocks')\r\n  let getBlocks = blocksRef\r\n    .get()\r\n    .then(snapshot => {\r\n      snapshot.forEach(doc => {\r\n        console.log(doc.data())\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log('Error getting document', err)\r\n    })\r\n}\r\n\r\nconst blocks = {\r\n  block1: {\r\n    binary: [\r\n      1,\r\n      1,\r\n      1,\r\n      -1,\r\n      1,\r\n      -1\r\n    ],\r\n    data: [],\r\n    linked: false,\r\n    links: [],\r\n    name: 'Data',\r\n    neededLinks: 0,\r\n    paused: false,\r\n    position: {\r\n      x: 200,\r\n      y: 480\r\n    },\r\n    priority: 1,\r\n    requiredLinks: ['None'],\r\n    type: 'square',\r\n    updated: false\r\n  },\r\n  block2: {\r\n    amplitude: 3,\r\n    data: [],\r\n    frequency: 12,\r\n    linked: false,\r\n    links: [],\r\n    name: 'Carrier Wave',\r\n    neededLinks: 0,\r\n    paused: false,\r\n    position: {\r\n      x: 0,\r\n      y: 400\r\n    },\r\n    priority: 1,\r\n    requiredLinks: ['None'],\r\n    type: 'sine',\r\n    updated: false,\r\n    description: 'A carrier wave, carrier signal, or just carrier, is a waveform (usually sinusoid' +\r\n        'al) that is modulated (modified) with an input signal for the purpose of conveyi' +\r\n        'ng information.'\r\n  },\r\n  block3: {\r\n    data: [],\r\n    linked: false,\r\n    links: [],\r\n    name: 'BPSK',\r\n    neededLinks: 2,\r\n    paused: false,\r\n    position: {\r\n      x: 200,\r\n      y: 120\r\n    },\r\n    priority: 2,\r\n    requiredLinks: [\r\n      'Data', 'Carrier Wave'\r\n    ],\r\n    type: 'bpsk',\r\n    updated: false,\r\n    description: 'Binary Phase Shift Keying (BPSK) is a two phase modulation scheme, where the 0’s' +\r\n        ' and 1’s in a binary message are represented by two different phase states in th' +\r\n        'e carrier signal: θ=0° for binary 1 and θ=180° for binary 0.'\r\n  },\r\n  block4: {\r\n    data: [],\r\n    linked: false,\r\n    links: [],\r\n    name: 'AWGN',\r\n    neededLinks: 1,\r\n    paused: false,\r\n    position: {\r\n      x: 400,\r\n      y: 0\r\n    },\r\n    priority: 3,\r\n    requiredLinks: ['Data'],\r\n    type: 'awgn',\r\n    updated: false,\r\n    description: 'Additive white Gaussian noise (AWGN) is a basic noise model used in Information ' +\r\n        'theory to mimic the effect of many random processes that occur in nature.'\r\n  },\r\n  block5: {\r\n    data: [],\r\n    linked: false,\r\n    links: [],\r\n    name: 'FSK',\r\n    neededLinks: 2,\r\n    paused: false,\r\n    position: {\r\n      x: 200,\r\n      y: 120\r\n    },\r\n    priority: 2,\r\n    requiredLinks: [\r\n      'Data', 'Carrier Wave'\r\n    ],\r\n    type: 'fsk',\r\n    updated: false,\r\n    description: 'In Frequency Shify Keying (FSK) the frequency of the Carrier Wave is varied in a' +\r\n        'ccordance with baseband digital input. Binary 1 and 0 is represented by two diff' +\r\n        'erent carrier frequencies.'\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\n// Imports dos components do projeto\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomArea from './BottomArea/bottomArea';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProjectArea from './ProjectArea/projectArea';\r\nimport _ from 'lodash';\r\n\r\nimport Menu from './Menu';\r\nimport SideBar from './SideBar/sideBar';\r\nimport SideBarBlock from './SideBar/sideBarBlock';\r\n\r\nimport * as selectors from './selectors';\r\nimport { deleteLink, deleteBlock } from './actions';\r\nimport KeyHandler, { KEYPRESS } from 'react-key-handler';\r\n\r\nimport { ActionCreators } from 'redux-undo';\r\nimport { connect } from 'react-redux';\r\nimport { createDb } from 'C:/Users/Lucas/Documents/GitHub/tcc/src/firebase.js';\r\nconst styles = (theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing.unit * 2,\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: theme.palette.text.secondary\r\n\t}\r\n});\r\n// createDb();\r\nconst App = (props) => {\r\n\tif (props.isAuthenticated) {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tpaddingRight: 16,\r\n\t\t\t\t\toverflowY: 'hidden'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<KeyHandler\r\n\t\t\t\t\tkeyEventName={KEYPRESS}\r\n\t\t\t\t\tkeyValue=\"q\"\r\n\t\t\t\t\tonKeyHandle={() => props.deleteBlock(props.clickedBlock)}\r\n\t\t\t\t/>\r\n\t\t\t\t<KeyHandler\r\n\t\t\t\t\tkeyEventName={KEYPRESS}\r\n\t\t\t\t\tkeyValue=\"x\"\r\n\t\t\t\t\tonKeyHandle={() =>\r\n\t\t\t\t\t\tprops.deleteLink({\r\n\t\t\t\t\t\t\tblock: _.find(props.blocks, (block) => block.id === props.selectedLink.id),\r\n\t\t\t\t\t\t\tlink: props.selectedLink.linkPosition\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<KeyHandler keyEventName={KEYPRESS} keyValue=\"z\" onKeyHandle={() => props.undo()} />\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Grid container justify=\"flex-end\" spacing={16}>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs item>\r\n\t\t\t\t\t\t\t<Menu />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs={2} item>\r\n\t\t\t\t\t\t\t<SideBar />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid xs={8} item>\r\n\t\t\t\t\t\t\t<ProjectArea />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid xs={2} item>\r\n\t\t\t\t\t\t\t<SideBarBlock />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs={12} item>\r\n\t\t\t\t\t\t\t<BottomArea />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <Redirect to=\"/\" />;\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tdeleteLink: (payload) => {\r\n\t\t\tdispatch(deleteLink(payload));\r\n\t\t},\r\n\t\tdeleteBlock: (clickedBlock) => {\r\n\t\t\tdispatch(deleteBlock(clickedBlock));\r\n\t\t},\r\n\t\tundo: () => {\r\n\t\t\tdispatch(ActionCreators.undo());\r\n\t\t}\r\n\t};\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuthenticated: state.mainPage.present.isAuthenticated,\r\n\t\tclickedBlock: state.mainPage.present.clickedBlock,\r\n\t\tselectedLink: state.mainPage.present.selectedLink,\r\n\t\tblocks: selectors.projectBlocksSelector(state)\r\n\t};\r\n};\r\n\r\nconst AppWithStyles = withRouter(withStyles(styles)(App));\r\nconst AppWithStylesWithoutRouter = withStyles(styles)(App);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppWithStylesWithoutRouter);\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\nimport firebase from 'firebase'\r\n\r\nconst styles = theme => ({\r\n  // textField: {   marginLeft: theme.spacing.unit,   marginRight:\r\n  // theme.spacing.unit,   width: 200 },\r\n  root: {\r\n    ...theme\r\n      .mixins\r\n      .gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    height: 200,\r\n    textAlign: \"center\"\r\n  },\r\n  // card: {   maxWidth: 345 },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: 'popup',\r\n  signInSuccessUrl: '/Home',\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID]\r\n}\r\nclass LoginPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usuario: \"\",\r\n      senha: \"\"\r\n    };\r\n  }\r\n\r\n  validateForm = () => this.state.usuario.length > 0 && this.state.senha.length > 0;\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if (this.state.usuario === \"admin\" && this.state.senha === \"admin\") {\r\n      this\r\n        .props\r\n        .history\r\n        .push(\"/Home\");\r\n    } else {\r\n      alert(\"Usuário ou senha inválidos.\");\r\n    }\r\n    // try {   await Auth.signIn(this.state.usuario, this.state.password);\r\n    // alert(\"Logged in\"); } catch (e) {   alert(e.message); }\r\n  };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div>\r\n        <CssBaseline/>\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{\r\n          minHeight: \"100vh\"\r\n        }}>\r\n          <Grid item xs={3} justify=\"center\">\r\n            <Card\r\n              style={{\r\n              textAlign: \"center\"\r\n            }}\r\n              className={classes.card}>\r\n              <CardHeader title=\"Login\"/>\r\n              <form\r\n                onSubmit={this.handleSubmit}\r\n                className={classes.container}\r\n                noValidate\r\n                autoComplete=\"off\">\r\n                <CardContent>\r\n                  <TextField\r\n                    autoFocus\r\n                    id=\"usuario\"\r\n                    label=\"Usuário\"\r\n                    className={classes.textField}\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                    margin=\"normal\"/>\r\n                  <div/>\r\n                  <TextField\r\n                    id=\"senha\"\r\n                    label=\"Senha\"\r\n                    className={classes.textField}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={this.handleChange}\r\n                    margisn=\"normal\"/>\r\n                    <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\r\n                </CardContent>\r\n                <CardActions\r\n                  style={{\r\n                  justifyContent: \"center\"\r\n                }}>\r\n                  <Button type=\"submit\" disabled={!this.validateForm()} // component={Link} }} // to=\"/Home\"\r\n                    variant=\"contained\" color=\"primary\"  className={classes.button}>\r\n                    Login\r\n                  </Button>\r\n                </CardActions>\r\n              </form>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      ); } } LoginPage.propTypes = {classes : PropTypes.object.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(LoginPage));","// In production, we register a service worker to serve assets from local cache.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background. To learn more about the\r\n// benefits of this model, read https://goo.gl/KwvDNy. This link also includes\r\n// instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n// [::1] is the IPv6 localhost address.\r\nwindow.location.hostname === '[::1]' ||\r\n// 127.0.0.1/8 is considered localhost for IPv4.\r\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin from\r\n      // what our page is served on. This might happen if a CDN is used to serve\r\n      // assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl)\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or\r\n        // not.\r\n        checkValidServiceWorker(swUrl)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator\r\n    .serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and the fresh content\r\n              // will have been added to the cache. It's the perfect time to display a \"New\r\n              // content is available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.')\r\n            } else {\r\n              // At this point, everything has been precached. It's the perfect time to\r\n              // display a \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  // eslint-disable-next-line no-undef\r\n  fetch(swUrl).then(response => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator\r\n        .serviceWorker\r\n        .ready\r\n        .then(registration => {\r\n          registration\r\n            .unregister()\r\n            .then(() => {\r\n              window\r\n                .location\r\n                .reload()\r\n            })\r\n        })\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl)\r\n    }\r\n  }).catch(() => {\r\n    console.log('No internet connection found. App is running in offline mode.')\r\n  })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator\r\n      .serviceWorker\r\n      .ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport * as consts from '../../constants';\r\nimport update from 'immutability-helper';\r\n\r\nimport { initialState } from '../../initialState';\r\nimport { createReducer } from 'redux-starter-kit';\r\n\r\nimport * as actions from './actions';\r\nimport _ from 'lodash';\r\n\r\nconst reducer = createReducer(initialState, {\r\n\t// ADICIONA BLOCO AO PROJETO\r\n\t[actions.addBlockToProject]: (state, action) => {\r\n\t\tconst newBlock = _.clone(action.payload.block);\r\n\t\tnewBlock['id'] = state.idCounter++;\r\n\t\tstate.projects[state.currentProject].blocks.push(newBlock);\r\n\t},\r\n\t// ATUALIZA O BLOCO CLICADO\r\n\t[actions.blockClicked]: (state, action) => {\r\n\t\tstate.clickedBlock = action.payload;\r\n\t},\r\n\t// ATUALIZA O ARRAY DE BLOCOS QUE VAO SER LINKADOS\r\n\t[actions.blocksToLink]: (state, action) => {\r\n\t\tstate.blocksToLinkArray.push(action.payload.block);\r\n\t\tif (state.blocksToLinkArray.length === 2) {\r\n\t\t\tlet blockToLink1 = state.blocksToLinkArray[0];\r\n\t\t\tlet blockToLink2 = state.blocksToLinkArray[1];\r\n\t\t\tconst arrayIndexBlock1 = state.projects[state.currentProject].blocks.findIndex(\r\n\t\t\t\t(prop) => prop.id == blockToLink1.id\r\n\t\t\t);\r\n\t\t\tlet block = state.projects[state.currentProject].blocks[arrayIndexBlock1];\r\n\t\t\tblock.links.push(blockToLink2.id);\r\n\t\t\tif (block.links.length >= block.neededLinks) {\r\n\t\t\t\tstate.projects[state.currentProject].blocks[arrayIndexBlock1].linked = true;\r\n\t\t\t\tstate.projects[state.currentProject].blocks[arrayIndexBlock1].render = true;\r\n\t\t\t}\r\n\t\t\tstate.blocksToLinkArray = [];\r\n\t\t}\r\n\t},\r\n\t// DELETA O BLOCO DO PROJETO\r\n\t[actions.deleteBlock]: (state, action) => {\r\n\t\tlet blocks = state.projects[state.currentProject].blocks;\r\n\t\tblocks = blocks.filter((block) => block.id !== action.payload.id);\r\n\t},\r\n\t// DELETA UM LINK DO BLOCO\r\n\t[actions.deleteLink]: (state, action) => {\r\n\t\tconst newBlock = _.clone(action.payload.block);\r\n\t\tnewBlock.links = newBlock.links.filter((link) => link !== action.payload.link);\r\n\t\tnewBlock.linked = false;\r\n\t\tnewBlock.data = [];\r\n\t\tnewBlock.render = false;\r\n\t\tconst arrayIndex = state.projects[state.currentProject].blocks.findIndex(\r\n\t\t\t(prop) => prop.id == action.payload.block.id\r\n\t\t);\r\n\t\tstate.projects[state.currentProject].blocks[arrayIndex] = newBlock;\r\n\t},\r\n\t// MOVE O BLOCO NA TELA\r\n\t[actions.moveBlock]: (state, action) => {\r\n\t\tstate.projects[state.currentProject].blocks[action.payload.indexOfBlock].position = action.payload.value;\r\n\t},\r\n\t// PAUSA O GRÁFICO DO BLOCO\r\n\t[actions.pauseBlock]: (state, action) => {\r\n\t\tconst { block } = action.payload;\r\n\t\tconst blockIndex = findBlockIndex(state.projects[state.currentProject].blocks, block);\r\n\t\tconst blockToUpdate = state.projects[state.currentProject].blocks[blockIndex];\r\n\t\tblockToUpdate['paused'] = !blockToUpdate.paused;\r\n\t},\r\n\t// ATUALIZA O LINK ATUALMENTE SELECIONADO, PARA PODER DELETA-LO\r\n\t[actions.selectLink]: (state, action) => {\r\n\t\tstate.selectedLink = action.payload;\r\n\t},\r\n\t// ATUALIZA UMA PROPRIEDADE DO BLOCO\r\n\t[actions.updateBlockValue]: (state, action) => {\r\n\t\tconst { block, key, value } = action.payload;\r\n\t\tconst projectBlocks = state.projects[state.currentProject].blocks;\r\n\t\tconst blockIndex = findBlockIndex(state.projects[state.currentProject].blocks, block);\r\n\t\tlet blockToUpdate = projectBlocks[blockIndex];\r\n\t\tblockToUpdate[key] = value;\r\n\t},\r\n\t// ATUALIZA O PROJETO,\r\n\t[actions.updateCurrentProject]: (state, action) => {\r\n\t\tstate.currentProject = action.payload;\r\n\t\tstate.clickedBlock = {};\r\n\t}\r\n});\r\n\r\nconst findBlockIndex = (blocks, block) => blocks.findIndex((p) => p.id === block.id);\r\n\r\nexport const updateBlock = (state, block) => {};\r\n\r\nexport default reducer;\r\n","export const initialState = {\r\n  isAuthenticated: true,\r\n  user: 'Duvewet',\r\n  currentProject: 0,\r\n  idCounter: 5,\r\n  selectedLink: {\r\n    id: 2,\r\n    linkPosition: 0\r\n  },\r\n  amplitude: 3,\r\n  blocksToLinkArray: [],\r\n  clickedBlock: {\r\n    id: 2,\r\n    name: 'BPSK',\r\n    links: [],\r\n    type: 'bpsk',\r\n    position: {\r\n      x: 200,\r\n      y: 120\r\n    },\r\n    paused: false,\r\n    linked: true,\r\n    updated: false,\r\n    neededLinks: 2,\r\n    data: [],\r\n    requiredLinks: [\r\n      'Data', 'Carrier Wave'\r\n    ],\r\n    description: 'Binary Phase Shift Keying (BPSK) is a two phase modulation scheme, where the 0’s' +\r\n        ' and 1’s in a binary message are represented by two different phase states in th' +\r\n        'e carrier signal: θ=0° for binary 1 and θ=180° for binary 0.'\r\n  },\r\n  projects: {\r\n    0: {\r\n      id: 0,\r\n      name: 'Project 1',\r\n      blocks: [\r\n        {\r\n          binary: [\r\n            1,\r\n            1,\r\n            1,\r\n            -1,\r\n            1,\r\n            -1\r\n          ],\r\n          data: [],\r\n          id: 0,\r\n          linked: false,\r\n          links: [],\r\n          name: 'Data',\r\n          neededLinks: 0,\r\n          paused: false,\r\n          position: {\r\n            x: 200,\r\n            y: 480\r\n          },\r\n          priority: 1,\r\n          requiredLinks: ['None'],\r\n          render: true,\r\n          type: 'square',\r\n          updated: false\r\n        }, {\r\n          amplitude: 3,\r\n          data: [],\r\n          frequency: 12,\r\n          id: 1,\r\n          linked: false,\r\n          links: [],\r\n          name: 'Carrier Wave',\r\n          neededLinks: 0,\r\n          paused: false,\r\n          position: {\r\n            x: 0,\r\n            y: 400\r\n          },\r\n          priority: 1,\r\n          render: true,\r\n          requiredLinks: ['None'],\r\n          type: 'sine',\r\n          updated: false,\r\n          description: 'A carrier wave, carrier signal, or just carrier, is a waveform (usually sinusoid' +\r\n              'al) that is modulated (modified) with an input signal for the purpose of conveyi' +\r\n              'ng information.'\r\n        },\r\n        // {   data: [],   id: 2,   linked: false,   links: [],   name: \"BPSK\",\r\n        // neededLinks: 2,   paused: false,   position: { x: 200, y: 120 },   priority:\r\n        // 2,   requiredLinks: [\"Data\", \"Carrier Wave\"],   type: \"bpsk\",   updated:\r\n        // false,   description:     \"Binary Phase Shift Keying (BPSK) is a two phase\r\n        // modulation scheme, where the 0’s and 1’s in a binary message are represented\r\n        // by two different phase states in the carrier signal: θ=0° for binary 1 and\r\n        // θ=180° for binary 0.\" },\r\n        {\r\n          data: [],\r\n          id: 2,\r\n          linked: false,\r\n          links: [],\r\n          name: 'ASK',\r\n          neededLinks: 2,\r\n          paused: false,\r\n          position: {\r\n            x: 200,\r\n            y: 120\r\n          },\r\n          priority: 2,\r\n          render: false,\r\n          requiredLinks: [\r\n            'Data', 'Carrier Wave'\r\n          ],\r\n          type: 'ask',\r\n          updated: false,\r\n          description: 'Binary Phase Shift Keying (BPSK) is a two phase modulation scheme, where the 0’s' +\r\n              ' and 1’s in a binary message are represented by two different phase states in th' +\r\n              'e carrier signal: θ=0° for binary 1 and θ=180° for binary 0.'\r\n        }, {\r\n          data: [],\r\n          id: 3,\r\n          linked: false,\r\n          links: [],\r\n          name: 'FSK',\r\n          neededLinks: 2,\r\n          paused: false,\r\n          position: {\r\n            x: 200,\r\n            y: 120\r\n          },\r\n          priority: 2,\r\n          render: false,\r\n          requiredLinks: [\r\n            'Data', 'Carrier Wave'\r\n          ],\r\n          type: 'fsk',\r\n          updated: false,\r\n          description: 'In Frequency Shify Keying (FSK) the frequency of the Carrier Wave is varied in a' +\r\n              'ccordance with baseband digital input. Binary 1 and 0 is represented by two diff' +\r\n              'erent carrier frequencies.'\r\n        }, {\r\n          data: [],\r\n          id: 4,\r\n          linked: false,\r\n          links: [],\r\n          name: 'AWGN',\r\n          neededLinks: 1,\r\n          paused: false,\r\n          position: {\r\n            x: 400,\r\n            y: 0\r\n          },\r\n          priority: 3,\r\n          render: false,\r\n          requiredLinks: ['Data'],\r\n          type: 'awgn',\r\n          updated: false,\r\n          description: 'Additive white Gaussian noise (AWGN) is a basic noise model used in Information ' +\r\n              'theory to mimic the effect of many random processes that occur in nature.'\r\n        }\r\n      ]\r\n    },\r\n    1: {\r\n      id: 1,\r\n      name: 'Project 2',\r\n      blocks: {\r\n        1: {\r\n          id: 1,\r\n          name: 'Carrier Wave',\r\n          frequency: 4,\r\n          amplitude: 4,\r\n          type: 'sine',\r\n          position: {\r\n            x: 0,\r\n            y: 300\r\n          },\r\n          paused: false\r\n        }\r\n      }\r\n    }\r\n  },\r\n  blocks: [\r\n    {\r\n      binary: [\r\n        1,\r\n        1,\r\n        1,\r\n        -1,\r\n        1,\r\n        -1\r\n      ],\r\n      data: [],\r\n      linked: false,\r\n      links: [],\r\n      name: 'Data',\r\n      neededLinks: 0,\r\n      paused: false,\r\n      position: {\r\n        x: 200,\r\n        y: 480\r\n      },\r\n      priority: 1,\r\n      requiredLinks: ['None'],\r\n      type: 'square',\r\n      updated: false\r\n    }, {\r\n      amplitude: 3,\r\n      data: [],\r\n      frequency: 12,\r\n      linked: false,\r\n      links: [],\r\n      name: 'Carrier Wave',\r\n      neededLinks: 0,\r\n      paused: false,\r\n      position: {\r\n        x: 0,\r\n        y: 400\r\n      },\r\n      priority: 1,\r\n      requiredLinks: ['None'],\r\n      type: 'sine',\r\n      updated: false,\r\n      description: 'A carrier wave, carrier signal, or just carrier, is a waveform (usually sinusoid' +\r\n          'al) that is modulated (modified) with an input signal for the purpose of conveyi' +\r\n          'ng information.'\r\n    }, {\r\n      data: [],\r\n      linked: false,\r\n      links: [],\r\n      name: 'BPSK',\r\n      neededLinks: 2,\r\n      paused: false,\r\n      position: {\r\n        x: 200,\r\n        y: 120\r\n      },\r\n      priority: 2,\r\n      requiredLinks: [\r\n        'Data', 'Carrier Wave'\r\n      ],\r\n      type: 'bpsk',\r\n      updated: false,\r\n      description: 'Binary Phase Shift Keying (BPSK) is a two phase modulation scheme, where the 0’s' +\r\n          ' and 1’s in a binary message are represented by two different phase states in th' +\r\n          'e carrier signal: θ=0° for binary 1 and θ=180° for binary 0.'\r\n    }, {\r\n      data: [],\r\n      linked: false,\r\n      links: [],\r\n      name: 'AWGN',\r\n      neededLinks: 1,\r\n      paused: false,\r\n      position: {\r\n        x: 400,\r\n        y: 0\r\n      },\r\n      priority: 3,\r\n      requiredLinks: ['Data'],\r\n      type: 'awgn',\r\n      updated: false,\r\n      description: 'Additive white Gaussian noise (AWGN) is a basic noise model used in Information ' +\r\n          'theory to mimic the effect of many random processes that occur in nature.'\r\n    }, {\r\n      data: [],\r\n      linked: false,\r\n      links: [],\r\n      name: 'FSK',\r\n      neededLinks: 2,\r\n      paused: false,\r\n      position: {\r\n        x: 200,\r\n        y: 120\r\n      },\r\n      priority: 2,\r\n      requiredLinks: [\r\n        'Data', 'Carrier Wave'\r\n      ],\r\n      type: 'fsk',\r\n      updated: false,\r\n      description: 'In Frequency Shify Keying (FSK) the frequency of the Carrier Wave is varied in a' +\r\n          'ccordance with baseband digital input. Binary 1 and 0 is represented by two diff' +\r\n          'erent carrier frequencies.'\r\n    }\r\n  ]\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/MainPage/App';\r\nimport LoginPage from './components/LoginPage/LoginPage';\r\nimport { Provider } from 'react-redux';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport mainPage from './components/MainPage/reducer';\r\nimport 'typeface-roboto';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\r\n\r\nimport undoable from 'redux-undo';\r\n\r\n// We'll use redux-logger just as an example of adding another middleware\r\nimport logger from 'redux-logger';\r\n\r\nconst reducer = {\r\n\tmainPage: undoable(mainPage, { limit: 5 })\r\n};\r\n\r\nconst middleware = [ ...getDefaultMiddleware(), logger ];\r\n\r\nconst store = configureStore({\r\n\treducer,\r\n\tmiddleware,\r\n\tdevTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\n// const theme = createMuiTheme({   palette: {     background: { default:\r\n// \"#374785\", paper: \"#a8d0e6\" },     primary: { main: \"#24305e\" },\r\n// secondary: {       main: \"#a8d0e6\"     }   } });\r\n\r\nconst theme2 = createMuiTheme({\r\n\tpalette: {\r\n\t\tbackground: {\r\n\t\t\tdefault: '#d3e3fc',\r\n\t\t\tpaper: '#ffffff'\r\n\t\t},\r\n\t\tprimary: {\r\n\t\t\tmain: '#77a6f7'\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#a8d0e6'\r\n\t\t}\r\n\t}\r\n});\r\n// const theme3 = createMuiTheme({   palette: {     background: { default:\r\n// \"#f2f2f2\", paper: \"#ffffff\" },     primary: { main: \"#3b945e\" },\r\n// secondary: {       main: \"#57ba98\"     }   } });\r\n\r\nReactDOM.render(\r\n\t<Fragment>\r\n\t\t<Provider store={store}>\r\n\t\t\t<MuiThemeProvider theme={theme2}>\r\n\t\t\t\t<App />\r\n\t\t\t\t{/* <Router>\r\n\t\t\t\t\t\t<Route path=\"/Home\" component={App} />\r\n\t\t\t\t</Router> */}\r\n\t\t\t</MuiThemeProvider>\r\n\t\t</Provider>\r\n\t</Fragment>,\r\n\tdocument.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/MainPage/actions.js","constants.js","components/MainPage/selectors.js","hooks/UsePrevious.js","components/MainPage/BottomArea/axis.js","components/MainPage/BottomArea/line.js","components/MainPage/utils.js","components/MainPage/BottomArea/Data/Binary.jsx","components/MainPage/BottomArea/Data/BPSK.jsx","components/MainPage/BottomArea/Data/FSK.jsx","components/MainPage/BottomArea/Data/AWGN.jsx","components/MainPage/BottomArea/Data/ASK.jsx","components/MainPage/BottomArea/Data/CarrierWave.jsx","components/MainPage/BottomArea/BlockCard.jsx","components/MainPage/BottomArea/ExpandedBlockCard.jsx","components/MainPage/BottomArea/BottomArea.jsx","components/MainPage/SideBar/SideBarBlock.jsx","components/MainPage/ProjectArea/Block.jsx","components/MainPage/ProjectArea/ProjectArea.jsx","components/MainPage/Menu.jsx","components/MainPage/SideBar/SideBar.jsx","components/MainPage/App.jsx","components/LoginPage/LoginPage.jsx","registerServiceWorker.js","components/MainPage/reducer.js","initialState.js","index.js"],"names":["addBlockToProject","createAction","blockClicked","blocksToLink","moveBlock","deleteBlock","deleteLink","payload","block","links","filter","link","linked","data","render","type","pauseBlock","selectLink","updateBlockValue","updateBlockData","updateCurrentProject","updateDropDown","projectBlocksSelector","state","mainPage","present","projects","currentProject","blocks","linkedBlocksSelector","createSelector","_","props","map","find","id","getIndexOfBlockSelector","indexOf","sort","property","sortOrder","substr","a","b","result","dynamicSort","usePrevious","value","ref","useRef","useEffect","current","Axis","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderAxis","bind","assertThisInitialized","inherits","createClass","key","_this$props","scale","axis","tickValues","node","refs","axisFn","select","react_default","createElement","transform","React","Component","Line","xScale","yScale","length","fullData","new_data","forEach","item","index","push","x","y","createFullArray","path","line","curve","curveLinear","d","lineFunction","style","stroke","strokeWidth","fill","shiftArray","clonedData","clone","shift","createTimeArray","totalTime","createTimeArrayWithIndexes","time","Array","i","getScales","dimensions","blockName","resolution","amplitude","xLine","yLine","yAxis","_findMinMax","dataArray","maxX","minY","Number","MAX_SAFE_INTEGER","maxY","MIN_SAFE_INTEGER","minX","findMinMax","scaleLinear","domain","toFixed","range","width","height","valueToBinary","number","findLink","linkName","name","blockTypes","createDataArray","binaryArray","size","binaryAux","connect","clickedBlock","indexOfBlock","selectors","oldProps","binaryData","binary","_useState","useState","_useState2","slicedToArray","setData","requestRef","animate","paused","prevData","requestAnimationFrame","newData","cancelAnimationFrame","line_Line","axis_Axis","axisRight","_getData","_findLink","carrierAmplitude","carrierData","getData","position","focused","carrierFrequency","frequency","wt","Math","PI","sin","linkedBlocks","linkData","rnorm","angularFrequency","currentTime","BlockCard","containerWidth","expanded","Binary","CarrierWave","BPSK","FSK","ASK","AWGN","Dimensions","Transition","Slide_default","assign","direction","ExpandedBlockCard","open","handleClickOpen","setState","handleClose","onClickHandler","blockUpdated","updated","classes","haveProperties","isNil","showProperties","className","flex","Typography_default","color","display","alignItems","justifyContent","cursor","AspectRatio_default","onClick","Dialog_default","fullScreen","onClose","TransitionComponent","AppBar_default","appBar","Toolbar_default","IconButton_default","aria-label","Close_default","variant","Paper_default","react_flexbox_grid_lib","center","textAlign","paddingLeft","BottomArea_BlockCard","ExpandedBlockCardWithStyles","withStyles","iconStyle","top","actions","withWidth","blocksNum","ceil","getHeigth","renderBlockCards","Grid_default","priority","neededLinks","container","xs","sm","md","PlayArrow_default","event","Pause_default","align","marginTop","justify","BottomArea_ExpandedBlockCard","spacing","elevation","square","fontWeight","ID","random","toString","renderRequiredLinks","requiredLinks","console","log","paddingTop","gutterBottom","List_default","ListItem_default","ListItemText_default","primary","react","description","BASE_WIDTH","blockTotalHeight","blockTotalWidth","outputWidth","outputHeight","blockStyle","borderStyle","borderWidth","borderColor","backgroundColor","zIndex","blockStyleInput","maxWidth","blockStyleOutput","blockTopRow","OUTPUT","INPUT","Block","componentDidMount","calculateOffset","element","projectTabOffset","document","getElementsByClassName","getBoundingClientRect","offsetX","window","pageXOffset","left","offsetY","pageYOffset","getBounds","right","bottom","handleClick","anchorEl","currentTarget","handleDrag","e","ui","_this$props$block$pos","deltaPosition","deltaX","deltaY","linkBlocks","blocksToLinkArray","blocksToLinkArrayIsFull","includes","hasInput","renderLines","_this$props2","selectedLink","_this$state","linkPosition","x0","x1","y0","y1","linkBlock","react_lineto","renderLineToCursor","_this$props3","cursorPosition","_this$state2","isLinking","keysToShow","marginLeft","capitalize","sum","ChevronLeft_default","updateBlockOnClick","ChevronRight_default","blockId","inputOutputSize","inputOutputHeight","inputOutputWidth","blockWidth","blockHeight","_this$props4","bounds","getPosition","react_draggable_default","grid","onDrag","objectSpread","Info_default","fontSize","margin","Popover_default","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","SideBar_SideBarBlock","mouseClicked","blockPosition","_state$mainPage$prese","projectTabStyle","ProjectTab","renderBlocks","ProjectArea_Block","elementDimensions","projectArea","project","Tabs_default","Tab_default","label","ReactCursorPosition","ProjectArea_ProjectTab","root","flexGrow","menuButton","marginRight","Menu_default","Button_default","idCounter","drawerOpen","setDrawerOpen","ItemList","button","blocksList","component","subheader","ListSubheader_default","Hidden_default","smUp","Drawer_default","tabIndex","role","onKeyDown","xsDown","styles","theme","paper","padding","unit","palette","text","secondary","App","isAuthenticated","paddingRight","dist_default","keyEventName","KEYPRESS","keyValue","onKeyHandle","undo","CssBaseline_default","MainPage_Menu","MainPage_SideBar_SideBar","MainPage_ProjectArea_ProjectArea","smDown","MainPage_BottomArea_BottomArea","Redirect","to","AppWithStylesWithoutRouter","withRouter","dispatch","ActionCreators","LoginPage","validateForm","usuario","senha","handleChange","defineProperty","target","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","history","alert","stop","_x","apply","arguments","minHeight","Card_default","card","CardHeader_default","title","onSubmit","noValidate","autoComplete","CardContent_default","TextField_default","autoFocus","textField","onChange","margisn","CardActions_default","disabled","isLocalhost","mixins","gutters","paddingBottom","media","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","reducer","createReducer","user","0","totalBlocks","1","_createReducer","action","newBlock","sortBy","blockToReceiveData","blockToSendData","blockIndex","findBlockIndex","bl","splice","arrayIndex","findIndex","prop","_action$payload","projectBlocks","_action$payload2","p","undoable","limit","middleware","concat","toConsumableArray","getDefaultMiddleware","logger","store","configureStore","devTools","process","theme2","createMuiTheme","background","default","main","ReactDOM","es","core_styles","MainPage_App","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ed9ccc51.chunk.js","sourcesContent":["import * as consts from '../../constants'\r\nimport { createAction } from 'redux-starter-kit'\r\n\r\n\r\n\r\nexport const addBlockToProject = createAction('ADD_TO_PROJECT')\r\n\r\nexport const blockClicked = createAction('BLOCK_CLICKED')\r\n\r\nexport const blocksToLink = createAction('BLOCKS_TO_LINK')\r\n\r\nexport const moveBlock = createAction('MOVE_BLOCK')\r\n\r\nexport const deleteBlock = createAction('DELETE_BLOCK')\r\n\r\n// Quando um link é deletado, é necessário sempre apagar a data porque quando um\r\n// link é deletado o bloco num está com todos os links e não deve ter nenhuma\r\n// data\r\nexport const deleteLink = payload => {\r\n  payload.block.links = payload\r\n    .block\r\n    .links\r\n    .filter(link => link !== payload.link)\r\n  payload.block.linked = false\r\n  payload.block.data = []\r\n  payload.block.render = false\r\n  return { type: consts.DELETE_LINK, payload: payload }\r\n}\r\n\r\nexport const pauseBlock = createAction('PAUSE_BLOCK')\r\n\r\nexport const selectLink = createAction('SELECT_LINK')\r\n\r\nexport const updateBlockValue = createAction('UPDATE_BLOCK_VALUE')\r\n\r\nexport const updateBlockData = createAction('UPDATE_BLOCK_DATA')\r\n\r\nexport const updateCurrentProject = createAction('UPDATE_CURRENT_PROJECT')\r\n\r\nexport const updateDropDown = payload => ({ type: consts.UPDATE_DROPDOWN, payload })\r\n","export const ADD_TO_PROJECT = 'ADD_TO_PROJECT'\r\nexport const BLOCK_CLICKED = 'BLOCK_CLICKED'\r\nexport const BLOCK_LIST = 'BLOCK_LIST'\r\nexport const BLOCK_UPDATED = 'BLOCK_UPDATED'\r\nexport const BLOCKS_TO_LINK = 'BLOCKS_TO_LINK'\r\nexport const CREATE_LINK = 'CREATE_LINK'\r\nexport const DELETE_BLOCK = 'DELETE_BLOCK'\r\nexport const DELETE_LINK = 'DELETE_LINK'\r\nexport const LOGIN = 'LOGIN'\r\nexport const PAUSE_BLOCK = 'PAUSE_BLOCK'\r\nexport const SELECT_LINK = 'SELECT_LINK'\r\nexport const SET_BLOCK_VALUE = 'SET_BLOCK_VALUE'\r\nexport const TRACK_LOCATION = 'TRACK_LOCATION'\r\nexport const UPDATE_BLOCK = 'UPDATE_BLOCK'\r\nexport const UPDATE_CURRENT_PROJECT = 'UPDATE_CURRENT_PROJECT'\r\nexport const UPDATE_DATA = 'UPDATE_DATA'\r\nexport const UPDATE_DROPDOWN = 'UPDATE_DROPDOWN'\r\nexport const UPDATE_VALUE = 'UPDATE_VALUE'\r\n","import { createSelector } from 'reselect'\r\nimport _ from 'lodash'\r\n\r\nexport const allBlocksSelector = state => state.mainPage.blocks\r\n\r\nexport const clickedBlockSelector = state => state.mainPage.present.clickedBlock\r\n\r\nexport const projectBlocksSelector = state => state.mainPage.present.projects[state.mainPage.present.currentProject].blocks\r\n\r\nexport const linkedBlocksSelector = createSelector((_, props) => props.block, projectBlocksSelector, (block, blocks) => {\r\n  return block\r\n    .links\r\n    .map(link => _.find(blocks, block => block.id === link))\r\n})\r\n\r\nexport const getIndexOfBlockSelector = (state, props) => {\r\n  return state\r\n    .mainPage\r\n    .present\r\n    .projects[state.mainPage.present.currentProject]\r\n    .blocks\r\n    .indexOf(props.block)\r\n};\r\n\r\nexport const getPrioritySelector = createSelector(projectBlocksSelector, blocks => {\r\n  blocks.sort(dynamicSort('priority'))\r\n})\r\n\r\nfunction dynamicSort (property) {\r\n  var sortOrder = 1\r\n  if (property[0] === '-') {\r\n    sortOrder = -1\r\n    property = property.substr(1)\r\n  }\r\n  return function (a, b) {\r\n    var result = a[property] < b[property]\r\n      ? -1\r\n      : a[property] > b[property]\r\n        ? 1\r\n        : 0\r\n    return result * sortOrder\r\n  };\r\n}\r\n","import { useRef, useEffect } from 'react'\r\nconst usePrevious = value => {\r\n  const ref = useRef()\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n  return ref.current\r\n}\r\nexport default usePrevious","import React from \"react\";\r\nimport { select } from \"d3-selection\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Axis extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderAxis = this.renderAxis.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderAxis();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.renderAxis();\r\n  }\r\n\r\n  renderAxis() {\r\n    const { scale, axis, tickValues } = this.props;\r\n    const node = this.refs.axis;\r\n    const axisFn = axis(scale).tickValues(tickValues);\r\n    axisFn(select(node));\r\n  }\r\n\r\n  render() {\r\n    return <g ref=\"axis\" transform={this.props.transform} />;\r\n  }\r\n}\r\n\r\nAxis.propTypes = {\r\n  scale: PropTypes.func,\r\n  axis: PropTypes.func,\r\n  tickValues: PropTypes.array\r\n};\r\n","import React from \"react\";\r\nimport { line, curveLinear } from \"d3-shape\";\r\n//import simplify from 'simplify-js'\r\n\r\nexport const Line = props => {\r\n  const { xScale, yScale, data } = props;\r\n  //const stroke = \"#2196f3\";\r\n  const stroke = \"#00887a\";\r\n  //if there's no data return\r\n  if (!data.length) {\r\n    return null;\r\n  }\r\n  /**\r\n   * Create an xy array with the data to create the line path.\r\n   * @param  {Array} data Data of the block.\r\n   * @return {Array}      Return an xy array.\r\n   */\r\n  const createFullArray = data => {\r\n    let new_data = [];\r\n    data.forEach((item, index) => {\r\n      new_data.push({ x: index, y: item });\r\n    });\r\n    return new_data;\r\n  };\r\n  let fullData = createFullArray(data);\r\n\r\n  //Scale the data to fit the SVG\r\n  fullData.forEach(data => {\r\n    data.x = xScale(data.x);\r\n    data.y = yScale(data.y);\r\n  });\r\n\r\n  const lineFunction = line()\r\n    .curve(curveLinear)\r\n    .x(d => d.x)\r\n    .y(d => d.y);\r\n  //const path = lineFunction(simplify(data));\r\n  const path = lineFunction(fullData);\r\n\r\n  return <path d={path} style={{ stroke: stroke, strokeWidth: 3, fill: \"none\" }} />;\r\n};\r\n","import _ from 'lodash'\r\n// AWGN +rnorm();\r\nimport { scaleLinear } from 'd3-scale'\r\n/**\r\n * Find min and max.\r\n * @param  {Array} dataArray - x axis of array.\r\n * @param  {number} resolution - Total time of the function.\r\n * @return {Object}            Return the min and max.\r\n */\r\nexport const findMinMax = (dataArray, resolution) => {\r\n  let minX = 0\r\n\r\n  let maxX = resolution - 1\r\n\r\n  let minY = Number.MAX_SAFE_INTEGER\r\n\r\n  let maxY = Number.MIN_SAFE_INTEGER\r\n\r\n  _.map(dataArray, data => {\r\n    if (data < minY) {\r\n      minY = data\r\n    } else if (data > maxY) {\r\n      maxY = data\r\n    }\r\n  })\r\n  return { minX, maxX, minY, maxY }\r\n}\r\n\r\n/**\r\n * Shift the data array to make the movement.\r\n * @param  {Array} data The data on a certain time.\r\n * @return {Array}       The shifted data.\r\n */\r\nexport const shiftArray = data => {\r\n  const clonedData = _.clone(data)\r\n  let item = clonedData.shift()\r\n  clonedData.push(item)\r\n  return clonedData\r\n}\r\n\r\n/**\r\n * Create an array with the total time of the function to draw the xy coordinates.\r\n * @param  {number} totalTime Total time of the function.\r\n * @return {Array}            Return the array from 0 to totalTime-1.\r\n */\r\nexport const createTimeArray = totalTime => {\r\n  const totalTimeArray = createTimeArrayWithIndexes(totalTime)\r\n  return totalTimeArray.map(time => time / totalTime)\r\n}\r\n\r\nexport const createTimeArrayWithIndexes = totalTime => Array(totalTime).fill(null).map((x, i) => i)\r\n\r\n/**\r\n * getScales returns the x,y scale based on the data array to fit the graph.\r\n * @param  {Array} data       Array to scale the y-line.\r\n * @param  {Object} dimensions Has width and height properties.\r\n * @param  {Object} block      Object to set tickValues.\r\n * @param  {number} resolution Variable to scale the x-line.\r\n * @param  {number} [amplitude]  Variable to set tickValues.\r\n * @return {Object}            Return the scales.\r\n */\r\nexport const getScales = (data, dimensions, blockName, resolution, amplitude) => {\r\n  let scale = {\r\n    xLine: 0,\r\n    yLine: 0,\r\n    yAxis: 0,\r\n    tickValues: 0\r\n  }\r\n  let paddingxAxis = 30\r\n  let paddingyAxis = 20\r\n  const { minX, maxX, minY, maxY } = findMinMax(data, resolution)\r\n  scale.xLine = scaleLinear()\r\n    .domain([minX.toFixed(2), maxX.toFixed(2)])\r\n    .range([paddingxAxis, dimensions.width - paddingxAxis])\r\n\r\n  scale.yLine = scaleLinear()\r\n    .domain([minY.toFixed(2), maxY.toFixed(2)])\r\n    .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n\r\n  // Binary Block\r\n  if (blockName === 'Data') {\r\n    scale.yAxis = scaleLinear()\r\n      .domain([0, 1])\r\n      .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n    scale.tickValues = [-1, 0, 1]\r\n  } else {\r\n    scale.yAxis = scaleLinear()\r\n      .domain([-amplitude / 2, amplitude / 2])\r\n      .range([dimensions.height - paddingyAxis, paddingyAxis])\r\n    scale.tickValues = [-amplitude / 2, 0, amplitude / 2]\r\n  }\r\n  return scale\r\n}\r\n\r\n/**\r\n * The binary array uses -1 to 1 to match the BPSK equation, this change all -1\r\n * to 1.\r\n * @param  {Array} data The binary array.\r\n * @return {Array}      Return the array with 0 and 1.\r\n */\r\nexport const valueToBinary = data => {\r\n  return data.map(number => (number === 1 ? 1 : 0))\r\n}\r\n\r\nexport const findLink = (linkName, blocks, links) => {\r\n  return _.clone(\r\n    _.find(\r\n      blocks,\r\n      block => (block.id === links[0] || block.id === links[1]) && block.name === linkName\r\n    )\r\n  );\r\n};\r\n\r\nexport const blockTypes = {\r\n  DATA: 'Data',\r\n  CARRIER_WAVE: 'Carrier Wave',\r\n  BPSS: 'BPSK'\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { updateBlockData } from '../../actions'\r\nimport * as selectors from '../../selectors'\r\nimport usePrevious from '../../../../hooks/UsePrevious'\r\nimport { axisRight } from 'd3-axis'\r\nimport { Axis } from '../axis'\r\nimport { Line } from '../line'\r\nimport { shiftArray, getScales } from '../../utils'\r\n\r\nconst createDataArray = (resolution, binaryArray) => {\r\n  const totalTime = resolution\r\n  const size = totalTime / binaryArray.length\r\n  let index = 0\r\n  let binaryAux = []\r\n  binaryArray.forEach(item => {\r\n    for (let i = 0; i < size; i++) {\r\n      binaryAux[index++] = item\r\n    }\r\n  })\r\n  return binaryAux\r\n}\r\n\r\nconst BinaryData = props => {\r\n  const oldProps = usePrevious(props)\r\n  const { resolution, block, dimensions, updateBlockData } = props\r\n  const binaryData = createDataArray(resolution, block.binary)\r\n  const scale = getScales(binaryData, dimensions, block.name, resolution)\r\n\r\n  const [data, setData] = useState(binaryData)\r\n\r\n  const requestRef = useRef()\r\n\r\n  const animate = () => {\r\n    if (!block.paused) {\r\n      setData(prevData => shiftArray(prevData));\r\n    }\r\n    requestRef.current = requestAnimationFrame(animate)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (oldProps) {\r\n      const oldBinaryData = oldProps.block.binary\r\n      if (oldBinaryData !== block.binary) {\r\n        const newData = createDataArray(resolution, block.binary)\r\n        setData(newData)\r\n        updateBlockData({ id: block.id, data: newData })\r\n      }\r\n    }\r\n    else {\r\n      updateBlockData({ id: block.id, data: binaryData })\r\n    }\r\n    requestRef.current = requestAnimationFrame(animate)\r\n    return () => cancelAnimationFrame(requestRef.current)\r\n  }, [block.binary])\r\n\r\n  return <g>\r\n    <Line\r\n      xScale={scale.xLine}\r\n      yScale={scale.yLine}\r\n      data={data}\r\n    />\r\n    <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n  </g>\r\n}\r\nBinaryData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockData: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    clickedBlock: state.mainPage.present.clickedBlock,\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockData }\r\n)(BinaryData)\r\n","import { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport React, { useState, useRef, useEffect } from \"react\"\r\n\r\nimport { Axis } from \"../axis\"\r\nimport { axisRight } from \"d3-axis\"\r\nimport { updateBlockData } from \"../../actions\"\r\nimport { Line } from \"../line\"\r\nimport { shiftArray, getScales, findLink, blockTypes } from \"../../utils\"\r\n\r\nconst createDataArray = (binaryArray, carrierDataArray) => {\r\n  return carrierDataArray.map((carrierData, position) => carrierData * binaryArray[position] || 0)\r\n}\r\nconst getData = (blocks, links) => {\r\n  const binaryData = findLink(blockTypes.DATA, blocks, links).data\r\n  const { amplitude: carrierAmplitude, data: carrierData } = findLink(blockTypes.CARRIER_WAVE, blocks, links)\r\n  return { binaryData, carrierData, carrierAmplitude }\r\n}\r\n\r\nconst BPSKData = props => {\r\n  const { blocks, block, resolution, dimensions } = props\r\n  const { binaryData, carrierData, carrierAmplitude } = getData(blocks, block.links)\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  const scale = getScales(data, dimensions, block, resolution, carrierAmplitude)\r\n\r\n  const requestRef = useRef()\r\n\r\n  const animate = () => {\r\n    if (!block.paused) {\r\n      setData(prevData => shiftArray(prevData))\r\n    }\r\n    requestRef.current = requestAnimationFrame(animate)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const newData = createDataArray(binaryData, carrierData)\r\n    setData(newData)\r\n    updateBlockData({ id: block.id, data: newData })\r\n    requestRef.current = requestAnimationFrame(animate)\r\n    return () => cancelAnimationFrame(requestRef.current)\r\n  }, [carrierData])\r\n\r\n\r\n  return <g>\r\n    <Line\r\n      xScale={scale.xLine}\r\n      yScale={scale.yLine}\r\n      data={data}\r\n      focused={false}\r\n    />\r\n    <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n  </g>\r\n}\r\n\r\nBPSKData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockData: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockData }\r\n)(BPSKData)\r\n","import { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport React, { useState, useRef, useEffect } from \"react\"\r\n\r\nimport { Axis } from \"../axis\"\r\nimport { axisRight } from \"d3-axis\"\r\nimport { updateBlockData } from \"../../actions\"\r\nimport { Line } from \"../line\"\r\nimport { shiftArray, getScales, findLink, blockTypes, createTimeArray } from \"../../utils\"\r\n\r\nconst createDataArray = (binaryArray, carrierData, amplitude, frequency, totalTime) => {\r\n  const time = createTimeArray(totalTime)\r\n  return carrierData.map((data, index) => {\r\n    if (binaryArray[index] === 1) {\r\n      return data\r\n    }\r\n    else {\r\n      const angularFrequency = 2 * Math.PI * (frequency * 2)\r\n      const wt = angularFrequency * time[index]\r\n      return amplitude * Math.sin(wt)\r\n    }\r\n  })\r\n}\r\n\r\nconst getData = (blocks, links) => {\r\n  const binaryData = findLink(blockTypes.DATA, blocks, links).data\r\n  const { amplitude: carrierAmplitude, data: carrierData, frequency: carrierFrequency } = findLink(blockTypes.CARRIER_WAVE, blocks, links)\r\n  return { binaryData, carrierData, carrierAmplitude, carrierFrequency }\r\n}\r\nconst FSKData = props => {\r\n  const { blocks, block, resolution, dimensions } = props\r\n  const { binaryData, carrierData, carrierAmplitude, carrierFrequency } = getData(blocks, block.links)\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  const scale = getScales(data, dimensions, block, resolution, carrierAmplitude)\r\n\r\n  const requestRef = useRef()\r\n\r\n  const animate = () => {\r\n    if (!block.paused) {\r\n      setData(prevData => shiftArray(prevData))\r\n    }\r\n    requestRef.current = requestAnimationFrame(animate)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const newData = createDataArray(binaryData, carrierData, carrierAmplitude, carrierFrequency, resolution)\r\n    setData(newData)\r\n    updateBlockData({ id: block.id, data: newData })\r\n    requestRef.current = requestAnimationFrame(animate)\r\n    return () => cancelAnimationFrame(requestRef.current)\r\n  }, [carrierData])\r\n\r\n  return <g>\r\n    <Line\r\n      xScale={scale.xLine}\r\n      yScale={scale.yLine}\r\n      data={data}\r\n      focused={false}\r\n    />\r\n    <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n  </g>\r\n}\r\n\r\nFSKData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockData }\r\n)(FSKData)\r\n","import { Axis } from \"../axis\"\r\nimport { axisRight } from \"d3-axis\"\r\nimport { updateBlockData } from \"../../actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { Line } from \"../line\"\r\nimport { rnorm } from \"randgen\"\r\nimport { shiftArray, getScales } from \"../../utils\"\r\nimport PropTypes from \"prop-types\"\r\nimport React, { useRef, useState, useEffect } from \"react\"\r\nimport * as selectors from \"../../selectors\"\r\n\r\n\r\nconst createDataArray = data => data.map(item => item + rnorm())\r\n\r\nconst AWGNData = props => {\r\n  const { block, resolution, dimensions, linkedBlocks } = props\r\n  const linkData = linkedBlocks[0].data\r\n  const amplitude = linkData.amplitude || 1\r\n  const [data, setData] = useState([])\r\n  const scale = getScales(data, dimensions, block, resolution, amplitude)\r\n\r\n  const requestRef = useRef()\r\n\r\n  const animate = () => {\r\n    if (!block.paused) {\r\n      setData(prevData => shiftArray(prevData))\r\n    }\r\n    requestRef.current = requestAnimationFrame(animate)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const newData = createDataArray(linkData)\r\n    setData(newData)\r\n    updateBlockData({ id: block.id, data: newData })\r\n    requestRef.current = requestAnimationFrame(animate)\r\n    return () => cancelAnimationFrame(requestRef.current)\r\n  }, [linkData])\r\n\r\n  return <g>\r\n    <Line\r\n      xScale={scale.xLine}\r\n      yScale={scale.yLine}\r\n      data={data}\r\n    />\r\n    <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n  </g>\r\n}\r\n\r\nAWGNData.propTypes = {\r\n  block: PropTypes.object,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number,\r\n  updateBlockData: PropTypes.func\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n    linkedBlocks: selectors.linkedBlocksSelector(state, props),\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockData }\r\n)(AWGNData)\r\n","import { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState, useRef, useEffect } from \"react\"\r\n\r\nimport { Axis } from \"../axis\";\r\nimport { axisRight } from \"d3-axis\";\r\nimport { updateBlockData } from \"../../actions\";\r\nimport { Line } from \"../line\";\r\nimport { shiftArray, getScales, findLink, blockTypes } from \"../../utils\";\r\n\r\nconst createDataArray = (binaryArray, carrierData, amplitude) => {\r\n  return carrierData.map((value, index) => (binaryArray[index] === -1 ? value : value * (amplitude * 2)) || 0)\r\n}\r\n\r\nconst getData = (blocks, links) => {\r\n  const binaryData = findLink(blockTypes.DATA, blocks, links).data\r\n  const { amplitude: carrierAmplitude, data: carrierData } = findLink(blockTypes.CARRIER_WAVE, blocks, links)\r\n  return { binaryData, carrierData, carrierAmplitude }\r\n}\r\n\r\nconst ASKData = props => {\r\n  const { blocks, block, resolution, dimensions } = props\r\n  const { binaryData, carrierData, carrierAmplitude } = getData(blocks, block.links)\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  const scale = getScales(data, dimensions, block, resolution, carrierAmplitude)\r\n\r\n  const requestRef = useRef()\r\n\r\n  const animate = () => {\r\n    if (!block.paused) {\r\n      setData(prevData => shiftArray(prevData))\r\n    }\r\n    requestRef.current = requestAnimationFrame(animate)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const newData = createDataArray(binaryData, carrierData)\r\n    setData(newData)\r\n    updateBlockData({ id: block.id, data: newData })\r\n    requestRef.current = requestAnimationFrame(animate)\r\n    return () => cancelAnimationFrame(requestRef.current)\r\n  }, [carrierData])\r\n\r\n  return <g>\r\n    <Line\r\n      xScale={scale.xLine}\r\n      yScale={scale.yLine}\r\n      data={data}\r\n      focused={false}\r\n    />\r\n    <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n  </g>\r\n}\r\nASKData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockData: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: state.mainPage.present.projects[0].blocks,\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockData }\r\n)(ASKData);\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { updateBlockValue, updateBlockData } from '../../actions'\r\nimport * as selectors from '../../selectors'\r\n\r\nimport { axisRight } from 'd3-axis'\r\nimport { Axis } from '../axis'\r\nimport { Line } from '../line'\r\nimport { shiftArray, createTimeArray, getScales } from '../../utils'\r\n\r\nconst createDataArray = (totalTime, frequency, amplitude) => {\r\n  let time = createTimeArray(totalTime)\r\n  const angularFrequency = 2 * Math.PI * frequency\r\n  return time.map(currentTime => {\r\n    let wt = angularFrequency * currentTime\r\n    return amplitude * Math.sin(wt)\r\n  })\r\n}\r\n\r\nconst CarrierWaveData = props => {\r\n  const { resolution, block, dimensions, updateBlockData } = props\r\n  const { frequency, amplitude } = block\r\n  const [data, setData] = useState([])\r\n  const scale = getScales(data, dimensions, block.name, resolution, amplitude)\r\n  const requestRef = useRef()\r\n\r\n  const animate = () => {\r\n    if (!block.paused) {\r\n      setData(prevData => shiftArray(prevData));\r\n    }\r\n    requestRef.current = requestAnimationFrame(animate)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const newData = createDataArray(resolution, block.frequency, block.amplitude)\r\n    setData(newData)\r\n    updateBlockData({ id: block.id, data: newData })\r\n    requestRef.current = requestAnimationFrame(animate)\r\n    return () => cancelAnimationFrame(requestRef.current)\r\n  }, [frequency, amplitude])\r\n\r\n  return <g>\r\n    <Line\r\n      xScale={scale.xLine}\r\n      yScale={scale.yLine}\r\n      data={data}\r\n    />\r\n    <Axis axis={axisRight} tickValues={scale.tickValues} scale={scale.yAxis} />\r\n  </g>\r\n}\r\n\r\nCarrierWaveData.propTypes = {\r\n  block: PropTypes.object,\r\n  updateBlockValue: PropTypes.func,\r\n  dimensions: PropTypes.object,\r\n  resolution: PropTypes.number\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: selectors.projectBlocksSelector(state),\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateBlockValue, updateBlockData }\r\n)(CarrierWaveData)\r\n","import React from 'react'\r\nimport Dimensions from 'react-dimensions'\r\n\r\nimport BinaryData from './Data/Binary'\r\nimport BPSKData from './Data/BPSK'\r\nimport FSKData from './Data/FSK'\r\nimport AWGNData from './Data/AWGN'\r\nimport ASKData from './Data/ASK'\r\nimport CarrierWaveData from './Data/CarrierWave'\r\n\r\n\r\nclass BlockCard extends React.Component {\r\n  render() {\r\n    const { block } = this.props\r\n    let data\r\n    let width = this.props.containerWidth\r\n    let height = 164\r\n    const expandedHeight = 780\r\n    if (this.props.expanded) {\r\n      height = expandedHeight\r\n    }\r\n    if (block.name === 'Data') {\r\n      data = <BinaryData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.name === 'Carrier Wave') {\r\n      data = <CarrierWaveData dimensions={{ width, height }} resolution={1200} block={block} />\r\n    }\r\n    if (block.linked) {\r\n      if (block.name === 'BPSK') {\r\n        data = <BPSKData dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n      if (block.name === 'FSK') {\r\n        data = <FSKData dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n      if (block.name === 'ASK') {\r\n        data = <ASKData dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n      if (block.name === 'AWGN') {\r\n        data = <AWGNData dimensions={{ width, height }} resolution={1200} block={block} />\r\n      }\r\n    }\r\n\r\n    return (\r\n      <svg height={height} width={width}>\r\n        {data}\r\n      </svg>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dimensions()(BlockCard)\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport Slide from \"@material-ui/core/Slide\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio'\r\n\r\nimport { Col } from \"react-flexbox-grid\"\r\n\r\nimport _ from \"lodash\"\r\n\r\nimport BlockCard from \"./BlockCard\"\r\n\r\n//react redux\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"../actions\"\r\n\r\nconst styles = {\r\n  iconStyle: {\r\n    position: \"relative\",\r\n    top: \"6px\"\r\n  },\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  }\r\n}\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />\r\n}\r\n\r\nclass ExpandedBlockCard extends React.Component {\r\n  state = {\r\n    open: false\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false })\r\n  }\r\n  onClickHandler = (block, value, key) => {\r\n    this.props.updateBlockValue({ value, key, id: block.id })\r\n    this.props.blockUpdated({ block, updated: true })\r\n  }\r\n\r\n  render() {\r\n    const { classes, block } = this.props\r\n    let haveProperties = false\r\n    if (!_.isNil(block.frequency)) {\r\n      haveProperties = true\r\n    }\r\n    const showProperties = haveProperties ? (\r\n      <div className={classes.flex}>\r\n        <Typography color=\"inherit\">\r\n          {/* <Left onClick={(event,value)=> this.onClickHandler(block,block.frequency - 1,'frequency')} style={styles.iconStyle}/> */}\r\n          Frequency: {block.frequency}\r\n          {/* <Right onClick={(event,value)=> this.onClickHandler(block,block.frequency + 1,'frequency')} style={styles.iconStyle}/> */}\r\n        </Typography>\r\n        <Typography color=\"inherit\">\r\n          {/* <Left onClick={(event,value)=> this.onClickHandler(block,block.amplitude - 1,'amplitude')} style={styles.iconStyle}/> */}\r\n          Amplitude: {block.amplitude}\r\n          {/* <Right onClick={(event,value)=> this.onClickHandler(block,block.amplitude + 1,'amplitude')} style={styles.iconStyle}/> */}\r\n        </Typography>\r\n      </div>\r\n    ) : (\r\n        <div />\r\n      )\r\n    return (\r\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }}>\r\n        <AspectRatioIcon onClick={this.handleClickOpen} />\r\n        <Dialog\r\n          fullScreen\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          TransitionComponent={Transition}>\r\n          <AppBar className={classes.appBar} color=\"primary\">\r\n            <Toolbar>\r\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\r\n                {block.name}\r\n              </Typography>\r\n              {showProperties}\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Paper style={{ height: \"100%\" }}>\r\n            <Col center=\"xs\" style={{ height: \"90%\", textAlign: \"center\" }}>\r\n              <div style={{ height: \"5%\" }} />\r\n              <div style={{ height: \"100%\", paddingLeft: 16 }}>\r\n                <BlockCard block={block} key={block.id} expanded={true} />\r\n              </div>\r\n            </Col>\r\n          </Paper>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExpandedBlockCard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => {\r\n  return { amplitude: state.mainPage.present.amplitude }\r\n}\r\n\r\nlet ExpandedBlockCardWithStyles = withStyles(styles)(ExpandedBlockCard)\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(ExpandedBlockCardWithStyles)\r\n","import _ from 'lodash'\r\nimport { connect } from 'react-redux'\r\nimport { pauseBlock } from '../actions'\r\nimport BlockCard from './BlockCard'\r\nimport ExpandBlockCard from './ExpandedBlockCard'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport withWidth from '@material-ui/core/withWidth';\r\n\r\nimport * as selectors from '../selectors'\r\nlet style = {\r\n  height: 200\r\n}\r\n\r\nconst getHeigth = (width, blocksNum) => {\r\n  let style = { height: 200 }\r\n  if (blocksNum === 0) {\r\n    return style\r\n  }\r\n  if (width === 'xs') {\r\n    style = { height: blocksNum * 200 }\r\n  }\r\n  else if (width === 'sm') {\r\n    let rows = Math.ceil(blocksNum / 3)\r\n    style = { height: rows * 200 }\r\n  }\r\n  else {\r\n    let rows = Math.ceil(blocksNum / 4)\r\n    style = { height: rows * 200 }\r\n  }\r\n  return style\r\n}\r\n\r\nconst BottomArea = props => {\r\n  const blocksNum = _.filter(props.blocks, block => block.render).length\r\n  style = getHeigth(props.width, blocksNum)\r\n  // Se o total de links for diferente de 0 e o bloco não estiver linkado ele nao é renderizado\r\n  let renderBlockCards = _.map(props.blocks, block => {\r\n    if (!block.render) {\r\n      return\r\n    }\r\n    return (\r\n      <Grid priority={block.neededLinks} key={block.id} container item xs={12} sm={4} md={3}>\r\n        {/* Button 1 */}\r\n        <Grid xs={2} container item style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }}>\r\n          {block.paused ?\r\n            <PlayArrowIcon onClick={event => props.pauseBlock({ id: block.id })} /> :\r\n            <PauseIcon onClick={event => props.pauseBlock({ id: block.id })} />\r\n          }\r\n        </Grid>\r\n        <Grid xs={8} container item >\r\n          <Typography variant=\"subheading\" align=\"center\" style={{ marginTop: 5, width: '90%' }}>\r\n            <b>{block.name}</b>\r\n          </Typography>\r\n        </Grid>\r\n        {/* Button 2 */}\r\n        <Grid xs={2} container item justify=\"center\">\r\n          <ExpandBlockCard block={block} />\r\n        </Grid>\r\n        {/* BlockCard */}\r\n        <Grid style={{ height: 180, paddingLeft: 16 }} container item xs={12} spacing={16}>\r\n          <Grid xs={12} item>\r\n            <BlockCard block={block} key={block.id} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  })\r\n  return (\r\n    <Paper elevation={0} square={true} style={style}>\r\n      <Grid container>\r\n        {renderBlockCards}\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    blocks: selectors.projectBlocksSelector(state),\r\n  }\r\n}\r\n\r\nexport default withWidth()(connect(\r\n  mapStateToProps,\r\n  { pauseBlock }\r\n)(BottomArea))\r\n","import React, { Fragment } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport * as _ from 'lodash';\r\n//import Subheader from 'material-ui/Subheader';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { updateBlockValue, updateDropDown } from '../actions';\r\n//import {updateBlockValue} from '../SideBar/actions';\r\n\r\nconst style = {\r\n\tfontWeight: 'bold'\r\n};\r\nconst ID = () => {\r\n\treturn '_' + Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nconst SideBarBlock = (props) => {\r\n\tconst renderRequiredLinks = _.map(props.clickedBlock.requiredLinks, (link, index) => {\r\n\t\tconsole.log(link);\r\n\t\treturn link === 'None' ? (\r\n\t\t\t<Typography key={ID()}>{link}</Typography>\r\n\t\t) : (\r\n\t\t\t<Typography key={ID()}>{link} :</Typography>\r\n\t\t);\r\n\t});\r\n\treturn (\r\n\t\t<Paper elevation={0} square={true} key={props.clickedBlock.id} style={{ height: '100%', paddingTop: 16 }}>\r\n\t\t\t{_.isEmpty(props.clickedBlock) ? (\r\n\t\t\t\t<Typography variant=\"title\" gutterBottom align=\"center\">\r\n\t\t\t\t\tBlock Details\r\n\t\t\t\t</Typography>\r\n\t\t\t) : (\r\n\t\t\t\t<Typography variant=\"title\" gutterBottom align=\"center\">\r\n\t\t\t\t\t{props.clickedBlock.name}\r\n\t\t\t\t</Typography>\r\n\t\t\t)}\r\n\t\t\t<List>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tstyle={style}\r\n\t\t\t\t\t\tprimary={\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">{props.clickedBlock.description}</Typography>\r\n\t\t\t\t\t\t\t\t<p />\r\n\t\t\t\t\t\t\t\t{!_.isEmpty(props.clickedBlock) && (\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subheading\" gutterBottom align=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<b>Required Links</b>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{renderRequiredLinks}\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t{/* <ListItem>\r\n                    <ListItemText\r\n                      primary=\"Formula:\"\r\n                    />\r\n                </ListItem> */}\r\n\t\t\t</List>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tclickedBlock: state.mainPage.present.clickedBlock\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, { updateBlockValue, updateDropDown })(SideBarBlock);\r\n","import _ from 'lodash'\r\nimport { Line } from 'react-lineto'\r\nimport Draggable from 'react-draggable'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Left from '@material-ui/icons/ChevronLeft'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Fragment } from 'react'\r\nimport Right from '@material-ui/icons/ChevronRight'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport Popover from '@material-ui/core/Popover'\r\nimport withWidth from '@material-ui/core/withWidth'\r\n\r\nimport { valueToBinary } from '../utils'\r\nimport * as selectors from '../selectors'\r\n\r\n//redux\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions'\r\nimport SideBarBlock from '../SideBar/SideBarBlock'\r\n\r\nconst BASE_WIDTH = 160\r\nconst BASE_HEIGHT = 108\r\nconst INPUT_OUTPUT_MOBILE_HEIGHT = '10%'\r\nconst INPUT_OUTPUT_DESKTOP_HEIGHT = '100%'\r\n\r\nlet blockTotalHeight = BASE_HEIGHT\r\nlet blockTotalWidth = BASE_WIDTH\r\nconst outputWidth = blockTotalWidth * 0.1\r\nconst outputHeight = blockTotalHeight * 0.1\r\nconst blockStyle = {\r\n  borderStyle: 'solid',\r\n  borderWidth: '1px 1px 1px 1px',\r\n  borderColor: '#77a6f7',\r\n  backgroundColor: '#d3e3fc',\r\n  zIndex: 2,\r\n}\r\nconst blockStyleInput = {\r\n  cursor: 'pointer',\r\n  maxWidth: '100%',\r\n  backgroundColor: '#00887a'\r\n}\r\nconst blockStyleOutput = {\r\n  cursor: 'pointer',\r\n  maxWidth: '100%',\r\n  backgroundColor: '#77a6f7'\r\n}\r\nconst iconStyle = {\r\n  position: 'relative',\r\n  top: '7px',\r\n  cursor: 'pointer'\r\n}\r\n\r\nconst blockTopRow = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst OUTPUT = 195\r\nconst INPUT = 5\r\n\r\nclass Block extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      projectTabOffset: 0,\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n      mouseClicked: false,\r\n      position: INPUT,\r\n      blockPosition: props.block.position,\r\n      anchorEl: null\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    blockTotalWidth = this.props.width === 'xs' ? BASE_WIDTH : BASE_WIDTH + (this.props.block.neededLinks === 0 ? outputWidth : outputWidth * 2)\r\n    this.props.blockClicked(this.props.block)\r\n    this.calculateOffset('projectTab')\r\n  }\r\n\r\n  calculateOffset = (element) => {\r\n    let projectTabOffset = document.getElementsByClassName(element)[0].getBoundingClientRect()\r\n    let offsetX = window.pageXOffset + projectTabOffset.left\r\n    let offsetY = window.pageYOffset + projectTabOffset.top\r\n    this.setState({\r\n      projectTabOffset,\r\n      offsetX,\r\n      offsetY\r\n    })\r\n  }\r\n\r\n  getBounds = () => ({\r\n    left: 0,\r\n    top: 0,\r\n    right: this.state.projectTabOffset.width - blockTotalWidth,\r\n    bottom: this.state.projectTabOffset.height - blockTotalHeight\r\n  })\r\n\r\n  getPosition(bounds) {\r\n    let { position } = this.props.block\r\n    if (position.x > bounds.right) {\r\n      position.x = bounds.right\r\n    }\r\n    if (position.y > bounds.bottom) {\r\n      position.y = bounds.bottom\r\n    }\r\n    return position\r\n  }\r\n\r\n  handleClick = event => {\r\n    if (this.props.block !== this.props.clickedBlock) {\r\n      this.props.blockClicked(this.props.block)\r\n    }\r\n    if (this.props.width === 'xs' || this.props.width === 'sm') {\r\n      this.setState({\r\n        anchorEl: event.currentTarget,\r\n      })\r\n    }\r\n  }\r\n  handleClose = () => {\r\n    this.setState({\r\n      anchorEl: null,\r\n    })\r\n  }\r\n\r\n  handleDrag = (e, ui) => {\r\n    const { x, y } = this.props.block.position\r\n    const deltaPosition = {\r\n      x: x + ui.deltaX,\r\n      y: y + ui.deltaY\r\n    }\r\n    this.props.moveBlock({\r\n      value: deltaPosition,\r\n      block: this.props.block,\r\n      indexOfBlock: this.props.indexOfBlock\r\n    })\r\n  }\r\n\r\n  linkBlocks = (position) => {\r\n    const { blocksToLinkArray, block } = this.props\r\n    this.setState({ position })\r\n    //Can link only from the input to the output and cannot link fully linked blocks\r\n    //Need to check if a block is already fully linked but other block wants to link with\r\n    //it in the output\r\n    //Nao deixar linkar quando o bloco que voce quer linkar nao esta linkado e nao tem Data\r\n    if (\r\n      (position === OUTPUT && (blocksToLinkArray.length === 0 || block.data.length === 0)) ||\r\n      (block.links.length > block.neededLinks && block.neededLinks !== 0)\r\n    ) {\r\n      return\r\n    } else if (!this.blocksToLinkArrayIsFull() && !_.includes(blocksToLinkArray, this.props.block)) {\r\n      this.props.blocksToLink({ block })\r\n    }\r\n  }\r\n\r\n  hasInput = block => block.neededLinks ? block.neededLinks > 0 : false\r\n\r\n  blocksToLinkArrayIsFull = () => this.props.blocksToLinkArray.length >= 2\r\n\r\n  renderLines = () => {\r\n    let { selectLink, block, projects, selectedLink, currentProject, width } = this.props\r\n    let { offsetX, offsetY } = this.state\r\n\r\n    if (block.neededLinks === 0) {\r\n      return null\r\n    }\r\n    return block.links.map((linkPosition) => {\r\n      let linkBlock = _.find(projects[currentProject].blocks, (block) => block.id === linkPosition)\r\n      let borderStyle = 'solid'\r\n      if (selectedLink.id === block.id && selectedLink.linkPosition === linkPosition) {\r\n        borderStyle = 'dashed'\r\n      }\r\n      let x0, x1, y0, y1\r\n      // No mobile input e output são invertidos\r\n      if (width === 'xs') {\r\n        x0 = block.position.x + blockTotalWidth / 2 + offsetX\r\n        y0 = block.position.y + offsetY + outputHeight / 2\r\n        x1 = linkBlock.position.x + blockTotalWidth / 2 + offsetX\r\n        y1 = linkBlock.position.y + offsetY + blockTotalHeight - outputHeight / 2\r\n      }\r\n      else {\r\n        x0 = block.position.x + 8 + offsetX\r\n        y0 = block.position.y + blockTotalHeight / 2 + offsetY\r\n        x1 = linkBlock.position.x + offsetX + blockTotalWidth + outputWidth / 2\r\n        y1 = linkBlock.position.y + blockTotalHeight / 2 + offsetY\r\n      }\r\n\r\n      return (\r\n        <div key={linkPosition} onClick={(event) => selectLink({ id: block.id, linkPosition })}>\r\n          <Line\r\n            borderWidth={3}\r\n            borderStyle={borderStyle}\r\n            borderColor=\"black\"\r\n            zIndex={1}\r\n            x0={x0}\r\n            y0={y0}\r\n            x1={x1}\r\n            y1={y1}\r\n          />\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderLineToCursor = (position) => {\r\n    let { block, cursorPosition } = this.props\r\n    let { offsetX, offsetY } = this.state\r\n    //render line only when the block is not fully linked and is not already linking\r\n    if (this.isLinking(block)) {\r\n      return (\r\n        <Line\r\n          borderWidth={3}\r\n          borderStyle=\"solid\"\r\n          borderColor=\"black\"\r\n          zIndex={1}\r\n          x0={block.position.x + position + offsetX}\r\n          y0={block.position.y + blockTotalHeight / 2 + offsetY}\r\n          x1={cursorPosition.x + offsetX}\r\n          y1={cursorPosition.y + offsetY}\r\n        />\r\n      )\r\n    } else return null\r\n  }\r\n\r\n  isLinking = (block) => _.includes(this.props.blocksToLinkArray, block)\r\n\r\n  showProperties = (block) => {\r\n    return _.map(block.keysToShow, key => {\r\n      const value = block[key]\r\n      if (key === 'binary') {\r\n        return (\r\n          <Typography key={key} variant=\"body1\" style={{ marginLeft: 4 }}>\r\n            <b>{_.capitalize(key)}:</b>\r\n            {valueToBinary(value)}\r\n          </Typography>\r\n        )\r\n      }\r\n      const sum = key === 'frequency' ? 6 : 1\r\n      return (\r\n        <Typography key={key} variant=\"body1\" style={{ marginLeft: 4 }}>\r\n          <b>{_.capitalize(key)}:</b>\r\n          <Left\r\n            onClick={() => this.updateBlockOnClick(this.props.block[key] - sum, key)}\r\n            style={iconStyle}\r\n          />\r\n          {value}\r\n          <Right\r\n            onClick={() => this.updateBlockOnClick(this.props.block[key] + sum, key)}\r\n            style={iconStyle}\r\n          />\r\n        </Typography>\r\n      )\r\n    })\r\n  }\r\n\r\n  updateBlockOnClick = (value, key) => {\r\n    this.props.updateBlockValue({\r\n      value,\r\n      key,\r\n      blockId: this.props.block.id\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    const { block, width } = this.props\r\n    const bounds = this.getBounds()\r\n    const position = this.getPosition(bounds)\r\n\r\n    let direction, inputOutputSize, inputOutputHeight, inputOutputWidth, blockWidth, blockHeight\r\n    if (width === 'xs') {\r\n      blockTotalWidth = BASE_WIDTH\r\n      direction = 'row'\r\n      inputOutputSize = 12\r\n      blockWidth = 12\r\n      inputOutputHeight = { height: '10%' }\r\n      blockHeight = this.hasInput(block) ? '80%' : '100%'\r\n      inputOutputWidth = 3\r\n    }\r\n    else {\r\n      blockTotalWidth = BASE_WIDTH + (outputWidth * 2)\r\n      direction = 'column'\r\n      blockWidth = 10\r\n      inputOutputSize = 1\r\n      inputOutputHeight = { height: '100%' }\r\n      blockHeight = '100%'\r\n      inputOutputWidth = 4\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Draggable\r\n          grid={[10, 10]}\r\n          bounds={bounds}\r\n          onDrag={this.handleDrag}\r\n          // onStop={this.handleStop}\r\n          position={position}\r\n        >\r\n          <Grid\r\n            container\r\n            style={{ height: blockTotalHeight, width: blockTotalWidth, position: 'absolute', zIndex: 2 }}\r\n          >\r\n            {this.hasInput(block) && (\r\n              // INPUT\r\n              <Grid item container direction={direction} xs={inputOutputSize} style={inputOutputHeight} justify='center'>\r\n                <Grid\r\n                  item\r\n                  xs={inputOutputWidth}\r\n                  style={blockStyleInput}\r\n                  onClick={() => this.linkBlocks(INPUT)}\r\n                />\r\n              </Grid>\r\n            )}\r\n            {/* NAME AND PROPERTIES */}\r\n            <Grid item container xs={blockWidth} style={{ ...blockStyle, height: blockHeight }} direction='row'>\r\n              {/* BLOCK INFO */}\r\n              <Grid item container xs={12} style={{ height: '30%' }}>\r\n                <Grid item xs={2} style={blockTopRow}>\r\n                  <InfoIcon style={{ fontSize: 'larger', cursor: 'pointer' }} onClick={this.handleClick} />\r\n                </Grid>\r\n                <Grid item xs={8} style={blockTopRow}>\r\n                  <Typography variant=\"subheading\" gutterBottom align=\"center\" style={{ margin: '0px' }}>\r\n                    <b>{block.name}</b>\r\n                  </Typography>\r\n                </Grid>\r\n                {/* DELETE THE BLOCK */}\r\n                <Grid item xs={2} style={blockTopRow}>\r\n                  <CloseIcon style={{ fontSize: 'larger', cursor: 'pointer' }} onClick={() => this.props.deleteBlock({ block })} />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container xs={12} style={{ height: '70%' }}>\r\n                {/* BLOCK PROPERTIES */}\r\n                {this.showProperties(block)}\r\n              </Grid>\r\n            </Grid>\r\n            {/* OUTPUT */}\r\n            <Grid item container direction={direction} xs={inputOutputSize} style={inputOutputHeight} justify='center'>\r\n              <Grid\r\n                item\r\n                xs={inputOutputWidth}\r\n                style={blockStyleOutput}\r\n                onClick={() => this.linkBlocks(OUTPUT)}\r\n              />\r\n            </Grid>\r\n            <Popover\r\n              id=\"simple-popper\"\r\n              open={Boolean(this.state.anchorEl)}\r\n              anchorEl={this.state.anchorEl}\r\n              onClose={this.handleClose}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n              }}\r\n            >\r\n              <SideBarBlock />\r\n            </Popover>\r\n          </Grid>\r\n\r\n        </Draggable>\r\n        {!_.isNil(block.links) ? this.renderLines() : []}\r\n        {this.renderLineToCursor(this.state.position)}\r\n      </Fragment >\r\n    )\r\n  }\r\n}\r\n\r\nBlock.propTypes = {\r\n  selectLink: PropTypes.func.isRequired,\r\n  blockClicked: PropTypes.func.isRequired,\r\n  block: PropTypes.object.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  blocksToLink: PropTypes.func.isRequired,\r\n  blocksToLinkArray: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { clickedBlock, projects, selectedLink, currentProject, blocksToLinkArray } = state.mainPage.present\r\n\r\n  return {\r\n    clickedBlock,\r\n    projects,\r\n    selectedLink,\r\n    currentProject,\r\n    blocksToLinkArray,\r\n    linkedBlocks: selectors.linkedBlocksSelector(state, props),\r\n    indexOfBlock: selectors.getIndexOfBlockSelector(state, props)\r\n  }\r\n}\r\n\r\nexport default withWidth()(connect(mapStateToProps, actions)(Block))\r\n","import React, { Fragment } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport _ from \"lodash\";\r\nimport ReactCursorPosition from \"react-cursor-position\";\r\n\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport { updateCurrentProject } from \"../actions\";\r\nimport Block from \"./Block\";\r\n\r\nconst ProjectArea = props => {\r\n  return (\r\n    <Fragment>\r\n      <AppBar elevation={1} square={true} position=\"static\">\r\n        <Tabs value={0}>\r\n          <Tab label={props.project.name} key={props.project.id} value={props.project.id} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <ReactCursorPosition>\r\n        <ProjectTab key=\"0\" blocks={props.project.blocks} />\r\n      </ReactCursorPosition>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst projectTabStyle = {\r\n  height: 600,\r\n  zIndex: -10\r\n};\r\n\r\nconst ProjectTab = props => {\r\n  const renderBlocks = _.map(props.blocks, block => {\r\n    return (\r\n      <Block\r\n        cursorPosition={props.position}\r\n        key={block.id}\r\n        block={block}\r\n        dimensions={props.elementDimensions}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <Paper square={true} elevation={0} className=\"projectTab\" style={projectTabStyle}>\r\n      {renderBlocks}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //projects : projectsSelector(state)\r\n    project: state.mainPage.present.projects[0]\r\n  };\r\n};\r\nconst projectArea = connect(\r\n  mapStateToProps,\r\n  { updateCurrentProject }\r\n)(ProjectArea);\r\nexport default projectArea;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  flex: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nfunction Menu(props) {\r\n  const { classes } = props;\r\n  return (\r\n    //<div className={classes.root}>\r\n      <AppBar elevation={0} square={true} position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\r\n            TCC\r\n          </Typography>\r\n          <Button color=\"inherit\">Lucas</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    //\t</div>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Menu);\r\n","import React, { Fragment, useState } from \"react\";\r\n\r\n//Material\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport _ from \"lodash\";\r\n\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { addBlockToProject } from \"../actions\";\r\n\r\nconst SideBar = props => {\r\n  const [drawerOpen, setDrawerOpen] = useState(false)\r\n  const onClickHandler = block => {\r\n    props.addBlockToProject({ block, idCounter: props.idCounter });\r\n  };\r\n\r\n  //Cria a lista de items\r\n  const ItemList = _.map(props.blocks, block => {\r\n    return (\r\n      <ListItem key={block.name} button onClick={() => onClickHandler(block)}>\r\n        <ListItemText primary={block.name} />\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  const blocksList =\r\n    <List component=\"nav\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" style={{ position: \"inherit\" }}>\r\n          Blocks\r\n        </ListSubheader>}>\r\n      {ItemList}\r\n    </List>\r\n\r\n  return (\r\n    <Fragment>\r\n      <Hidden smUp>\r\n        <Button onClick={() => setDrawerOpen(true)}>New Block</Button>\r\n        <Drawer open={drawerOpen} onClose={() => setDrawerOpen(false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => setDrawerOpen(false)}\r\n            onKeyDown={() => setDrawerOpen(false)}\r\n          >\r\n            <div style={{ width: 250 }}>\r\n              {blocksList}\r\n            </div>\r\n          </div>\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden xsDown>\r\n        <Paper elevation={0} square={true} style={{ height: \"100%\" }}>\r\n          {blocksList}\r\n        </Paper>\r\n      </Hidden>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    blocks: state.mainPage.present.blocks,\r\n    idCounter: state.mainPage.present.idCounter\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addBlockToProject }\r\n)(SideBar);\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\n// Imports dos components do projeto\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomArea from './BottomArea/BottomArea';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProjectArea from './ProjectArea/ProjectArea';\r\nimport _ from 'lodash';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Menu from './Menu';\r\nimport SideBar from './SideBar/SideBar';\r\nimport SideBarBlock from './SideBar/SideBarBlock';\r\n\r\nimport * as selectors from './selectors';\r\nimport { deleteLink, deleteBlock } from './actions';\r\nimport KeyHandler, { KEYPRESS } from 'react-key-handler';\r\n\r\nimport { ActionCreators } from 'redux-undo';\r\nimport { connect } from 'react-redux';\r\n// import { createDb } from 'C:/Users/Lucas/Documents/GitHub/tcc/src/firebase.js';\r\nconst styles = (theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: theme.spacing.unit * 2,\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: theme.palette.text.secondary\r\n\t}\r\n});\r\n// createDb();\r\nconst App = (props) => {\r\n\tif (props.isAuthenticated) {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tpaddingRight: 16,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<KeyHandler\r\n\t\t\t\t\tkeyEventName={KEYPRESS}\r\n\t\t\t\t\tkeyValue=\"q\"\r\n\t\t\t\t\tonKeyHandle={() => props.deleteBlock(props.clickedBlock)}\r\n\t\t\t\t/>\r\n\t\t\t\t<KeyHandler\r\n\t\t\t\t\tkeyEventName={KEYPRESS}\r\n\t\t\t\t\tkeyValue=\"x\"\r\n\t\t\t\t\tonKeyHandle={() =>\r\n\t\t\t\t\t\tprops.deleteLink({\r\n\t\t\t\t\t\t\tblock: _.find(props.blocks, (block) => block.id === props.selectedLink.id),\r\n\t\t\t\t\t\t\tlink: props.selectedLink.linkPosition\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<KeyHandler keyEventName={KEYPRESS} keyValue=\"z\" onKeyHandle={() => props.undo()} />\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Grid container justify=\"flex-end\" spacing={16}>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs item>\r\n\t\t\t\t\t\t\t<Menu />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs={12} sm={3} md={2} item>\r\n\t\t\t\t\t\t\t<SideBar />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid xs={12} sm={9} md={8} item>\r\n\t\t\t\t\t\t\t<ProjectArea />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Hidden smDown>\r\n\t\t\t\t\t\t\t<Grid md={2} item>\r\n\t\t\t\t\t\t\t\t<SideBarBlock />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Hidden>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid container item xs={12} spacing={16}>\r\n\t\t\t\t\t\t<Grid xs={12} item style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t<Typography variant=\"title\" color=\"inherit\">\r\n\t\t\t\t\t\t\t\tBlock Graphs\r\n          \t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid xs={12} item>\r\n\t\t\t\t\t\t\t<BottomArea />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <Redirect to=\"/\" />;\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tdeleteLink: (payload) => {\r\n\t\t\tdispatch(deleteLink(payload));\r\n\t\t},\r\n\t\tdeleteBlock: (clickedBlock) => {\r\n\t\t\tdispatch(deleteBlock(clickedBlock));\r\n\t\t},\r\n\t\tundo: () => {\r\n\t\t\tdispatch(ActionCreators.undo());\r\n\t\t}\r\n\t};\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuthenticated: state.mainPage.present.isAuthenticated,\r\n\t\tclickedBlock: state.mainPage.present.clickedBlock,\r\n\t\tselectedLink: state.mainPage.present.selectedLink,\r\n\t\tblocks: selectors.projectBlocksSelector(state)\r\n\t};\r\n};\r\n\r\nconst AppWithStyles = withRouter(withStyles(styles)(App));\r\nconst AppWithStylesWithoutRouter = withStyles(styles)(App);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppWithStylesWithoutRouter);\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\n// import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\n// import firebase from 'firebase'\r\n\r\nconst styles = theme => ({\r\n  // textField: {   marginLeft: theme.spacing.unit,   marginRight:\r\n  // theme.spacing.unit,   width: 200 },\r\n  root: {\r\n    ...theme\r\n      .mixins\r\n      .gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    height: 200,\r\n    textAlign: \"center\"\r\n  },\r\n  // card: {   maxWidth: 345 },\r\n  media: {\r\n    height: 140\r\n  }\r\n});\r\n\r\n// const uiConfig = {\r\n//   // Popup signin flow rather than redirect flow.\r\n//   signInFlow: 'popup',\r\n//   signInSuccessUrl: '/Home',\r\n//   // We will display Google and Facebook as auth providers.\r\n//   // signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID, firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID]\r\n// }\r\nclass LoginPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usuario: \"\",\r\n      senha: \"\"\r\n    };\r\n  }\r\n\r\n  validateForm = () => this.state.usuario.length > 0 && this.state.senha.length > 0;\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if (this.state.usuario === \"admin\" && this.state.senha === \"admin\") {\r\n      this\r\n        .props\r\n        .history\r\n        .push(\"/Home\");\r\n    } else {\r\n      alert(\"Usuário ou senha inválidos.\");\r\n    }\r\n    // try {   await Auth.signIn(this.state.usuario, this.state.password);\r\n    // alert(\"Logged in\"); } catch (e) {   alert(e.message); }\r\n  };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div>\r\n        <CssBaseline/>\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{\r\n          minHeight: \"100vh\"\r\n        }}>\r\n          <Grid item xs={3} justify=\"center\">\r\n            <Card\r\n              style={{\r\n              textAlign: \"center\"\r\n            }}\r\n              className={classes.card}>\r\n              <CardHeader title=\"Login\"/>\r\n              <form\r\n                onSubmit={this.handleSubmit}\r\n                className={classes.container}\r\n                noValidate\r\n                autoComplete=\"off\">\r\n                <CardContent>\r\n                  <TextField\r\n                    autoFocus\r\n                    id=\"usuario\"\r\n                    label=\"Usuário\"\r\n                    className={classes.textField}\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                    margin=\"normal\"/>\r\n                  <div/>\r\n                  <TextField\r\n                    id=\"senha\"\r\n                    label=\"Senha\"\r\n                    className={classes.textField}\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={this.handleChange}\r\n                    margisn=\"normal\"/>\r\n                    {/* <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/> */}\r\n                </CardContent>\r\n                <CardActions\r\n                  style={{\r\n                  justifyContent: \"center\"\r\n                }}>\r\n                  <Button type=\"submit\" disabled={!this.validateForm()} // component={Link} }} // to=\"/Home\"\r\n                    variant=\"contained\" color=\"primary\"  className={classes.button}>\r\n                    Login\r\n                  </Button>\r\n                </CardActions>\r\n              </form>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      ); } } LoginPage.propTypes = {classes : PropTypes.object.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(LoginPage));","// In production, we register a service worker to serve assets from local cache.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background. To learn more about the\r\n// benefits of this model, read https://goo.gl/KwvDNy. This link also includes\r\n// instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n// [::1] is the IPv6 localhost address.\r\nwindow.location.hostname === '[::1]' ||\r\n// 127.0.0.1/8 is considered localhost for IPv4.\r\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin from\r\n      // what our page is served on. This might happen if a CDN is used to serve\r\n      // assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl)\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or\r\n        // not.\r\n        checkValidServiceWorker(swUrl)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator\r\n    .serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and the fresh content\r\n              // will have been added to the cache. It's the perfect time to display a \"New\r\n              // content is available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.')\r\n            } else {\r\n              // At this point, everything has been precached. It's the perfect time to\r\n              // display a \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  // eslint-disable-next-line no-undef\r\n  fetch(swUrl).then(response => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator\r\n        .serviceWorker\r\n        .ready\r\n        .then(registration => {\r\n          registration\r\n            .unregister()\r\n            .then(() => {\r\n              window\r\n                .location\r\n                .reload()\r\n            })\r\n        })\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl)\r\n    }\r\n  }).catch(() => {\r\n    console.log('No internet connection found. App is running in offline mode.')\r\n  })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator\r\n      .serviceWorker\r\n      .ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport * as consts from '../../constants';\r\nimport update from 'immutability-helper';\r\n\r\nimport { initialState } from '../../initialState';\r\nimport { createReducer } from 'redux-starter-kit';\r\n\r\nimport * as actions from './actions';\r\nimport _ from 'lodash';\r\n\r\nconst reducer = createReducer(initialState, {\r\n\t// ADICIONA BLOCO AO PROJETO\r\n\t[actions.addBlockToProject]: (state, action) => {\r\n\t\tconst newBlock = _.clone(action.payload.block);\r\n\t\tnewBlock['id'] = state.idCounter++;\r\n\t\tstate.projects[state.currentProject].blocks.push(newBlock);\r\n\t\tstate.projects[state.currentProject].blocks = _.sortBy(state.projects[state.currentProject].blocks, ['priority'])\r\n\t},\r\n\t// ATUALIZA O BLOCO CLICADO\r\n\t[actions.blockClicked]: (state, action) => {\r\n\t\tstate.clickedBlock = action.payload;\r\n\t},\r\n\t// ATUALIZA O ARRAY DE BLOCOS QUE VAO SER LINKADOS\r\n\t[actions.blocksToLink]: (state, action) => {\r\n\t\tstate.blocksToLinkArray.push(action.payload.block);\r\n\t\t// Se o usuário fez o link entre os 2 blocos(clicou na saída e na entrada), adiciona o link no objeto\r\n\t\tif (state.blocksToLinkArray.length === 2) {\r\n\t\t\tconst blockToReceiveData = state.blocksToLinkArray[0];\r\n\t\t\tconst blockToSendData = state.blocksToLinkArray[1];\r\n\t\t\tlet block = _.find(state.projects[state.currentProject].blocks, { 'id': blockToReceiveData.id })\r\n\t\t\tblock.links.push(blockToSendData.id);\r\n\t\t\t// Checa se o bloco tem links suficientes para mostrar os dados\r\n\t\t\tif (block.links.length >= block.neededLinks) {\r\n\t\t\t\tblock.linked = true;\r\n\t\t\t\tblock.render = true;\r\n\t\t\t}\r\n\t\t\t// Limpa os blocos que estão sendo linkados\r\n\t\t\tstate.blocksToLinkArray = [];\r\n\t\t}\r\n\t},\r\n\t// DELETA O BLOCO DO PROJETO\r\n\t[actions.deleteBlock]: (state, action) => {\r\n\t\tconst block = action.payload.block;\r\n\t\tconst blockIndex = findBlockIndex(state.projects[state.currentProject].blocks, block);\r\n\t\t// Deleta os links e dados de todos os blocos que estão linkados com o bloco deletado \r\n\t\t// Ex: Se um bloco AWGN está linkado a um bloco BPSK e o bloco BPSK é deletado, o link e os dados do AWGN\r\n\t\t// devem ser deletados\r\n\t\tstate.projects[state.currentProject].blocks.map((bl) => {\r\n\t\t\tbl.links = bl.links.filter((link) => link !== block.id);\r\n\t\t\tif (bl.links.length < bl.neededLinks) {\r\n\t\t\t\tbl.linked = false;\r\n\t\t\t\tbl.data = [];\r\n\t\t\t\tbl.render = false;\r\n\t\t\t}\r\n\t\t\treturn bl;\r\n\t\t});\r\n\t\tstate.projects[state.currentProject].blocks.splice(blockIndex, 1);\r\n\t},\r\n\t// DELETA UM LINK DO BLOCO\r\n\t[actions.deleteLink]: (state, action) => {\r\n\t\tconst newBlock = _.clone(action.payload.block);\r\n\t\tnewBlock.links = newBlock.links.filter((link) => link !== action.payload.link);\r\n\t\tnewBlock.linked = false;\r\n\t\tnewBlock.data = [];\r\n\t\tnewBlock.render = false;\r\n\t\tconst arrayIndex = state.projects[state.currentProject].blocks.findIndex(\r\n\t\t\t(prop) => prop.id === action.payload.block.id\r\n\t\t);\r\n\t\tstate.projects[state.currentProject].blocks[arrayIndex] = newBlock;\r\n\t},\r\n\t// MOVE O BLOCO NA TELA\r\n\t[actions.moveBlock]: (state, action) => {\r\n\t\tstate.projects[state.currentProject].blocks[action.payload.indexOfBlock].position = action.payload.value;\r\n\t},\r\n\t// PAUSA O GRÁFICO DO BLOCO\r\n\t[actions.pauseBlock]: (state, action) => {\r\n\t\tconst blockId = action.payload.id\r\n\t\tlet block = _.find(state.projects[state.currentProject].blocks, { 'id': blockId })\r\n\t\tblock['paused'] = !block.paused;\r\n\t},\r\n\t// ATUALIZA O LINK ATUALMENTE SELECIONADO, PARA PODER DELETA-LO\r\n\t[actions.selectLink]: (state, action) => {\r\n\t\tstate.selectedLink = action.payload;\r\n\t},\r\n\t// ATUALIZA UMA PROPRIEDADE DO BLOCO\r\n\t[actions.updateBlockValue]: (state, action) => {\r\n\t\tconst { blockId, key, value } = action.payload;\r\n\t\tconst projectBlocks = state.projects[state.currentProject].blocks;\r\n\t\tlet blockToUpdate = _.find(projectBlocks, { 'id': blockId })\r\n\t\tblockToUpdate[key] = value;\r\n\t},\r\n\t[actions.updateBlockData]: (state, action) => {\r\n\t\tconst { id, data } = action.payload;\r\n\t\tconst projectBlocks = state.projects[state.currentProject].blocks;\r\n\t\tlet blockToUpdate = _.find(projectBlocks, { 'id': id })\r\n\t\tblockToUpdate.data = data\r\n\t},\r\n\t// ATUALIZA O PROJETO,\r\n\t[actions.updateCurrentProject]: (state, action) => {\r\n\t\tstate.currentProject = action.payload;\r\n\t\tstate.clickedBlock = {};\r\n\t}\r\n});\r\n\r\nconst findBlockIndex = (blocks, block) => blocks.findIndex((p) => p.id === block.id);\r\n\r\nexport default reducer;\r\n","export const initialState = {\r\n\tisAuthenticated: true,\r\n\tuser: 'Lucas',\r\n\tcurrentProject: 0,\r\n\tidCounter: 0,\r\n\tselectedLink: {\r\n\t\tid: 2,\r\n\t\tlinkPosition: 0\r\n\t},\r\n\tamplitude: 3,\r\n\tblocksToLinkArray: [],\r\n\tclickedBlock: {\r\n\t\t// id: 2,\r\n\t\t// name: 'BPSK',\r\n\t\t// links: [],\r\n\t\t// type: 'bpsk',\r\n\t\t// position: {\r\n\t\t// \tx: 200,\r\n\t\t// \ty: 120\r\n\t\t// },\r\n\t\t// paused: false,\r\n\t\t// linked: true,\r\n\t\t// updated: false,\r\n\t\t// neededLinks: 2,\r\n\t\t// data: [],\r\n\t\t// requiredLinks: [ 'Data', 'Carrier Wave' ],\r\n\t\t// description:\r\n\t\t// \t'Binary Phase Shift Keying (BPSK) is a two phase modulation scheme, where the 0’s' +\r\n\t\t// \t' and 1’s in a binary message are represented by two different phase states in th' +\r\n\t\t// \t'e carrier signal: θ=0° for binary 1 and θ=180° for binary 0.'\r\n\t},\r\n\tprojects: {\r\n\t\t0: {\r\n\t\t\tid: 0,\r\n\t\t\tname: 'Project 1',\r\n\t\t\ttotalBlocks: 0,\r\n\t\t\tblocks: []\r\n\t\t},\r\n\t\t1: {\r\n\t\t\tid: 1,\r\n\t\t\tname: 'Project 2',\r\n\t\t\ttotalBlocks: 1,\r\n\t\t\tblocks: {\r\n\t\t\t\t1: {\r\n\t\t\t\t\tid: 1,\r\n\t\t\t\t\tname: 'Carrier Wave',\r\n\t\t\t\t\tfrequency: 4,\r\n\t\t\t\t\tamplitude: 4,\r\n\t\t\t\t\ttype: 'sine',\r\n\t\t\t\t\tposition: {\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 300\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpaused: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tblocks: [\r\n\t\t{\r\n\t\t\tbinary: [1, 1, 1, -1, 1, -1],\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'Data',\r\n\t\t\tneededLinks: 0,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 1,\r\n\t\t\trequiredLinks: ['None'],\r\n\t\t\ttype: 'square',\r\n\t\t\tupdated: false,\r\n\t\t\trender: true,\r\n\t\t\tkeysToShow: ['binary']\r\n\t\t},\r\n\t\t{\r\n\t\t\tamplitude: 3,\r\n\t\t\tdata: [],\r\n\t\t\tfrequency: 12,\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'Carrier Wave',\r\n\t\t\tneededLinks: 0,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 1,\r\n\t\t\trequiredLinks: ['None'],\r\n\t\t\ttype: 'sine',\r\n\t\t\tupdated: false,\r\n\t\t\trender: true,\r\n\t\t\tdescription:\r\n\t\t\t\t'A carrier wave, carrier signal, or just carrier, is a waveform (usually sinusoid' +\r\n\t\t\t\t'al) that is modulated (modified) with an input signal for the purpose of conveyi' +\r\n\t\t\t\t'ng information.',\r\n\t\t\tkeysToShow: ['amplitude', 'frequency']\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'BPSK',\r\n\t\t\tneededLinks: 2,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 2,\r\n\t\t\trequiredLinks: ['Data', 'Carrier Wave'],\r\n\t\t\ttype: 'bpsk',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'Binary Phase Shift Keying (BPSK) is a two phase modulation scheme, where the 0’s' +\r\n\t\t\t\t' and 1’s in a binary message are represented by two different phase states in th' +\r\n\t\t\t\t'e carrier signal: θ=0° for binary 1 and θ=180° for binary 0.',\r\n\t\t\tkeysToShow: []\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'AWGN',\r\n\t\t\tneededLinks: 1,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 3,\r\n\t\t\trequiredLinks: ['Data'],\r\n\t\t\ttype: 'awgn',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'Additive white Gaussian noise (AWGN) is a basic noise model used in Information ' +\r\n\t\t\t\t'theory to mimic the effect of many random processes that occur in nature.',\r\n\t\t\tkeysToShow: []\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'FSK',\r\n\t\t\tneededLinks: 2,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 2,\r\n\t\t\trequiredLinks: ['Data', 'Carrier Wave'],\r\n\t\t\ttype: 'fsk',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'In Frequency Shify Keying (FSK) the frequency of the Carrier Wave is varied in a' +\r\n\t\t\t\t'ccordance with baseband digital input. Binary 1 and 0 is represented by two diff' +\r\n\t\t\t\t'erent carrier frequencies.',\r\n\t\t\tkeysToShow: []\r\n\t\t},\r\n\t\t{\r\n\t\t\tdata: [],\r\n\t\t\tlinked: false,\r\n\t\t\tlinks: [],\r\n\t\t\tname: 'ASK',\r\n\t\t\tneededLinks: 2,\r\n\t\t\tpaused: false,\r\n\t\t\tposition: {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t},\r\n\t\t\tpriority: 2,\r\n\t\t\trequiredLinks: ['Data', 'Carrier Wave'],\r\n\t\t\ttype: 'ask',\r\n\t\t\tupdated: false,\r\n\t\t\trender: false,\r\n\t\t\tdescription:\r\n\t\t\t\t'In an ASK system, the binary symbol 1 is represented by transmitting a fixed-amplitude carrier' +\r\n\t\t\t\t' wave and fixed frequency for a bit duration of T seconds. If the signal value is 1 then the' +\r\n\t\t\t\t'carrier signal will be transmitted; otherwise, a signal value of 0 will be transmitted.',\r\n\t\t\tkeysToShow: []\r\n\t\t}\r\n\t]\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/MainPage/App';\r\nimport LoginPage from './components/LoginPage/LoginPage';\r\nimport { Provider } from 'react-redux';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport mainPage from './components/MainPage/reducer';\r\nimport 'typeface-roboto';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { configureStore, getDefaultMiddleware } from 'redux-starter-kit';\r\n\r\nimport undoable from 'redux-undo';\r\n\r\n// We'll use redux-logger just as an example of adding another middleware\r\nimport logger from 'redux-logger';\r\n\r\nconst reducer = {\r\n\tmainPage: undoable(mainPage, { limit: 5 })\r\n};\r\n\r\nconst middleware = [ ...getDefaultMiddleware(), logger ];\r\n\r\nconst store = configureStore({\r\n\treducer,\r\n\tmiddleware,\r\n\tdevTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\n// const theme = createMuiTheme({   palette: {     background: { default:\r\n// \"#374785\", paper: \"#a8d0e6\" },     primary: { main: \"#24305e\" },\r\n// secondary: {       main: \"#a8d0e6\"     }   } });\r\n\r\nconst theme2 = createMuiTheme({\r\n\tpalette: {\r\n\t\tbackground: {\r\n\t\t\tdefault: '#d3e3fc',\r\n\t\t\tpaper: '#ffffff'\r\n\t\t},\r\n\t\tprimary: {\r\n\t\t\tmain: '#77a6f7'\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#a8d0e6'\r\n\t\t}\r\n\t}\r\n});\r\n// const theme3 = createMuiTheme({   palette: {     background: { default:\r\n// \"#f2f2f2\", paper: \"#ffffff\" },     primary: { main: \"#3b945e\" },\r\n// secondary: {       main: \"#57ba98\"     }   } });\r\n\r\nReactDOM.render(\r\n\t<Fragment>\r\n\t\t<Provider store={store}>\r\n\t\t\t<MuiThemeProvider theme={theme2}>\r\n\t\t\t\t<App />\r\n\t\t\t\t{/* <Router>\r\n\t\t\t\t\t\t<Route path=\"/Home\" component={App} />\r\n\t\t\t\t</Router> */}\r\n\t\t\t</MuiThemeProvider>\r\n\t\t</Provider>\r\n\t</Fragment>,\r\n\tdocument.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}